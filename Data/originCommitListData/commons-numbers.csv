hash,authors,committer,changes_FileNum,changed_files,message,bug_id
07443607d94fa3caf17dba8e9396c3907115c178,aherbert,aherbert,18,"['commons-numbers-angle/src/test/java/org/apache/commons/numbers/angle/UserGuideTest.java', 'commons-numbers-arrays/src/test/java/org/apache/commons/numbers/arrays/UserGuideTest.java', 'commons-numbers-combinatorics/src/test/java/org/apache/commons/numbers/combinatorics/UserGuideTest.java', 'commons-numbers-complex/src/test/java/org/apache/commons/numbers/complex/UserGuideTest.java', 'commons-numbers-core/src/test/java/org/apache/commons/numbers/core/UserGuideTest.java', 'commons-numbers-field/src/test/java/org/apache/commons/numbers/field/UserGuideTest.java', 'commons-numbers-fraction/src/test/java/org/apache/commons/numbers/fraction/GeneralizedContinuedFractionTest.java', 'commons-numbers-fraction/src/test/java/org/apache/commons/numbers/fraction/UserGuideTest.java', 'commons-numbers-gamma/src/test/java/org/apache/commons/numbers/gamma/UserGuideTest.java', 'commons-numbers-primes/src/test/java/org/apache/commons/numbers/primes/UserGuideTest.java', 'commons-numbers-quaternion/src/test/java/org/apache/commons/numbers/quaternion/SlerpTest.java', 'commons-numbers-quaternion/src/test/java/org/apache/commons/numbers/quaternion/UserGuideTest.java', 'commons-numbers-rootfinder/src/test/java/org/apache/commons/numbers/rootfinder/UserGuideTest.java', 'src/site/apt/userguide/index.apt', 'src/site/site.xml', 'src/site/xdoc/userguide/core.xml', 'src/site/xdoc/userguide/index.xml', 'src/site/xdoc/userguide/xdoc.xsl']","NUMBERS-70: Initial user guide

Add test classes to verify the user guide examples.",NUMBERS-70
cc7651678c392b66ae4063b124f66019f726d61a,aherbert,aherbert,1,['commons-numbers-core/src/test/java/org/apache/commons/numbers/core/PrecisionTest.java'],Correct PrecisionTest to target correct function,
62ddebb6d9698735ef8e530d29e7f6c193518f10,aherbert,aherbert,4,"['commons-numbers-fraction/src/test/java/org/apache/commons/numbers/fraction/BigFractionTest.java', 'commons-numbers-fraction/src/test/java/org/apache/commons/numbers/fraction/ContinuedFractionTest.java', 'commons-numbers-fraction/src/test/java/org/apache/commons/numbers/fraction/FractionTest.java', 'commons-numbers-primes/src/test/java/org/apache/commons/numbers/primes/PrimesTest.java']",Remove redundant throws Exception from test methods,
52c0d0af43aedf3f83b9953edac8b64a31383fa7,aherbert,aherbert,12,"['commons-numbers-angle/src/site/site.xml', 'commons-numbers-arrays/src/site/site.xml', 'commons-numbers-combinatorics/src/site/site.xml', 'commons-numbers-complex-streams/src/site/site.xml', 'commons-numbers-complex/src/site/site.xml', 'commons-numbers-core/src/site/site.xml', 'commons-numbers-field/src/site/site.xml', 'commons-numbers-fraction/src/site/site.xml', 'commons-numbers-gamma/src/site/site.xml', 'commons-numbers-primes/src/site/site.xml', 'commons-numbers-quaternion/src/site/site.xml', 'commons-numbers-rootfinder/src/site/site.xml']",Use a full URL allows a correct banner for the modules.,
6ff8af6cbff90d005ea2dd08272b7b5b4a0613ce,aherbert,aherbert,3,"['commons-numbers-bom/src/site/xdoc/index.xml', 'src/site/xdoc/index.xml', 'src/site/xdoc/release-history.xml']",Use Apache branding,
8f587293a64d18477879cee03029148a3eb455d3,aherbert,aherbert,12,"['commons-numbers-bom/LICENSE', 'commons-numbers-bom/NOTICE', 'commons-numbers-bom/README.md', 'commons-numbers-bom/pom.xml', 'commons-numbers-bom/src/main/resources-filtered/bom.xml', 'commons-numbers-bom/src/site/resources/style/module.css', 'commons-numbers-bom/src/site/site.xml', 'commons-numbers-bom/src/site/xdoc/index.xml', 'doc/release/release.howto.txt', 'pom.xml', 'src/changes/changes.xml', 'src/site/site.xml']","NUMBERS-190: Add a Bill of Materials module

Add a new module based on commons-rng-bom.

Configured maven-assembly-plugin skipAssembly in the parent pom as it
should only be configured in the dist-archive module. This allows the
snapshot BOM to be deployed to the snapshots repo using:

mvn deploy -Dgpg.skip

Deploy of the non-snapshot BOM will target the Apache release staging
repository and must be GPG signed.",NUMBERS-190
7a2401cfbebf6f89b585c0d6a08940954eb71cf8,aherbert,aherbert,1,['doc/release/release.howto.txt'],"Update release howto

Add note about version ordering.

Copy some additional details from the RNG release howto.",
b83f76043146ad3dd5ddecc44034446491e1696d,aherbert,aherbert,1,['src/changes/changes.xml'],Clean up changes description,
f9d5fec67812ca455e65af9974f38ad9d1332988,aherbert,aherbert,1,['commons-numbers-gamma/src/main/java/org/apache/commons/numbers/gamma/SpecialMath.java'],Make internal helper class package-private,
c7f439f58a24d2410bcc6d5fd24ac10514ac1874,aherbert,aherbert,3,"['commons-numbers-fraction/src/main/java/org/apache/commons/numbers/fraction/GeneralizedContinuedFraction.java', 'commons-numbers-gamma/src/main/java/org/apache/commons/numbers/gamma/GammaRatio.java', 'commons-numbers-gamma/src/main/java/org/apache/commons/numbers/gamma/SpecialMath.java']",Add since tags,
db2a13ae42727be2761c78fffca8c419edde1ccc,aherbert,aherbert,1,['src/site/xdoc/index.xml'],Update main site page index to include all modules,
23fa9531a46790e9c5907c0e692ec35601347638,aherbert,aherbert,1,['doc/release/release.howto.txt'],"Update test command

dryRun flag is set in the test-deploy profile

site:stage is required for multi-module site",
d0d73829d0766ff985a585cacdaf77e0e9873a63,aherbert,aherbert,2,"['src/site/xdoc/userguide/core.xml', 'src/site/xdoc/userguide/index.xml']",Remove xdoc processing instruction with reserved name,
824e9e02c28e0899bbad1f740452d126409516fc,aherbert,aherbert,14,"['commons-numbers-angle/README.md', 'commons-numbers-arrays/README.md', 'commons-numbers-combinatorics/README.md', 'commons-numbers-complex-streams/README.md', 'commons-numbers-complex/README.md', 'commons-numbers-core/README.md', 'commons-numbers-examples/README.md', 'commons-numbers-examples/examples-jmh/README.md', 'commons-numbers-field/README.md', 'commons-numbers-fraction/README.md', 'commons-numbers-gamma/README.md', 'commons-numbers-primes/README.md', 'commons-numbers-quaternion/README.md', 'commons-numbers-rootfinder/README.md']",Use mvn for README contributing build goal,
0cd0545886661c8efbecdb55726dddbb0b0321a6,aherbert,aherbert,1,['commons-numbers-primes/src/test/java/org/apache/commons/numbers/primes/SmallPrimesTest.java'],Use diamond operator,
3bdbf7cc62b0e86ce466c838c430c9cd45ce6447,aherbert,aherbert,1,['pom.xml'],Move dependency version properties to a section,
4061b84a40c78add32b66d3362c5f5a6c9fc996c,aherbert,aherbert,1,['pom.xml'],Drop antrun 1.8 for 3.1.0 in commons parent,
053c39335eebd535c9797a3a4477c9417a2f2ccf,aherbert,aherbert,1,['commons-numbers-examples/pom.xml'],Remove deleted version property from plugin configuration,
8b2bd19b0a0476f74c0718cf6063dcba52a2171e,aherbert,aherbert,1,['pom.xml'],Update japicmp 0.15.3 to CP 0.16.0,
5de3fa8d4117a4dff7d195e0f06d9f830b0a3c1c,aherbert,aherbert,1,['pom.xml'],Update jacoco 0.8.7 to CP 0.8.8,
817225c27e24ced1864494c537caab71a2e05417,aherbert,aherbert,1,['pom.xml'],Update spotbugs 4.4.2 to CP 4.7.2.0,
b22db497840e37d3e8599604ba41016b7070edb6,aherbert,aherbert,14,"['commons-numbers-angle/pom.xml', 'commons-numbers-arrays/pom.xml', 'commons-numbers-combinatorics/pom.xml', 'commons-numbers-complex-streams/pom.xml', 'commons-numbers-complex/pom.xml', 'commons-numbers-core/pom.xml', 'commons-numbers-examples/pom.xml', 'commons-numbers-field/pom.xml', 'commons-numbers-fraction/pom.xml', 'commons-numbers-gamma/pom.xml', 'commons-numbers-primes/pom.xml', 'commons-numbers-quaternion/pom.xml', 'commons-numbers-rootfinder/pom.xml', 'pom.xml']","Update changes report configuration to allow component reports

Remove configuration that is a duplicate of commons-parent",
7a671c475347111bc2df7b0a0188e31879fe1a61,aherbert,aherbert,1,['pom.xml'],Reorder properties to match commons RNG parent.,
73eec505b27f82403111140799b7f04c5296416f,aherbert,aherbert,1,['src/main/resources/checkstyle/checkstyle.xml'],"Update checkstyle config using latest example

Updated from:
https://github.com/checkstyle/checkstyle/blob/master/src/main/resources/sun_checks.xml",
e790ce4e67b2f1716b910c17b26f066f63d8572f,aherbert,aherbert,1,['pom.xml'],"Drop checkstyle 3.1.2 for 3.2.0 in commons parent

Update checkstyle dependency 8.45 for 9.3 in commons parent",
ed65141deab815ba39109d65e0927addbe064cb8,aherbert,aherbert,1,['pom.xml'],Drop junit 5.4.2 for 5.9.0 in commons parent,
45cccae7c33a414f2faf377bbb7592d00c195b41,aherbert,aherbert,2,"['pom.xml', 'src/main/resources/pmd/pmd-ruleset.xml']","Update PMD version to commons parent

plugin 3.13.0 -> 3.19.0
pmd-impl 6.21.0 -> 6.49.0

Update pmd ruleset",
e4687a3c5d02d2732a0f7b2fb07b0d8b5b93a7d3,aherbert,aherbert,2,"['pom.xml', 'src/main/resources/spotbugs/spotbugs-exclude-filter.xml']","Update to commons-parent 54

Suppress spotbugs errors from intentional use of floating-point loop
counters.

Disable CycloneDX as config is incorrect for multi-module builds.

Override ciManagement section from the parent.

Set commons.release.isDistModule to false in the parent.

Add rat exclusion for .gitattributes.",
3f16cd088726de7162b2942605c38a1c85329939,aherbert,aherbert,2,"['doc/release/copyLongTermJavadoc.sh', 'src/main/resources/pmd/pmd-ruleset.xml']",Update references to rng to numbers,
ff88badfeb6b9e4c1a330a228862f021b528b05e,aherbert,aherbert,1,['pom.xml'],"Update commons RNG 1.4 to 1.5

Use RNG BOM for dependency management.",
7e88be936f38ec41f5184d546a78a687696f6729,sebbASF,sebbASF,2,"['.github/workflows/coverage.yml', '.github/workflows/maven.yml']",Don't persist credentials unnecessarily,
b04dbc113294b05be92a635429df0bc4d778a03c,aherbert,aherbert,1,['pom.xml'],"Remove javadoc links to JDK.

The links configured in CP create redirect warnings on JDK 17 which fail
the build. JDK links are automatically added by the javadoc plugin based
on the target version.",
06175fc15719cda6cf5ae494d426218c888b921f,garydgregory,garydgregory,1,['commons-numbers-complex/src/main/java/org/apache/commons/numbers/complex/Complex.java'],Javadoc @link tags do not need to use a FQCN for classes in java.lang,
c69c31421f38a919539087bd6957fc6ec27e01ca,garydgregory,garydgregory,1,['commons-numbers-complex/src/main/java/org/apache/commons/numbers/complex/Complex.java'],Javadoc @see tags do not need to use a FQCN for classes in java.lang,
8587cdf3da1ba12100f7a1da5494ef447ef2190b,garydgregory,garydgregory,1,['README.md'],Update README to use the default Maven goal,
bd454efcf893298fbe875c070bd7c99744e792d4,sumanth-rajkumar,aherbert,1,['pom.xml'],added my name to contributor list,
1098a777a69de8c5c7c8ebda40823184a4856de8,aherbert,aherbert,2,"['.github/workflows/coverage.yml', '.github/workflows/maven.yml']",Migrate workflows from adopt to temurin,
02684466752a3a90e6e974e42b1a56d5013a756e,aherbert,aherbert,2,"['.github/workflows/coverage.yml', '.github/workflows/maven.yml']",Trim whitespace,
6be5bb73e367a1bbe22dce9e0a2bd5985b879097,aherbert,aherbert,2,"['.github/workflows/coverage.yml', '.github/workflows/maven.yml']",Use GitHub Actions setup-java Maven cache property,
1a8a73fc9dadee2e44313e80ef63cf6c6ff848a4,arturobernalg,aherbert,1,['commons-numbers-combinatorics/src/main/java/org/apache/commons/numbers/combinatorics/LogFactorial.java'],"* Use Math.min
* Use System.arraycopy

Revert some changes.",
3c446b93903cb94bd25d91ac4e5de1b9971c6d36,aherbert,aherbert,1,['.asf.yaml'],Activate notifications for GH actions,
a0f7a0d450e72e4c115de4b0911cbe8db5b1cb04,aherbert,aherbert,1,['commons-numbers-examples/examples-jmh/pom.xml'],Merge duplicate javadoc plugin declaration,
025bb7af30abd47581f0f7e8deb650db6767e107,aherbert,aherbert,1,['src/main/resources/checkstyle/checkstyle.xml'],Require method javadoc for private scope,
5b91702dbc7fc844db953722645fc8a90126fc10,aherbert,aherbert,1,['commons-numbers-examples/examples-jmh/pom.xml'],Do not fail on javadoc warnings in the JMH module,
f31cf16cff3d7462ca4bad3c0240ba5935d94785,aherbert,aherbert,1,['commons-numbers-fraction/src/main/java/org/apache/commons/numbers/fraction/BigFraction.java'],Correct erasure of unnecessary parentheses,
1497df18dfb77f454450d71733c31a47560c6845,aherbert,aherbert,9,"['commons-numbers-complex/src/main/java/org/apache/commons/numbers/complex/Complex.java', 'commons-numbers-core/src/main/java/org/apache/commons/numbers/core/ArithmeticUtils.java', 'commons-numbers-core/src/main/java/org/apache/commons/numbers/core/Precision.java', 'commons-numbers-fraction/src/main/java/org/apache/commons/numbers/fraction/BigFraction.java', 'commons-numbers-gamma/src/main/java/org/apache/commons/numbers/gamma/BoostMath.java', 'commons-numbers-gamma/src/main/java/org/apache/commons/numbers/gamma/BoostTools.java', 'commons-numbers-primes/src/main/java/org/apache/commons/numbers/primes/SmallPrimes.java', 'pom.xml', 'src/main/resources/checkstyle/checkstyle-suppressions.xml']","Update checkstyle

plugin 3.1.0 -> 3.1.2
dependency 8.29 -> 8.45

Correct unnecessary parentheses in code or using suppressions",
23db1a4b3f18cf021808248be24f05b05f2f677f,aherbert,aherbert,1,['src/main/resources/checkstyle/checkstyle.xml'],Add missing javadoc checks,
a80a3154725c45964d529cbedfe7bb046f7700c6,aherbert,aherbert,1,['pom.xml'],Fail javadoc on warnings,
310a1a589fb5faedd8fdc2915f52a2fea52a6071,aherbert,aherbert,1,['pom.xml'],Fail build on coverage checks,
910e04774631a9b753bb451f6135e8f5be18c334,aherbert,aherbert,1,['src/site/xdoc/mail-lists.xml'],Remove block level element from inside <p> tags,
8839120e250f6ee25c90ab425f9a1423b435643b,aherbert,aherbert,1,['src/site/xdoc/developers.xml'],"Update developers contributing guide

Ensure correct HTML formatting.

Remove reference to building with ant.

Use https and correct links.

Detail contributing by PR.

Update maven set-up and commit message guide.",
9feddde44238d9aeb40fda1a3c782d874bbb8e00,aherbert,aherbert,1,['pom.xml'],Remove travis profile,
0f5523c6f180a736484c77ea3c4676dfd5876fae,aherbert,aherbert,1,['.travis.yml'],Disable Travis CI,
58c5fe149d9f29309304cf3936ee6188531ab90c,aherbert,aherbert,13,"['README.md', 'commons-numbers-angle/README.md', 'commons-numbers-arrays/README.md', 'commons-numbers-combinatorics/README.md', 'commons-numbers-complex-streams/README.md', 'commons-numbers-complex/README.md', 'commons-numbers-core/README.md', 'commons-numbers-field/README.md', 'commons-numbers-fraction/README.md', 'commons-numbers-gamma/README.md', 'commons-numbers-primes/README.md', 'commons-numbers-quaternion/README.md', 'commons-numbers-rootfinder/README.md']","Update README badges

coveralls to codecov
travis to GH actions",
3bc0465bb546cad548828657227e21038216b2ac,aherbert,aherbert,1,['.github/workflows/maven.yml'],"Use a single build goal

This allows the examples modules to use the dependency artifacts from
the build and not the local repository.",
8199fb72c4ae6894bca77efe11c8f2b9fb6025ff,aherbert,aherbert,1,['.github/workflows/maven.yml'],Use greater than expression in GH workflow,
b6c1ac90804e6968e05ffb6a68dbc86563682a5a,aherbert,aherbert,1,['commons-numbers-examples/examples-jmh/pom.xml'],Skip spotbugs in JMH module,
46c59a12c6538aba0b4147a82754671fc7893610,aherbert,aherbert,1,['commons-numbers-examples/examples-jmh/pom.xml'],Ignore generated files from checkstyle,
e572e48723a4f5444c5223bb1f03d56019e453f1,aherbert,aherbert,1,['.github/workflows/maven.yml'],Build examples on JDK 17,
c2676e7d4e64ce27b6b49d8ef1b306e569c1b316,aherbert,aherbert,1,['commons-numbers-examples/examples-jmh/pom.xml'],"Update javadoc plugin config.

Ignore JMH generated files.

Drop duplicate plugin configuration. This is inherited from the parent.",
a058b4b1a1131184c355e518cc95aa1a4d310570,aherbert,aherbert,1,['commons-numbers-examples/examples-jmh/pom.xml'],Upgrade JMH version,
4211c297284789511631b1a91710b43b3f59326e,aherbert,aherbert,1,['.github/workflows/coverage.yml'],Correct files entry,
76724a3186ec8ad457f5bf74fa87740274ab45ce,aherbert,aherbert,1,['.github/workflows/coverage.yml'],All coverage files on a single line,
27ae5d524130461d10ffef96534284da504380d0,aherbert,aherbert,1,['.github/workflows/coverage.yml'],Quote the files for coverage submission,
c5130bf4f5c4b93966114b1c6c9f887e01d3feac,aherbert,aherbert,1,['.github/workflows/maven.yml'],Simplify GH build workflow for examples,
a84cc75c31012013cfe5779d077cd97db52ecebc,aherbert,aherbert,1,['commons-numbers-examples/pom.xml'],Do not fail PMD in examples modules,
f41eefd6ed381e4b62496a9bfde1d874e6b141cf,aherbert,aherbert,10,"['commons-numbers-examples/examples-jmh/src/main/java/org/apache/commons/numbers/examples/jmh/complex/ComplexPerformance.java', 'commons-numbers-examples/examples-jmh/src/main/java/org/apache/commons/numbers/examples/jmh/core/DoubleSplitPerformance.java', 'commons-numbers-examples/examples-jmh/src/main/java/org/apache/commons/numbers/examples/jmh/core/EuclideanNormAlgorithmPerformance.java', 'commons-numbers-examples/examples-jmh/src/main/java/org/apache/commons/numbers/examples/jmh/core/LinearCombinationPerformance.java', 'commons-numbers-examples/examples-jmh/src/main/java/org/apache/commons/numbers/examples/jmh/core/NormPerformance.java', 'commons-numbers-examples/examples-jmh/src/main/java/org/apache/commons/numbers/examples/jmh/core/StickySumPerformance.java', 'commons-numbers-examples/examples-jmh/src/main/java/org/apache/commons/numbers/examples/jmh/core/SumPerformance.java', 'commons-numbers-examples/examples-jmh/src/test/java/org/apache/commons/numbers/examples/jmh/core/EuclideanNormAccuracyTest.java', 'commons-numbers-examples/examples-jmh/src/test/java/org/apache/commons/numbers/examples/jmh/core/LinearCombinationAccuracyTest.java', 'commons-numbers-examples/examples-jmh/src/test/java/org/apache/commons/numbers/examples/jmh/core/LinearCombinationsTest.java']",Replace deprecated RandomSource.create,
1b08279b019f5cbc3937f9574cc6122bc1cb0f23,aherbert,aherbert,1,['.github/workflows/maven.yml'],Build the correct examples project,
92127c71388e2cad56026d35aead1b6de9fa25b6,aherbert,aherbert,1,['commons-numbers-fraction/src/main/java/org/apache/commons/numbers/fraction/GeneralizedContinuedFraction.java'],Remove HTML headings tags,
2263f20bdeda7a003e091e017468608dc913f25e,aherbert,aherbert,1,['.github/workflows/maven.yml'],Correct java 11 build step,
1e8fb4696e00d4a5cd0bc910fa2c5baed3663707,aherbert,aherbert,2,"['.github/workflows/coverage.yml', '.github/workflows/maven.yml']","Add GH actions for build and coverage

Build targets JDK 8, 11, 17",
dbde00e94415e807593a888132ffe66ef79b99e6,aherbert,aherbert,1,['commons-numbers-gamma/src/test/java/org/apache/commons/numbers/gamma/BoostGammaTest.java'],Javadoc typo,
43c3ebe664f401aadcb3853177ec9de0a67aa138,aherbert,aherbert,3,"['commons-numbers-gamma/src/main/java/org/apache/commons/numbers/gamma/BoostBeta.java', 'commons-numbers-gamma/src/main/java/org/apache/commons/numbers/gamma/BoostGamma.java', 'commons-numbers-gamma/src/test/java/org/apache/commons/numbers/gamma/BoostGammaTest.java']",Sonar fix: Use constants in place of methods for constant values,
fdd51cf920ba7c9b0e9163436d161e5c212d5b91,aherbert,aherbert,1,['commons-numbers-gamma/src/test/java/org/apache/commons/numbers/gamma/BoostGammaTest.java'],Sonar fix: custom assertEquals method so that expected can be last,
9de1d4816e906e647e22fe12d62f659ddf474506,aherbert,aherbert,1,['commons-numbers-gamma/src/main/java/org/apache/commons/numbers/gamma/BoostGamma.java'],Sonar fix: Extract nested ternary,
63b2ff5aeb9c40d5ff6a7893902c67da416b23ba,aherbert,aherbert,1,['commons-numbers-gamma/src/main/java/org/apache/commons/numbers/gamma/BoostBeta.java'],Sonar fix: remove useless assignment,
92413c8b2a776b3d6eaf97a143fee5737fadfa20,aherbert,aherbert,15,"['commons-numbers-complex-streams/src/test/java/org/apache/commons/numbers/complex/streams/TestUtils.java', 'commons-numbers-core/src/test/java/org/apache/commons/numbers/core/ArithmeticUtilsTest.java', 'commons-numbers-core/src/test/java/org/apache/commons/numbers/core/NormTest.java', 'commons-numbers-core/src/test/java/org/apache/commons/numbers/core/TestUtils.java', 'commons-numbers-examples/examples-jmh/src/main/java/org/apache/commons/numbers/examples/jmh/core/EuclideanNormAlgorithmPerformance.java', 'commons-numbers-fraction/src/test/java/org/apache/commons/numbers/fraction/CommonsLangPortedFractionTest.java', 'commons-numbers-gamma/src/main/java/org/apache/commons/numbers/gamma/BoostTools.java', 'commons-numbers-gamma/src/main/java/org/apache/commons/numbers/gamma/Erfc.java', 'commons-numbers-gamma/src/main/java/org/apache/commons/numbers/gamma/Erfcx.java', 'commons-numbers-gamma/src/main/java/org/apache/commons/numbers/gamma/Gamma.java', 'commons-numbers-gamma/src/main/java/org/apache/commons/numbers/gamma/GammaRatio.java', 'commons-numbers-gamma/src/main/java/org/apache/commons/numbers/gamma/SpecialMath.java', 'commons-numbers-gamma/src/test/java/org/apache/commons/numbers/gamma/BoostBetaTest.java', 'commons-numbers-primes/src/main/java/org/apache/commons/numbers/primes/SmallPrimes.java', 'commons-numbers-primes/src/test/java/org/apache/commons/numbers/primes/PrimesTest.java']",Remove extra new lines,
43b51cb563a3cb091708558f8a520ae534a644e1,aherbert,aherbert,1,['commons-numbers-gamma/src/main/java/org/apache/commons/numbers/gamma/Erfcx.java'],Javadoc typo,
b1afbe0c4310928401058dc73f3ac1a5f13b18f9,garydgregory,garydgregory,1,['SECURITY.md'],Add SECURITY.md,
fc53c296dd2c75ca700d3ea33f59300f875f6653,garydgregory,garydgregory,1,['CODE_OF_CONDUCT.md'],Add CODE_OF_CONDUCT.md,
49d9b54864efeed65ab7366f02ea6aac6591dcc6,aherbert,aherbert,3,"['commons-numbers-core/src/main/java/org/apache/commons/numbers/core/Precision.java', 'commons-numbers-core/src/test/java/org/apache/commons/numbers/core/PrecisionTest.java', 'src/changes/changes.xml']","NUMBERS-185: Allow Precision.compareTo using a max ULP to be used for
sorting.

Updated tests to ensure compareTo is symmetric for the arguments.

Updated the documentation to state expected behaviour with NaN
arguments.",NUMBERS-185
3be4da9c24b0bde0ffc8e68387d2b03c966365cd,aherbert,aherbert,1,['commons-numbers-core/src/main/java/org/apache/commons/numbers/core/Precision.java'],Use Double.MIN_VALUE for the SAFE_MIN constant.,
28337327ecb68421cd7e240fc7515bbb2c266070,aherbert,aherbert,1,['commons-numbers-core/src/test/java/org/apache/commons/numbers/core/PrecisionTest.java'],"Ensure Precision equals is symmetric

Update the tests to use an interface that asserts the return value is
the same when arguments are reversed.",
286932d1306606e927c417409c14bb49751c61f8,aherbert,aherbert,3,"['commons-numbers-core/src/main/java/org/apache/commons/numbers/core/Precision.java', 'commons-numbers-core/src/test/java/org/apache/commons/numbers/core/PrecisionTest.java', 'src/changes/changes.xml']",NUMBERS-184: Reduce operations in Precision.equals using a maxUlps,NUMBERS-184
448c7a3ae7bdf10f41c4462398e54cc7177d6c46,,,3,"['commons-numbers-complex/src/test/java/org/apache/commons/numbers/complex/CStandardTest.java', 'commons-numbers-complex/src/test/java/org/apache/commons/numbers/complex/ComplexTest.java', 'commons-numbers-core/src/test/java/org/apache/commons/numbers/core/NormTest.java']",Replace deprecated calls.,
6251464d735e885e0fa27cd1995210283a13a0ef,,,1,['pom.xml'],Upgrade parent POM.,
c32f544c28a64dc569392ecc567c79d9d7ee85eb,aherbert,aherbert,1,['src/changes/changes.xml'],NUMBERS-181: Track changes,NUMBERS-181
e7b1d6c7a9a5d654189650a1dd30180ae27552f7,aherbert,aherbert,6,"['commons-numbers-gamma/src/main/java/org/apache/commons/numbers/gamma/Beta.java', 'commons-numbers-gamma/src/main/java/org/apache/commons/numbers/gamma/IncompleteBeta.java', 'commons-numbers-gamma/src/main/java/org/apache/commons/numbers/gamma/RegularizedBeta.java', 'commons-numbers-gamma/src/test/java/org/apache/commons/numbers/gamma/BetaTest.java', 'commons-numbers-gamma/src/test/java/org/apache/commons/numbers/gamma/IncompleteBetaTest.java', 'commons-numbers-gamma/src/test/java/org/apache/commons/numbers/gamma/RegularizedBetaTest.java']",NUMBERS-181: New public API for beta functions,NUMBERS-181
ad04a0700e282b0b7f303a5fc7d2436555f040c6,aherbert,aherbert,20,"['commons-numbers-gamma/src/main/java/org/apache/commons/numbers/gamma/BoostBeta.java', 'commons-numbers-gamma/src/main/java/org/apache/commons/numbers/gamma/BoostGamma.java', 'commons-numbers-gamma/src/test/java/org/apache/commons/numbers/gamma/BoostBetaTest.java', 'commons-numbers-gamma/src/test/resources/org/apache/commons/numbers/gamma/beta_exp_data.csv', 'commons-numbers-gamma/src/test/resources/org/apache/commons/numbers/gamma/beta_med_data.csv', 'commons-numbers-gamma/src/test/resources/org/apache/commons/numbers/gamma/beta_small_data.csv', 'commons-numbers-gamma/src/test/resources/org/apache/commons/numbers/gamma/binomial_extra_large_data.csv', 'commons-numbers-gamma/src/test/resources/org/apache/commons/numbers/gamma/binomial_huge_data.csv', 'commons-numbers-gamma/src/test/resources/org/apache/commons/numbers/gamma/binomial_large_data.csv', 'commons-numbers-gamma/src/test/resources/org/apache/commons/numbers/gamma/binomial_small_data.csv', 'commons-numbers-gamma/src/test/resources/org/apache/commons/numbers/gamma/ibeta_derivative_large_data.csv', 'commons-numbers-gamma/src/test/resources/org/apache/commons/numbers/gamma/ibeta_derivative_med_data.csv', 'commons-numbers-gamma/src/test/resources/org/apache/commons/numbers/gamma/ibeta_derivative_small_data.csv', 'commons-numbers-gamma/src/test/resources/org/apache/commons/numbers/gamma/ibeta_derivative_small_int_data.csv', 'commons-numbers-gamma/src/test/resources/org/apache/commons/numbers/gamma/ibeta_large_data.csv', 'commons-numbers-gamma/src/test/resources/org/apache/commons/numbers/gamma/ibeta_med_data.csv', 'commons-numbers-gamma/src/test/resources/org/apache/commons/numbers/gamma/ibeta_small_data.csv', 'commons-numbers-gamma/src/test/resources/org/apache/commons/numbers/gamma/ibeta_small_int_data.csv', 'src/main/resources/checkstyle/checkstyle-suppressions.xml', 'src/main/resources/pmd/pmd-ruleset.xml']",NUMBERS-181: Port the Boost beta functions,NUMBERS-181
5a9f808ec97470a044212b445e62b6cb9fd1c02e,aherbert,aherbert,2,"['commons-numbers-gamma/src/test/java/org/apache/commons/numbers/gamma/BoostGammaTest.java', 'commons-numbers-gamma/src/test/java/org/apache/commons/numbers/gamma/DataReader.java']",Move DataReader to package level class,
d64d4ba5a344ef92fc89ab9547f7fd146a77fd27,aherbert,aherbert,5,"['commons-numbers-gamma/src/main/java/org/apache/commons/numbers/gamma/BoostGamma.java', 'commons-numbers-gamma/src/main/java/org/apache/commons/numbers/gamma/IncompleteGamma.java', 'commons-numbers-gamma/src/main/java/org/apache/commons/numbers/gamma/Policy.java', 'commons-numbers-gamma/src/main/java/org/apache/commons/numbers/gamma/RegularizedGamma.java', 'commons-numbers-gamma/src/test/java/org/apache/commons/numbers/gamma/BoostGammaTest.java']",Move BoostGamma.Policy to package level class,
f83679ed7e30ee65b136ef7bc397efcb98346eee,aherbert,aherbert,1,['src/changes/changes.xml'],NUMBERS-183: Track changes,NUMBERS-183
d22325416794452dcf19d998374b4dd1519523bf,aherbert,aherbert,7,"['commons-numbers-combinatorics/src/main/java/org/apache/commons/numbers/combinatorics/BinomialCoefficient.java', 'commons-numbers-combinatorics/src/main/java/org/apache/commons/numbers/combinatorics/BinomialCoefficientDouble.java', 'commons-numbers-combinatorics/src/main/java/org/apache/commons/numbers/combinatorics/Factorial.java', 'commons-numbers-combinatorics/src/main/java/org/apache/commons/numbers/combinatorics/LogBinomialCoefficient.java', 'commons-numbers-combinatorics/src/test/java/org/apache/commons/numbers/combinatorics/BinomialCoefficientDoubleTest.java', 'commons-numbers-combinatorics/src/test/java/org/apache/commons/numbers/combinatorics/BinomialCoefficientTest.java', 'commons-numbers-combinatorics/src/test/java/org/apache/commons/numbers/combinatorics/LogBinomialCoefficientTest.java']","NUMBERS-183: Improve binomial coefficient classes

Refactor the tests to use JUnit 5 parameterized test features.

Refactor the test for all binomial coefficients up to n=200 to compute
the result using n! / (n-k)! / k!. Removes the caching test
implementation which only works for results within a long datatype. This
has been updated for BinomialCoefficientDouble and
LogBinomialCoefficient to test the result is correct even when a long
overflows.

Update the implementations:

- Avoid recursive method call if k > n/2.

- Add early exit if the result cannot fit into the output datatype. This
is k >= 34 for long, and k >= 515 for a double.

- BinomialCoefficientDouble: Use the precomputed factorials to compute
n! / k! / (n-k)! if possible.

- BinomialCoefficientDouble: avoid overflow by checking the intermediate
result

- LogBinomialCoefficient: Compute the terms using the LogBeta class",NUMBERS-183
083b14e8fd8d08bcfc47c675f1ada44b58d1e70a,aherbert,aherbert,14,"['NOTICE', 'commons-numbers-angle/NOTICE', 'commons-numbers-arrays/NOTICE', 'commons-numbers-combinatorics/NOTICE', 'commons-numbers-complex-streams/NOTICE', 'commons-numbers-complex/NOTICE', 'commons-numbers-core/NOTICE', 'commons-numbers-examples/NOTICE', 'commons-numbers-examples/examples-jmh/NOTICE', 'commons-numbers-field/NOTICE', 'commons-numbers-fraction/NOTICE', 'commons-numbers-gamma/NOTICE', 'commons-numbers-quaternion/NOTICE', 'commons-numbers-rootfinder/NOTICE']",Update NOTICE to 2022,
23897b03807b609fb757ba675c751238cb4a4391,aherbert,aherbert,3,"['commons-numbers-gamma/src/main/java/org/apache/commons/numbers/gamma/LogBeta.java', 'commons-numbers-gamma/src/test/java/org/apache/commons/numbers/gamma/LogBetaTest.java', 'src/changes/changes.xml']",NUMBERS-182: Avoid overflow in LogBeta for tiny arguments,NUMBERS-182
fdc65c32b3c6e675ccfb3343ffe0912ef497f616,aherbert,aherbert,1,['src/changes/changes.xml'],NUMBERS-180: Track changes,NUMBERS-180
2e4cbe88dcc06ad6dc8276eb298c747b49494a44,aherbert,aherbert,9,"['commons-numbers-gamma/src/main/java/org/apache/commons/numbers/gamma/BoostGamma.java', 'commons-numbers-gamma/src/main/java/org/apache/commons/numbers/gamma/GammaRatio.java', 'commons-numbers-gamma/src/test/java/org/apache/commons/numbers/gamma/BoostGammaTest.java', 'commons-numbers-gamma/src/test/java/org/apache/commons/numbers/gamma/GammaRatioTest.java', 'commons-numbers-gamma/src/test/resources/org/apache/commons/numbers/gamma/gamma_delta_ratio_data.csv', 'commons-numbers-gamma/src/test/resources/org/apache/commons/numbers/gamma/gamma_delta_ratio_int2_data.csv', 'commons-numbers-gamma/src/test/resources/org/apache/commons/numbers/gamma/gamma_delta_ratio_int_data.csv', 'commons-numbers-gamma/src/test/resources/org/apache/commons/numbers/gamma/gamma_ratio_data.csv', 'src/main/resources/checkstyle/checkstyle-suppressions.xml']","NUMBERS-180: Gamma ratio and delta ratio

Added support for the ratio of two gamma functions. Copied the test
data from the source Boost implementation.",NUMBERS-180
366f9d537c878c14a7b5c778935b670aa040defe,aherbert,aherbert,2,"['commons-numbers-gamma/src/main/java/org/apache/commons/numbers/gamma/BoostMath.java', 'commons-numbers-gamma/src/main/java/org/apache/commons/numbers/gamma/BoostTools.java']",Remove public from package level utility class,
765afd0beccaa420db537ce1c0bf668c8fb913fc,aherbert,aherbert,1,['commons-numbers-rootfinder/src/main/java/org/apache/commons/numbers/rootfinder/BrentSolver.java'],"Remove redundant variable assignment

Use e directly and update to d in the condition that accepts the
interpolation. The condition that rejects interpolation updates e
anyway.",
abba5dabdd6d800f915a4147af7987ecb9b2d20d,aherbert,aherbert,2,"['commons-numbers-rootfinder/pom.xml', 'commons-numbers-rootfinder/src/main/java/org/apache/commons/numbers/rootfinder/BrentSolver.java']","Remove dependency on Precision

Since this was used to compare to zero the method can be more simply
implemented:

Precision.equals(b, 0) == Math.abs(b) <= Double.MIN_VALUE",
20f1db2f96d05e7b1889bf1e9b2fdc57d3da5c7a,aherbert,aherbert,2,"['commons-numbers-rootfinder/src/main/java/org/apache/commons/numbers/rootfinder/BrentSolver.java', 'commons-numbers-rootfinder/src/test/java/org/apache/commons/numbers/rootfinder/BrentSolverTest.java']","Avoid underflow computing the initial value

This is an extreme edge case for the solver called with no bracketing.
It ensures the bracket can be used to return a value if within the
current function accuracy tolerance.",
95fe6a85a4672180f91160c435f39c2a49377a6e,aherbert,aherbert,3,"['commons-numbers-rootfinder/src/main/java/org/apache/commons/numbers/rootfinder/BrentSolver.java', 'commons-numbers-rootfinder/src/test/java/org/apache/commons/numbers/rootfinder/BrentSolverTest.java', 'src/changes/changes.xml']",Avoid overflow computing the initial value,
842c4b80ccac4ca218a260194f4f955f344fd243,aherbert,aherbert,1,['commons-numbers-gamma/src/main/java/org/apache/commons/numbers/gamma/BoostGamma.java'],"NUMBERS-179: Update threshold in regularisedGammaPrefix

Modifies the threshold from a > 150 (Boost version) to a > 128.",NUMBERS-179
45e6f56f310bafe478ce77e7d84439e21015e84d,aherbert,aherbert,1,['commons-numbers-gamma/src/main/java/org/apache/commons/numbers/gamma/BoostGamma.java'],"Lower threshold for a ~ z

This threshold requires optimisation. The threshold was too high to pass
existing tests in Commons Statistics (see STATISTICS-39).",
10849175095e3569e2f096f3f967ce699e39be0a,aherbert,aherbert,1,['commons-numbers-gamma/src/main/java/org/apache/commons/numbers/gamma/BoostGamma.java'],"Move the direct computation before checks for base near 1

When the direct computation can be used then there is no requirement for
the Lanczos code that uses pow(z / (z+g-0.5), a). Thus there is no need
to avoid a base near 1 in the power function. This check only applies
after the direct computation has been eliminated.",
67d49edeb3e7c674b02e0cb4842b2a18fb1c5be1,aherbert,aherbert,1,['commons-numbers-gamma/src/test/java/org/apache/commons/numbers/gamma/BoostGammaTest.java'],Add another log1pmx test case to hit code coverage,
797eba323327f8bc232213c25a5b1ccbfadbc2bb,aherbert,aherbert,12,"['commons-numbers-gamma/src/main/java/org/apache/commons/numbers/gamma/BoostErf.java', 'commons-numbers-gamma/src/main/java/org/apache/commons/numbers/gamma/Erfcx.java', 'commons-numbers-gamma/src/test/java/org/apache/commons/numbers/gamma/BoostErfTest.java', 'commons-numbers-gamma/src/test/java/org/apache/commons/numbers/gamma/ErfcxTest.java', 'commons-numbers-gamma/src/test/resources/org/apache/commons/numbers/gamma/erfcx_huge_data.csv', 'commons-numbers-gamma/src/test/resources/org/apache/commons/numbers/gamma/erfcx_large_data.csv', 'commons-numbers-gamma/src/test/resources/org/apache/commons/numbers/gamma/erfcx_medium_data.csv', 'commons-numbers-gamma/src/test/resources/org/apache/commons/numbers/gamma/erfcx_neg_data.csv', 'commons-numbers-gamma/src/test/resources/org/apache/commons/numbers/gamma/erfcx_neg_medium_data.csv', 'commons-numbers-gamma/src/test/resources/org/apache/commons/numbers/gamma/erfcx_neg_small_data.csv', 'commons-numbers-gamma/src/test/resources/org/apache/commons/numbers/gamma/erfcx_small_data.csv', 'src/changes/changes.xml']","NUMBERS-177: Add scaled complementary error function Erfcx

Updates the rational function approximation for erfc(x > 4) to a
function valid for the approximation limit of erfcx (x ~ 6.71e7).

Improves the scaling by exp(-x*x) and exp(x*x).",NUMBERS-177
6ba410f24a351d47bc137daa9f0e8528ca0aea69,aherbert,aherbert,5,"['commons-numbers-combinatorics/src/main/java/org/apache/commons/numbers/combinatorics/Factorial.java', 'commons-numbers-combinatorics/src/main/java/org/apache/commons/numbers/combinatorics/FactorialDouble.java', 'commons-numbers-combinatorics/src/test/java/org/apache/commons/numbers/combinatorics/FactorialDoubleTest.java', 'commons-numbers-combinatorics/src/test/java/org/apache/commons/numbers/combinatorics/FactorialTest.java', 'src/changes/changes.xml']","NUMBERS-178: Add Factorial.doubleValue(int)

Deprecate the FactorialDouble class.",NUMBERS-178
7424cb5333fdacecec66943b80a8e49ee4b0cae7,aherbert,aherbert,3,"['commons-numbers-gamma/src/main/java/org/apache/commons/numbers/gamma/IncompleteGamma.java', 'commons-numbers-gamma/src/main/java/org/apache/commons/numbers/gamma/LogGamma.java', 'commons-numbers-gamma/src/main/java/org/apache/commons/numbers/gamma/RegularizedGamma.java']",Add since tags for new API additions,
274818ccab651e51a47985a1ea54ef069b524adb,aherbert,aherbert,3,"['commons-numbers-combinatorics/src/main/java/org/apache/commons/numbers/combinatorics/FactorialDouble.java', 'commons-numbers-combinatorics/src/test/java/org/apache/commons/numbers/combinatorics/FactorialDoubleTest.java', 'src/changes/changes.xml']","NUMBERS-178: Tabulate all representable factorials in FactorialDouble

Values are verified using BigInteger computation of n!

This change deprecates the now redundant caching functionality.",NUMBERS-178
29388f2a26621539891ef6e2068919ca77fb5cb6,aherbert,aherbert,1,['commons-numbers-examples/examples-jmh/src/main/java/org/apache/commons/numbers/examples/jmh/gamma/ErfPerformance.java'],"Add Commons Numbers 1.0 implementation to ErfPerformance benchmark

Previously the code called RegularizedGamma.P or Q. Since these have
been updated the 1.0 version has been preserved for a reference
benchmark.",
279774e5a5deb982f336c51627e17abfee3c2469,aherbert,aherbert,1,['pom.xml'],Update Commons RNG from 1.3 to 1.4,
23ba4f8ea6109c9bac7b4ec43e17dcaaed358bd9,aherbert,aherbert,4,"['commons-numbers-fraction/src/main/java/org/apache/commons/numbers/fraction/ContinuedFraction.java', 'commons-numbers-fraction/src/main/java/org/apache/commons/numbers/fraction/GeneralizedContinuedFraction.java', 'commons-numbers-fraction/src/test/java/org/apache/commons/numbers/fraction/ContinuedFractionTest.java', 'src/changes/changes.xml']",NUMBERS-176: ContinuedFraction delegates to GeneralizedContinuedFraction,NUMBERS-176
907a7c54c9a62f6b8bde57b34fa9aff10ff90158,aherbert,aherbert,1,['src/changes/changes.xml'],NUMBERS-174: Track changes,NUMBERS-174
8987d677e472bbf1ff28c296d7fd1ce0deb695ab,aherbert,aherbert,8,"['commons-numbers-gamma/src/main/java/org/apache/commons/numbers/gamma/Gamma.java', 'commons-numbers-gamma/src/main/java/org/apache/commons/numbers/gamma/IncompleteGamma.java', 'commons-numbers-gamma/src/main/java/org/apache/commons/numbers/gamma/LogGamma.java', 'commons-numbers-gamma/src/main/java/org/apache/commons/numbers/gamma/RegularizedGamma.java', 'commons-numbers-gamma/src/test/java/org/apache/commons/numbers/gamma/GammaTest.java', 'commons-numbers-gamma/src/test/java/org/apache/commons/numbers/gamma/IncompleteGammaTest.java', 'commons-numbers-gamma/src/test/java/org/apache/commons/numbers/gamma/LogGammaTest.java', 'commons-numbers-gamma/src/test/java/org/apache/commons/numbers/gamma/RegularizedGammaTest.java']","NUMBERS-174: Update gamma functions public API

Use the Boost gamma function implementations.

Add new IncompleteGamma class and tests.

Add LogGamma with a sign output.

Update the test data for Gamma and tighten the tolerances for the
improved function. The data is not duplicated from the Boost test data.

Remove obsolete tests for RegularizedGamma.

Add Gamma P and Q derivative.",NUMBERS-174
0a2177fe1ce3097b5eef3e0d5869465e1ef8a621,aherbert,aherbert,40,"['commons-numbers-examples/examples-jmh/src/main/java/org/apache/commons/numbers/examples/jmh/gamma/GammaContinuedFractionPerformance.java', 'commons-numbers-examples/examples-jmh/src/test/java/org/apache/commons/numbers/examples/jmh/gamma/GammaContinuedFractionTest.java', 'commons-numbers-gamma/NOTICE', 'commons-numbers-gamma/pom.xml', 'commons-numbers-gamma/src/main/java/org/apache/commons/numbers/gamma/BoostGamma.java', 'commons-numbers-gamma/src/main/java/org/apache/commons/numbers/gamma/BoostMath.java', 'commons-numbers-gamma/src/main/java/org/apache/commons/numbers/gamma/BoostTools.java', 'commons-numbers-gamma/src/main/java/org/apache/commons/numbers/gamma/SpecialMath.java', 'commons-numbers-gamma/src/test/java/org/apache/commons/numbers/gamma/BoostErfTest.java', 'commons-numbers-gamma/src/test/java/org/apache/commons/numbers/gamma/BoostGammaTest.java', 'commons-numbers-gamma/src/test/java/org/apache/commons/numbers/gamma/BoostToolsTest.java', 'commons-numbers-gamma/src/test/java/org/apache/commons/numbers/gamma/TestUtils.java', 'commons-numbers-gamma/src/test/java/org/apache/commons/numbers/gamma/TestUtilsTest.java', 'commons-numbers-gamma/src/test/resources/org/apache/commons/numbers/gamma/gamma1pm1_data.csv', 'commons-numbers-gamma/src/test/resources/org/apache/commons/numbers/gamma/gamma_0_20_data.csv', 'commons-numbers-gamma/src/test/resources/org/apache/commons/numbers/gamma/gamma_150_171_data.csv', 'commons-numbers-gamma/src/test/resources/org/apache/commons/numbers/gamma/gamma_20_150_data.csv', 'commons-numbers-gamma/src/test/resources/org/apache/commons/numbers/gamma/gamma_factorials_data.csv', 'commons-numbers-gamma/src/test/resources/org/apache/commons/numbers/gamma/gamma_m20_0_data.csv', 'commons-numbers-gamma/src/test/resources/org/apache/commons/numbers/gamma/gamma_near_0_data.csv', 'commons-numbers-gamma/src/test/resources/org/apache/commons/numbers/gamma/gamma_near_1_data.csv', 'commons-numbers-gamma/src/test/resources/org/apache/commons/numbers/gamma/gamma_near_2_data.csv', 'commons-numbers-gamma/src/test/resources/org/apache/commons/numbers/gamma/gamma_near_m10_data.csv', 'commons-numbers-gamma/src/test/resources/org/apache/commons/numbers/gamma/gamma_near_m55_data.csv', 'commons-numbers-gamma/src/test/resources/org/apache/commons/numbers/gamma/gamma_p_derivative.pl', 'commons-numbers-gamma/src/test/resources/org/apache/commons/numbers/gamma/gamma_very_near_0_data.csv', 'commons-numbers-gamma/src/test/resources/org/apache/commons/numbers/gamma/igamma_asymptotic_data.csv', 'commons-numbers-gamma/src/test/resources/org/apache/commons/numbers/gamma/igamma_big_data.csv', 'commons-numbers-gamma/src/test/resources/org/apache/commons/numbers/gamma/igamma_big_data_p_derivative.csv', 'commons-numbers-gamma/src/test/resources/org/apache/commons/numbers/gamma/igamma_extra_data.csv', 'commons-numbers-gamma/src/test/resources/org/apache/commons/numbers/gamma/igamma_int_data.csv', 'commons-numbers-gamma/src/test/resources/org/apache/commons/numbers/gamma/igamma_int_data_p_derivative.csv', 'commons-numbers-gamma/src/test/resources/org/apache/commons/numbers/gamma/igamma_med_data.csv', 'commons-numbers-gamma/src/test/resources/org/apache/commons/numbers/gamma/igamma_med_data_p_derivative.csv', 'commons-numbers-gamma/src/test/resources/org/apache/commons/numbers/gamma/igamma_small_data.csv', 'commons-numbers-gamma/src/test/resources/org/apache/commons/numbers/gamma/igamma_small_data_p_derivative.csv', 'commons-numbers-gamma/src/test/resources/org/apache/commons/numbers/gamma/log1pmx_data.csv', 'commons-numbers-gamma/src/test/resources/org/apache/commons/numbers/gamma/powm1_data.csv', 'src/main/resources/checkstyle/checkstyle-suppressions.xml', 'src/main/resources/pmd/pmd-ruleset.xml']",NUMBERS-174: Use Boost gamma function implementation,NUMBERS-174
4d5258e7a6412bbc7628cab710cbf4e68c6bfe35,aherbert,aherbert,1,['README.md'],"Add usable maven modules to the main README.md page

This replaces the example for commons-numbers-parent",
41d4a3fa6d982167b47d62f0f7b2ac2383141dcc,aherbert,aherbert,2,"['commons-numbers-core/src/test/java/org/apache/commons/numbers/core/ArithmeticUtilsTest.java', 'src/changes/changes.xml']",Test isPowerOfTwo with negative arguments and all true powers up to 2^62,
04a08f07e429a2f0cd1235bfdcda6a2a72bc948f,aherbert,aherbert,1,['src/changes/changes.xml'],NUMBERS-175: Track changes,NUMBERS-175
5b87b81f5889d7f4b7f59eb5c9608a66fe26ddef,aherbert,aherbert,2,"['commons-numbers-fraction/src/main/java/org/apache/commons/numbers/fraction/GeneralizedContinuedFraction.java', 'commons-numbers-fraction/src/test/java/org/apache/commons/numbers/fraction/GeneralizedContinuedFractionTest.java']","NUMBERS-175: A continued fraction class to compute using a generator

Added a GeneralizedContinuedFraction class. This has evaluation methods
to include or exclude the leading term b0.",NUMBERS-175
37500b9f2e48746dc5159d1758cce2f333dc6106,aherbert,aherbert,1,['.travis.yml'],"Change Travis CI openjdk9 to openjdk11

openjdk9 is no longer supported on Travis CI",
924099e0c03ad21dce3cff85086142ae6d273f27,aherbert,aherbert,1,['commons-numbers-fraction/src/test/java/org/apache/commons/numbers/fraction/ContinuedFractionTest.java'],Reuse the golden ratio continued fraction implementation.,
a3370a933dcf0c4a6e2f7f2519ea610f92704fe6,aherbert,aherbert,3,"['commons-numbers-fraction/src/main/java/org/apache/commons/numbers/fraction/ContinuedFraction.java', 'commons-numbers-fraction/src/test/java/org/apache/commons/numbers/fraction/ContinuedFractionTest.java', 'src/changes/changes.xml']",NUMBERS-173: Set minimum bound on continued fraction epsilon,NUMBERS-173
8d87be9ae40bfe0a42232c8551df6613b013812b,aherbert,aherbert,1,['commons-numbers-gamma/src/test/java/org/apache/commons/numbers/gamma/ErfDifferenceTest.java'],Sonar fix: Use assertEquals,
2807003d6da61ded1d6028030f218708cf8ffbe7,aherbert,aherbert,1,['commons-numbers-gamma/src/test/java/org/apache/commons/numbers/gamma/TestUtilsTest.java'],Sonar fix: lambda to contain only one source of an exception,
65ac1c0239acbab45760fb346b89fad368a726dd,aherbert,aherbert,1,['commons-numbers-gamma/src/main/java/org/apache/commons/numbers/gamma/BoostErf.java'],Correct javadoc,
06a82dc7da8b9572f7f65ee41f78810ef367a6f9,aherbert,aherbert,3,"['commons-numbers-combinatorics/src/main/java/org/apache/commons/numbers/combinatorics/FactorialDouble.java', 'commons-numbers-combinatorics/src/test/java/org/apache/commons/numbers/combinatorics/FactorialDoubleTest.java', 'src/changes/changes.xml']",Prevent caching infinite factorial values.,
d3475e98dd807367f23bd2669dc538b9dd3eb2b5,aherbert,aherbert,2,"['commons-numbers-gamma/src/main/java/org/apache/commons/numbers/gamma/GammaException.java', 'commons-numbers-gamma/src/test/java/org/apache/commons/numbers/gamma/InvGamma1pm1Test.java']","Use String.format when doubles are used in messages.

MessageFormat.format by default will represent numbers with too low a
precision. E.g. nextUp(1.5) is 1.5 not 1.5000000000000002.",
47da3cc67509a2f54ff2162dd1d91858f6ba1e55,aherbert,aherbert,2,"['commons-numbers-gamma/src/main/java/org/apache/commons/numbers/gamma/Digamma.java', 'commons-numbers-gamma/src/main/java/org/apache/commons/numbers/gamma/Trigamma.java']",Use isFinite,
09e042a9c650cab2a0a777c7e3acc83555720cee,aherbert,aherbert,2,"['commons-numbers-gamma/src/main/java/org/apache/commons/numbers/gamma/ErfDifference.java', 'commons-numbers-gamma/src/test/java/org/apache/commons/numbers/gamma/ErfDifferenceTest.java']",Update ErfDifference X_CRIT value,
95329dd7f57f81261332649141fd97fc19139756,aherbert,aherbert,1,['src/changes/changes.xml'],Track changes,
134710705b01c62371427eabd17a7c01cd166350,aherbert,aherbert,2,"['commons-numbers-gamma/src/test/java/org/apache/commons/numbers/gamma/ErfTest.java', 'commons-numbers-gamma/src/test/java/org/apache/commons/numbers/gamma/ErfcTest.java']","Update test tolerances for Erf and Erfc tests

Tolerances can be made stricter following the accuracy improvement of
the error functions in NUMBERS-172.",
62588a9b15cb328099ae4d44aaa10c373ced43a6,aherbert,aherbert,1,['commons-numbers-gamma/src/test/java/org/apache/commons/numbers/gamma/RegularizedGammaTest.java'],Increase test coverage for RegularizedGamma,
a0e56e1fd241d9fd77973c137c0608dc12ff44f0,aherbert,aherbert,9,"['commons-numbers-gamma/src/main/java/org/apache/commons/numbers/gamma/BoostErf.java', 'commons-numbers-gamma/src/main/java/org/apache/commons/numbers/gamma/Erf.java', 'commons-numbers-gamma/src/main/java/org/apache/commons/numbers/gamma/Erfc.java', 'commons-numbers-gamma/src/test/java/org/apache/commons/numbers/gamma/BoostErfTest.java', 'commons-numbers-gamma/src/test/resources/org/apache/commons/numbers/gamma/erf_close_to_1_data.csv', 'commons-numbers-gamma/src/test/resources/org/apache/commons/numbers/gamma/erf_data.csv', 'commons-numbers-gamma/src/test/resources/org/apache/commons/numbers/gamma/erf_large_data.csv', 'commons-numbers-gamma/src/test/resources/org/apache/commons/numbers/gamma/erf_small_data.csv', 'src/main/resources/pmd/pmd-ruleset.xml']","NUMBERS-172: Use Boost Error function implementation

Replace the use of the regularized gamma functions P and Q to evaluate
the error function.",NUMBERS-172
e2500141d22a1a1e151f2c67b90a3e2939a33d6c,aherbert,aherbert,1,['src/main/resources/spotbugs/spotbugs-exclude-filter.xml'],Exclude spot bugs false positives,
91892dd5aeb7ba8a287b6dc611731fb3dc019d8a,aherbert,aherbert,1,['.gitignore'],Update gitignore to exclude all target directories,
6f422455dac8ed5bde41353f5d44f79209c2bec7,aherbert,aherbert,1,['pom.xml'],"Upgrade plugins to allow building on JDK 17.

- spotbugs 3.1.8 to 4.4.2
- jacoco to 0.8.7
- japicmp to 0.15.3",
08f178096ac6595498c81eb768737cfec0dfae8e,aherbert,aherbert,1,['commons-numbers-complex/src/main/java/org/apache/commons/numbers/complex/Complex.java'],Correct first sentence of class javadoc,
f0b16526090ce2f0a81297e7c5728b758f988133,aherbert,aherbert,1,['commons-numbers-complex/src/main/java/org/apache/commons/numbers/complex/Complex.java'],Align multi-line mathjax equations,
99c9ae29ae49634c7c777863f92078a8fad9b41e,aherbert,aherbert,21,"['LICENSE', 'NOTICE', 'commons-numbers-examples/examples-jmh/pom.xml', 'commons-numbers-examples/examples-jmh/src/main/java/org/apache/commons/numbers/examples/jmh/gamma/ErfPerformance.java', 'commons-numbers-examples/examples-jmh/src/main/java/org/apache/commons/numbers/examples/jmh/gamma/package-info.java', 'commons-numbers-gamma/LICENSE', 'commons-numbers-gamma/NOTICE', 'commons-numbers-gamma/src/main/java/org/apache/commons/numbers/gamma/BoostErf.java', 'commons-numbers-gamma/src/main/java/org/apache/commons/numbers/gamma/InverseErf.java', 'commons-numbers-gamma/src/main/java/org/apache/commons/numbers/gamma/InverseErfc.java', 'commons-numbers-gamma/src/test/java/org/apache/commons/numbers/gamma/BoostErfTest.java', 'commons-numbers-gamma/src/test/java/org/apache/commons/numbers/gamma/TestUtils.java', 'commons-numbers-gamma/src/test/java/org/apache/commons/numbers/gamma/TestUtilsTest.java', 'commons-numbers-gamma/src/test/resources/org/apache/commons/numbers/gamma/erf_inv_data.csv', 'commons-numbers-gamma/src/test/resources/org/apache/commons/numbers/gamma/erf_inv_limit_data.csv', 'commons-numbers-gamma/src/test/resources/org/apache/commons/numbers/gamma/erfc_inv_big_data.csv', 'commons-numbers-gamma/src/test/resources/org/apache/commons/numbers/gamma/erfc_inv_data.csv', 'commons-numbers-gamma/src/test/resources/org/apache/commons/numbers/gamma/erfc_inv_limit_data.csv', 'pom.xml', 'src/main/resources/checkstyle/checkstyle-suppressions.xml', 'src/main/resources/pmd/pmd-ruleset.xml']","NUMBERS-171: InverseErf to support the full range of [0, 2]

Ported the Boost C++ function boost::math::erfc_inv. This supports
evaluation from double min value, superceding the support from 2^-53 in
the previous implementation.

Added a JMH benchmark for the Boost implementation verses the previous
version.

Documented special case return values for the inverse error functions
public API.",NUMBERS-171
7a3b9df7a4d40e577dbbde82938cc3fe30d72c41,aherbert,aherbert,1,['src/main/resources/pmd/pmd-ruleset.xml'],"Update PMD rules to correct syntax

Previous syntax was ignored. Changed:

ClassOrInterfaceType -> ClassOrInterfaceDeclaration
@Image -> @SimpleName

Added addition exclusion for Fraction to mirror BigFraction exclusions.

Added RegularizedBeta exclusion to mirror the exclusions used for the
other gamma package classes.",
05120da3bea3ac67b22ebf6c58d0f3711212567c,aherbert,aherbert,1,['pom.xml'],Run checkstyle in the validate phase,
fe1a427b2ff9040b2f19a9d96abfb7c5a12a64dc,aherbert,aherbert,3,"['commons-numbers-gamma/src/main/java/org/apache/commons/numbers/gamma/RegularizedBeta.java', 'commons-numbers-gamma/src/test/java/org/apache/commons/numbers/gamma/RegularizedBetaTest.java', 'src/changes/changes.xml']",NUMBERS-170: RegularizedBeta to handle edge cases,NUMBERS-170
123740a1f7bc9fd3553388cb7b24455bd8f8a663,aherbert,aherbert,1,['pom.xml'],"Do not perform minimal site checkout in pre-site phase

This profile must now be explicitly activated.",
31a6970423a6ded43c0839c182372dfefad3bffc,aherbert,aherbert,1,['commons-numbers-rootfinder/src/test/java/org/apache/commons/numbers/rootfinder/BrentSolverTest.java'],Correct argument order for BrentSolver,
4484083d990df67e81a1ef5b8fb9f1c3b40511f5,aherbert,aherbert,3,"['commons-numbers-rootfinder/src/main/java/org/apache/commons/numbers/rootfinder/BrentSolver.java', 'commons-numbers-rootfinder/src/test/java/org/apache/commons/numbers/rootfinder/BrentSolverTest.java', 'src/changes/changes.xml']",NUMBERS-168: Identify brackets with small objective values,NUMBERS-168
5579e8d683ed0d4422c925eab53c53a71c60f6c1,aherbert,aherbert,2,"['commons-numbers-rootfinder/src/main/java/org/apache/commons/numbers/rootfinder/SolverException.java', 'commons-numbers-rootfinder/src/test/java/org/apache/commons/numbers/rootfinder/SolverExceptionTest.java']","Update SolverException to use String.format

MessageFormat cannot show Double.MIN_VALUE or Double.MIN_NORMAL. These
are represented as 0. Changing to String.format fixes this.

This was discovered from convergence errors involving sub-normal numbers
that have no useful information in the exception message (as the numbers
are zero).",
d8a2011dc4074abea015d9e9538a533521f1762a,aherbert,aherbert,6,"['commons-numbers-gamma/src/main/java/org/apache/commons/numbers/gamma/Digamma.java', 'commons-numbers-gamma/src/main/java/org/apache/commons/numbers/gamma/Erf.java', 'commons-numbers-gamma/src/main/java/org/apache/commons/numbers/gamma/InverseErfc.java', 'commons-numbers-gamma/src/main/java/org/apache/commons/numbers/gamma/LanczosApproximation.java', 'commons-numbers-gamma/src/main/java/org/apache/commons/numbers/gamma/LogBeta.java', 'commons-numbers-gamma/src/main/java/org/apache/commons/numbers/gamma/Trigamma.java']","Consistent comment in private constructor

All classes in the package no use 'intentionally empty'",
572289ac93a268435834479265e8610a32525b63,aherbert,aherbert,2,"['commons-numbers-gamma/src/main/java/org/apache/commons/numbers/gamma/Gamma.java', 'commons-numbers-gamma/src/main/java/org/apache/commons/numbers/gamma/LogGamma.java']",Remove unnecessary parentheses,
b38c6107e7453d71a8031f8ca3558a6f6ecec435,aherbert,aherbert,1,['commons-numbers-gamma/src/main/java/org/apache/commons/numbers/gamma/Erf.java'],Fix empty block comment typo,
c102b6364644fd127d16c31704cdb7e8891c0371,garydgregory,garydgregory,1,['.gitignore'],Update to work for all target folders (Eclipse).,
deed685de97c005d7e2382649d00e5269e58632a,aherbert,aherbert,1,['commons-numbers-fraction/src/main/java/org/apache/commons/numbers/fraction/ContinuedFraction.java'],"Correct format string for FractionException

{0} is not applicable to String.format. It must use %conversion entries,
in this case %s.

Replace two exception messages for infinite or Nan with a single message
that formats the non-finite value in the message.

Replace 'maximal count' with 'maximum iterations'.",
ae3ad1993c98c5ba8d7f80c08bf7d94a77f65643,aherbert,aherbert,3,"['commons-numbers-examples/examples-jmh/src/main/java/org/apache/commons/numbers/examples/jmh/core/DoublePrecision.java', 'commons-numbers-examples/examples-jmh/src/main/java/org/apache/commons/numbers/examples/jmh/core/LinearCombinations.java', 'commons-numbers-examples/examples-jmh/src/main/java/org/apache/commons/numbers/examples/jmh/core/StickySumPerformance.java']",Correct typo,
c3e4180dfca9d3b9f8aa7522f326422501763ef2,aherbert,aherbert,1,['doc/release/release.howto.txt'],Update grammar for conscious language checker,
ab71ab39fb758ed4064d846fbcc959303225e03e,aherbert,aherbert,12,"['commons-numbers-angle/src/site/resources/profile.japicmp', 'commons-numbers-arrays/src/site/resources/profile.japicmp', 'commons-numbers-combinatorics/src/site/resources/profile.japicmp', 'commons-numbers-complex/src/site/resources/profile.japicmp', 'commons-numbers-core/src/site/resources/profile.japicmp', 'commons-numbers-field/src/site/resources/profile.japicmp', 'commons-numbers-fraction/src/site/resources/profile.japicmp', 'commons-numbers-gamma/src/site/resources/profile.japicmp', 'commons-numbers-primes/src/site/resources/profile.japicmp', 'commons-numbers-quaternion/src/site/resources/profile.japicmp', 'commons-numbers-rootfinder/src/site/resources/profile.japicmp', 'pom.xml']","Add japicmp check for binary compatibility

Added for all modules except complex-streams (which is not yet
released).",
b2ebde60f6b071edd6698310fd49379641ce6b20,aherbert,aherbert,1,['dist-archive/src/assembly/src.xml'],"Update distribution source archive specification

Copy from commons-rng multi-module project",
479bcdfa9ea1d39e01da70660f97d17cfd8b4cb0,aherbert,aherbert,1,['dist-archive/pom.xml'],"Remove checksum from installed artifacts

This creates md5 and sha1 checksums for the dist-archive pom in the
local maven repository. It is not required.",
4894c3cfedf5d4030129d0e174fdbb38ee9d7875,aherbert,aherbert,1,['pom.xml'],"Update plugin order in pom

checkstyle
spotbugs
pmd",
31e1624b03c33590c60118207f2c92b6c7682bc2,aherbert,aherbert,1,['pom.xml'],"Remove plugin checks from default goal

These plugins already run using executions:

apache-rat:check (validate)
checkstyle:check (verify)

Added to verify using executions:

pmd:check
spotbugs:check",
90007a8b7e15cef9268072d25e81942c428d2207,aherbert,aherbert,1,['src/main/resources/checkstyle/checkstyle.xml'],Remove duplicate ConstantName module,
4e20b71f36708d2bcf94863785e9a1467730a4f5,aherbert,aherbert,1,['.gitignore'],Ignore site-content.README,
f8674ef8bb808b8c5d21f91ef8eb5850cc1e76f3,aherbert,aherbert,1,['pom.xml'],Add missing site checkout property to parent,
58348ba57950811b6b7900b9b931df0baa9fc1e6,aherbert,aherbert,1,['pom.xml'],Clean site-content.README file,
66e9f45e62b4024ae7d6fb61d747b8faa2531d47,aherbert,aherbert,1,['pom.xml'],Avoid existing site checkout in all child modules,
82b5fec047162358de9d02ccc30ced5daea5c545,aherbert,web-flow,1,['commons-numbers-core/src/main/java/org/apache/commons/numbers/core/Precision.java'],"Merge pull request #103 from arturobernalg/feature/simplifyOperation

Simplify boolean expressions with a simpler equivalent.",
651997bafd29989b22129214aba23679e1cd1eeb,arturobernalg,arturobernalg,1,['commons-numbers-core/src/main/java/org/apache/commons/numbers/core/Precision.java'],Simplify boolean expressions with an simpler and equivalent.,
84c70907bcc795d0dbfea1bfcb919aa2b746d3e0,aherbert,aherbert,1,['src/changes/changes.xml'],Track changes,
12f154648368e86a50687a980966eecd0fb4e79d,aherbert,aherbert,1,['src/changes/changes.xml'],Add XML schema,
5cce26669d7a8a4f6123715f398c09bb028b84d9,aherbert,web-flow,3,"['commons-numbers-complex/src/main/java/org/apache/commons/numbers/complex/Complex.java', 'commons-numbers-core/src/main/java/org/apache/commons/numbers/core/Norm.java', 'commons-numbers-quaternion/src/main/java/org/apache/commons/numbers/quaternion/Quaternion.java']","Merge pull request #102 from arturobernalg/feature/javadoc

Fix wrong javadoc",
97251f793d0e02e722c4810b7f82bb19c56eff42,arturobernalg,arturobernalg,3,"['commons-numbers-complex/src/main/java/org/apache/commons/numbers/complex/Complex.java', 'commons-numbers-core/src/main/java/org/apache/commons/numbers/core/Norm.java', 'commons-numbers-quaternion/src/main/java/org/apache/commons/numbers/quaternion/Quaternion.java']",Fix wrong javadoc,
1394949d2043d5b1ecbbc3d57f84b735e96a22ba,aherbert,aherbert,6,"['commons-numbers-core/src/main/java/org/apache/commons/numbers/core/ArithmeticUtils.java', 'commons-numbers-gamma/src/main/java/org/apache/commons/numbers/gamma/ErfDifference.java', 'commons-numbers-gamma/src/main/java/org/apache/commons/numbers/gamma/Gamma.java', 'commons-numbers-gamma/src/main/java/org/apache/commons/numbers/gamma/InvGamma1pm1.java', 'commons-numbers-gamma/src/main/java/org/apache/commons/numbers/gamma/LogBeta.java', 'commons-numbers-gamma/src/main/java/org/apache/commons/numbers/gamma/RegularizedBeta.java']",Remove unnecessary nesting,
5f8c7a08b1a0f18c5f22b8f332b3cc27988258e6,aherbert,aherbert,1,['commons-numbers-gamma/src/main/java/org/apache/commons/numbers/gamma/RegularizedBeta.java'],Avoid modulus to detect even iteration,
5994f5a89398f47532d9e7335eb17c5dfc5237de,darkma773r,darkma773r,2,"['doc/release/copyLongTermJavadoc.sh', 'doc/release/release.howto.txt']",updating release instructions,
ac80b7fa62997bb0c25eed68ad22c31ac2338084,darkma773r,darkma773r,1,['pom.xml'],adding bc version,
4e6faddc45096699c17d5b191993433245a9c7d9,darkma773r,darkma773r,1,['commons-numbers-complex-streams/pom.xml'],updating complex-stream module version,
3b025b8e061706b76826cf79036ef2ee30ebabe7,darkma773r,darkma773r,45,"['README.md', 'RELEASE-NOTES.txt', 'commons-numbers-angle/README.md', 'commons-numbers-angle/pom.xml', 'commons-numbers-angle/src/site/site.xml', 'commons-numbers-arrays/README.md', 'commons-numbers-arrays/pom.xml', 'commons-numbers-arrays/src/site/site.xml', 'commons-numbers-combinatorics/README.md', 'commons-numbers-combinatorics/pom.xml', 'commons-numbers-combinatorics/src/site/site.xml', 'commons-numbers-complex-streams/README.md', 'commons-numbers-complex-streams/pom.xml', 'commons-numbers-complex/README.md', 'commons-numbers-complex/pom.xml', 'commons-numbers-complex/src/site/site.xml', 'commons-numbers-core/README.md', 'commons-numbers-core/pom.xml', 'commons-numbers-core/src/site/site.xml', 'commons-numbers-examples/examples-jmh/pom.xml', 'commons-numbers-examples/pom.xml', 'commons-numbers-field/README.md', 'commons-numbers-field/pom.xml', 'commons-numbers-field/src/site/site.xml', 'commons-numbers-fraction/README.md', 'commons-numbers-fraction/pom.xml', 'commons-numbers-fraction/src/site/site.xml', 'commons-numbers-gamma/README.md', 'commons-numbers-gamma/pom.xml', 'commons-numbers-gamma/src/site/site.xml', 'commons-numbers-primes/README.md', 'commons-numbers-primes/pom.xml', 'commons-numbers-primes/src/site/site.xml', 'commons-numbers-quaternion/README.md', 'commons-numbers-quaternion/pom.xml', 'commons-numbers-quaternion/src/site/site.xml', 'commons-numbers-rootfinder/README.md', 'commons-numbers-rootfinder/pom.xml', 'commons-numbers-rootfinder/src/site/site.xml', 'dist-archive/pom.xml', 'pom.xml', 'src/changes/changes.xml', 'src/site/resources/release-notes/RELEASE-NOTES-1.0.txt', 'src/site/xdoc/download_numbers.xml', 'src/site/xdoc/release-history.xml']",preparing for 1.1-SNAPSHOT development after 1.0 release,
a6c34527ce1b25e4f5867c87c46ece02edeab76c,,,1,['commons-numbers-gamma/src/main/java/org/apache/commons/numbers/gamma/LogBeta.java'],Use MathJaX in Javadoc.,
c2d8ab207cb61cc39d59be359e2a7fa8497b1ae7,,,1,['commons-numbers-core/src/main/java/org/apache/commons/numbers/core/Norm.java'],Javadoc.,
c37aed44fe5aa4528bd00abc1f5305cccd39adc2,darkma773r,darkma773r,1,['src/changes/changes.xml'],fixing changes.xml error,
4404f03115f8ce7a1fce89701b0d32c6b046a0e0,darkma773r,darkma773r,1,['src/changes/changes.xml'],updating changes.xml,
437432572b9840ebf7b34efa5e0de35971a38f79,darkma773r,darkma773r,2,"['commons-numbers-arrays/src/main/java/org/apache/commons/numbers/arrays/SortInPlace.java', 'commons-numbers-arrays/src/test/java/org/apache/commons/numbers/arrays/SortInPlaceTest.java']",NUMBERS-166: removing BiConsumer implementation from SortInPlace,NUMBERS-166
4457bfdb65383de0daa9902ad0856f848892f364,aherbert,aherbert,2,"['commons-numbers-arrays/src/test/java/org/apache/commons/numbers/arrays/SortInPlaceTest.java', 'commons-numbers-core/src/test/java/org/apache/commons/numbers/core/SumTest.java']",Remove public from test method signatures,
19d6e2894e49da084fb02e983645aa0811ab3ef1,aherbert,aherbert,2,"['commons-numbers-fraction/src/test/java/org/apache/commons/numbers/fraction/BigFractionTest.java', 'commons-numbers-fraction/src/test/java/org/apache/commons/numbers/fraction/CommonsLangPortedFractionTest.java']",Swap argument order to assertNotEquals,
14462da040e6759372979bc10bc11a4c2923560b,aherbert,aherbert,8,"['commons-numbers-angle/src/test/java/org/apache/commons/numbers/angle/AngleTest.java', 'commons-numbers-arrays/src/test/java/org/apache/commons/numbers/arrays/MultidimensionalCounterTest.java', 'commons-numbers-arrays/src/test/java/org/apache/commons/numbers/arrays/SortInPlaceTest.java', 'commons-numbers-complex/src/test/java/org/apache/commons/numbers/complex/ComplexTest.java', 'commons-numbers-field/src/test/java/org/apache/commons/numbers/field/FP64Test.java', 'commons-numbers-fraction/src/test/java/org/apache/commons/numbers/fraction/BigFractionTest.java', 'commons-numbers-fraction/src/test/java/org/apache/commons/numbers/fraction/FractionTest.java', 'commons-numbers-quaternion/src/test/java/org/apache/commons/numbers/quaternion/QuaternionTest.java']",Merge branch 'feature/simplify_assert' of https://github.com/arturobernalg/commons-numbers,
52d90ed3439f16209c1c5ae49e2532ea34d26e22,darkma773r,darkma773r,1,['src/changes/changes.xml'],tracking changes,
b46db089d6a16f7cf2371a1521507218dd2df96a,darkma773r,darkma773r,1,['commons-numbers-core/src/main/java/org/apache/commons/numbers/core/Sum.java'],additional Sum docs,
40c7e920709fb35b127a1c3a99a1852aeca55104,darkma773r,darkma773r,1,['commons-numbers-examples/examples-jmh/src/main/java/org/apache/commons/numbers/examples/jmh/core/LinearCombinationPerformance.java'],fixing jmh examples build,
9d0e749f7bb4e910a6c97f383afd71b202b3a125,,,2,"['commons-numbers-core/src/main/java/org/apache/commons/numbers/core/Norm.java', 'commons-numbers-core/src/test/java/org/apache/commons/numbers/core/NormTest.java']",NUMBERS-165: Assume that an empty array is a programming error.,NUMBERS-165
c53efde09f2d18bf7a8f13e3246994aab6311001,arturobernalg,arturobernalg,8,"['commons-numbers-angle/src/test/java/org/apache/commons/numbers/angle/AngleTest.java', 'commons-numbers-arrays/src/test/java/org/apache/commons/numbers/arrays/MultidimensionalCounterTest.java', 'commons-numbers-arrays/src/test/java/org/apache/commons/numbers/arrays/SortInPlaceTest.java', 'commons-numbers-complex/src/test/java/org/apache/commons/numbers/complex/ComplexTest.java', 'commons-numbers-field/src/test/java/org/apache/commons/numbers/field/FP64Test.java', 'commons-numbers-fraction/src/test/java/org/apache/commons/numbers/fraction/BigFractionTest.java', 'commons-numbers-fraction/src/test/java/org/apache/commons/numbers/fraction/FractionTest.java', 'commons-numbers-quaternion/src/test/java/org/apache/commons/numbers/quaternion/QuaternionTest.java']", Replace assert by simpler but equivalent calls.,
93c45e9dcde7f283c620508daacaf36383925596,,,3,"['commons-numbers-core/src/main/java/org/apache/commons/numbers/core/Norm.java', 'commons-numbers-core/src/main/java/org/apache/commons/numbers/core/Sum.java', 'commons-numbers-core/src/test/java/org/apache/commons/numbers/core/SumTest.java']","NUMBERS-163: Nits.

Javadoc style to match style in (most) other files.
Removed factory methods that were just one-liner replacements.
Added ""varargs"" (any number of terms) methods.
Explicit initialization of ""comp"" instance variable.

Closes #97.",NUMBERS-163
06a613d29c950acff30feb06ac95d54c0d5151ea,darkma773r,darkma773r,12,"['commons-numbers-angle/src/main/java/org/apache/commons/numbers/angle/CosAngle.java', 'commons-numbers-core/src/main/java/org/apache/commons/numbers/core/LinearCombination.java', 'commons-numbers-core/src/main/java/org/apache/commons/numbers/core/Norm.java', 'commons-numbers-core/src/main/java/org/apache/commons/numbers/core/Sum.java', 'commons-numbers-core/src/main/java/org/apache/commons/numbers/core/Summation.java', 'commons-numbers-core/src/test/java/org/apache/commons/numbers/core/LinearCombinationTest.java', 'commons-numbers-core/src/test/java/org/apache/commons/numbers/core/SumTest.java', 'commons-numbers-core/src/test/java/org/apache/commons/numbers/core/SummationTest.java', 'commons-numbers-examples/examples-jmh/src/main/java/org/apache/commons/numbers/examples/jmh/core/EuclideanNormAlgorithms.java', 'commons-numbers-examples/examples-jmh/src/main/java/org/apache/commons/numbers/examples/jmh/core/LinearCombinationPerformance.java', 'commons-numbers-examples/examples-jmh/src/main/java/org/apache/commons/numbers/examples/jmh/core/NormPerformance.java', 'commons-numbers-examples/examples-jmh/src/main/java/org/apache/commons/numbers/examples/jmh/core/SumPerformance.java']",NUMBERS-163: replacing LinearCombination and Summation with Sum class,NUMBERS-163
d4c00eb68544f3adf258d09ab2c7daf3feb1f8c3,,,1,['commons-numbers-examples/examples-jmh/src/main/java/org/apache/commons/numbers/examples/jmh/core/NormPerformance.java'],Javadoc.,
d56251b1f723215a9b4bb7bfb5e3f1c51dfd4186,,,1,['commons-numbers-arrays/src/main/java/org/apache/commons/numbers/arrays/SortInPlace.java'],"Simplify comparator function.

Thanks to Alex Herbert.",
b34fa4cf4713bd0bd765dcb3fe633abdf8ff4e84,,,2,"['commons-numbers-arrays/src/main/java/org/apache/commons/numbers/arrays/SortInPlace.java', 'commons-numbers-arrays/src/test/java/org/apache/commons/numbers/arrays/SortInPlaceTest.java']",NUMBERS-164: Sort utility (ported with API changes from Commons Math).,NUMBERS-164
65ebfaa427f8f8d6b99c5f3acde482757763cb23,,,1,['commons-numbers-examples/examples-jmh/src/main/java/org/apache/commons/numbers/examples/jmh/core/NormsPerformance.java'],Delete benchmark file that used the previous API.,
19899e7124dcd182fb3ebe31f17405c15be6cd19,,,2,"['commons-numbers-arrays/pom.xml', 'commons-numbers-arrays/src/test/java/org/apache/commons/numbers/arrays/MultidimensionalCounterTest.java']",Unit test.,
a77a8eb22b9527c50e50eac106a6821676a63fba,,,3,"['commons-numbers-angle/src/main/java/org/apache/commons/numbers/angle/CosAngle.java', 'commons-numbers-core/src/main/java/org/apache/commons/numbers/core/Norms.java', 'commons-numbers-core/src/test/java/org/apache/commons/numbers/core/NormsTest.java']",NUMBERS-156: Norm API.,NUMBERS-156
9e0dc07186ee1d6bae14b31317f014dcb694390e,sebbASF,sebbASF,1,['src/changes/changes.xml'],Java 9 required for perftest,
825c829b5779e39ee31c5762d12df510336c69d6,sebbASF,sebbASF,1,['RELEASE-NOTES.txt'],Java 9 required for perftest,
9b67b8e6890a47dcfc26388da2b4ee03758a9a94,aherbert,aherbert,1,['commons-numbers-core/src/test/java/org/apache/commons/numbers/core/NormTest.java'],"Call L2.of(double, double) not L2.of(double[])

When using L2.of(double[]) the testEuclidean_2d_vsHypot test fails. This
may be due to the lack of ordering in the computation for the array
method.",
c82bfd87100df4c64929adc55c045d0d419cd14c,aherbert,aherbert,1,['commons-numbers-examples/examples-jmh/src/test/java/org/apache/commons/numbers/examples/jmh/core/EuclideanNormAccuracyTest.java'],Javadoc,
ee1152cd88666716bda3f86f4a0a4a6a031f273c,aherbert,aherbert,3,"['commons-numbers-core/src/test/java/org/apache/commons/numbers/core/SummationTest.java', 'commons-numbers-examples/examples-jmh/src/main/java/org/apache/commons/numbers/examples/jmh/core/EuclideanNormAlgorithms.java', 'commons-numbers-examples/examples-jmh/src/main/java/org/apache/commons/numbers/examples/jmh/core/EuclideanNormEvaluator.java']","Use new BigDecimal(double) and not BigDecimal.valueOf(double)

The constructor version creates the exact representation of the double.",
059b2cb4a57e1e5bc5c376c315f9e339a689aec4,aherbert,aherbert,3,"['commons-numbers-core/pom.xml', 'commons-numbers-core/src/test/java/org/apache/commons/numbers/core/NormTest.java', 'commons-numbers-core/src/test/java/org/apache/commons/numbers/core/NormsTest.java']","Remove requirement for Java 9

This removes use of BigDecimal.sqrt. The value is now converted to a
double and the standard precision sqrt is used.",
2a8b86a20000f43fc454a1d1aa9ae4ee071513dd,aherbert,aherbert,1,['commons-numbers-core/src/test/java/org/apache/commons/numbers/core/ExtendedPrecisionTest.java'],Remove use of Math.fma,
afbe232e1c8fe037892c7e816e9095be9443f654,aherbert,aherbert,1,['commons-numbers-core/src/test/java/org/apache/commons/numbers/core/EpsilonDoubleEquivalenceTest.java'],Javadoc fix,
8dc4c3842524602bd090524344a5a7941d75fb52,aherbert,aherbert,2,"['commons-numbers-core/pom.xml', 'commons-numbers-examples/examples-jmh/pom.xml']",Use source 9 in-place of 1.9 for JDK 9.,
c75e63423e2b68dae63118704053ca52e6b55337,,,3,"['commons-numbers-core/src/main/java/org/apache/commons/numbers/core/Norm.java', 'commons-numbers-core/src/test/java/org/apache/commons/numbers/core/NormTest.java', 'commons-numbers-examples/examples-jmh/src/main/java/org/apache/commons/numbers/examples/jmh/core/NormPerformance.java']",NUMBERS-156: Use enum as API.,NUMBERS-156
46f0aa2b1c201bd84e127e00dda0be49e2f27b51,aherbert,aherbert,1,['commons-numbers-angle/src/test/java/org/apache/commons/numbers/angle/AngleTest.java'],Reuse Angle instances in conversion test,
14bfa1fb64d044422e2fd29dd4d33ed1d4d7fb3e,aherbert,aherbert,1,['commons-numbers-angle/src/test/java/org/apache/commons/numbers/angle/AngleTest.java'],Add missing Angle tests for conversion to self,
6073518c988068d552f94832413e045428d13c23,darkma773r,darkma773r,1,['src/changes/changes.xml'],tracking changes,
09b6c6a3f35ea80315aa4a8539c8e87f91ced571,darkma773r,darkma773r,33,"['commons-numbers-angle/pom.xml', 'commons-numbers-angle/src/main/java/org/apache/commons/numbers/angle/Angle.java', 'commons-numbers-angle/src/main/java/org/apache/commons/numbers/angle/CosAngle.java', 'commons-numbers-angle/src/test/java/org/apache/commons/numbers/angle/CosAngleTest.java', 'commons-numbers-arrays/pom.xml', 'commons-numbers-core/pom.xml', 'commons-numbers-core/src/main/java/org/apache/commons/numbers/core/ExtendedPrecision.java', 'commons-numbers-core/src/main/java/org/apache/commons/numbers/core/LinearCombination.java', 'commons-numbers-core/src/main/java/org/apache/commons/numbers/core/Norms.java', 'commons-numbers-core/src/main/java/org/apache/commons/numbers/core/Summation.java', 'commons-numbers-core/src/test/java/org/apache/commons/numbers/core/DoubleTestUtils.java', 'commons-numbers-core/src/test/java/org/apache/commons/numbers/core/ExtendedPrecisionTest.java', 'commons-numbers-core/src/test/java/org/apache/commons/numbers/core/LinearCombinationTest.java', 'commons-numbers-core/src/test/java/org/apache/commons/numbers/core/NormsTest.java', 'commons-numbers-core/src/test/java/org/apache/commons/numbers/core/SummationTest.java', 'commons-numbers-examples/examples-jmh/src/main/java/org/apache/commons/numbers/examples/jmh/core/DoublePrecision.java', 'commons-numbers-examples/examples-jmh/src/main/java/org/apache/commons/numbers/examples/jmh/core/DoubleSplitPerformance.java', 'commons-numbers-examples/examples-jmh/src/main/java/org/apache/commons/numbers/examples/jmh/core/DoubleUtils.java', 'commons-numbers-examples/examples-jmh/src/main/java/org/apache/commons/numbers/examples/jmh/core/EuclideanNormAlgorithmPerformance.java', 'commons-numbers-examples/examples-jmh/src/main/java/org/apache/commons/numbers/examples/jmh/core/EuclideanNormAlgorithms.java', 'commons-numbers-examples/examples-jmh/src/main/java/org/apache/commons/numbers/examples/jmh/core/EuclideanNormEvaluator.java', 'commons-numbers-examples/examples-jmh/src/main/java/org/apache/commons/numbers/examples/jmh/core/LinearCombination.java', 'commons-numbers-examples/examples-jmh/src/main/java/org/apache/commons/numbers/examples/jmh/core/LinearCombinationPerformance.java', 'commons-numbers-examples/examples-jmh/src/main/java/org/apache/commons/numbers/examples/jmh/core/LinearCombinationUtils.java', 'commons-numbers-examples/examples-jmh/src/main/java/org/apache/commons/numbers/examples/jmh/core/LinearCombinations.java', 'commons-numbers-examples/examples-jmh/src/main/java/org/apache/commons/numbers/examples/jmh/core/NormsPerformance.java', 'commons-numbers-examples/examples-jmh/src/main/java/org/apache/commons/numbers/examples/jmh/core/StickySumPerformance.java', 'commons-numbers-examples/examples-jmh/src/main/java/org/apache/commons/numbers/examples/jmh/core/package-info.java', 'commons-numbers-examples/examples-jmh/src/test/java/org/apache/commons/numbers/examples/jmh/core/DoublePrecisionTest.java', 'commons-numbers-examples/examples-jmh/src/test/java/org/apache/commons/numbers/examples/jmh/core/EuclideanNormAccuracyTest.java', 'commons-numbers-examples/examples-jmh/src/test/java/org/apache/commons/numbers/examples/jmh/core/LinearCombinationAccuracyTest.java', 'commons-numbers-examples/examples-jmh/src/test/java/org/apache/commons/numbers/examples/jmh/core/LinearCombinationsTest.java', 'src/main/resources/checkstyle/checkstyle-suppressions.xml']",NUMBERS-159: move classes from commons-numbers-arrays to more appropriate modules,NUMBERS-159
b1eb9bb08b447b983056dda9933597cda09542b6,aherbert,aherbert,1,['commons-numbers-gamma/src/test/java/org/apache/commons/numbers/gamma/ErfTest.java'],Correct ErfTest javadoc,
97d269e4dfebf6c46f75bfc6cfb03a96b6a712c9,aherbert,aherbert,1,['commons-numbers-gamma/src/test/java/org/apache/commons/numbers/gamma/ErfTest.java'],Sonar fix: combine similar Erf tests as a parameterized test,
a2befeb3fc9a5704a13477864a201f06873092ed,aherbert,aherbert,1,['commons-numbers-core/src/main/java/org/apache/commons/numbers/core/Precision.java'],"Sonar fix: Remove nested ternary.

Updated javadoc since a is not returned when eqZero(a) is true, either 0
or 1 are returned. a can be a small epsilon value and will not be
returned in this case.",
8bd04dde807e01d5ca24799c1f9aa72df08cbd9d,aherbert,aherbert,1,['commons-numbers-core/src/test/java/org/apache/commons/numbers/core/PrecisionTest.java'],Sonar fix: Swap actual and expected arguments to the assertion,
d0aa478385267813da3ce4a2892cab9a30ad5174,darkma773r,darkma773r,2,"['commons-numbers-angle/src/main/java/org/apache/commons/numbers/angle/Angle.java', 'src/main/resources/spotbugs/spotbugs-exclude-filter.xml']",NUMBERS-134: cleaning up Angles class,NUMBERS-134
20dca72c700a17100d0689d62afd398363d2d2c0,darkma773r,darkma773r,1,['src/changes/changes.xml'],tracking changes for NUMBERS-156,
63ad23b3bdcc8a98b8fdfd24093ec8ac8e3923b8,darkma773r,darkma773r,21,"['.travis.yml', 'commons-numbers-arrays/pom.xml', 'commons-numbers-arrays/src/main/java/org/apache/commons/numbers/arrays/CosAngle.java', 'commons-numbers-arrays/src/main/java/org/apache/commons/numbers/arrays/ExtendedPrecision.java', 'commons-numbers-arrays/src/main/java/org/apache/commons/numbers/arrays/Norms.java', 'commons-numbers-arrays/src/main/java/org/apache/commons/numbers/arrays/SafeNorm.java', 'commons-numbers-arrays/src/main/java/org/apache/commons/numbers/arrays/Summation.java', 'commons-numbers-arrays/src/test/java/org/apache/commons/numbers/arrays/DoubleTestUtils.java', 'commons-numbers-arrays/src/test/java/org/apache/commons/numbers/arrays/ExtendedPrecisionTest.java', 'commons-numbers-arrays/src/test/java/org/apache/commons/numbers/arrays/NormsTest.java', 'commons-numbers-arrays/src/test/java/org/apache/commons/numbers/arrays/SafeNormTest.java', 'commons-numbers-arrays/src/test/java/org/apache/commons/numbers/arrays/SummationTest.java', 'commons-numbers-examples/examples-jmh/pom.xml', 'commons-numbers-examples/examples-jmh/src/main/java/org/apache/commons/numbers/examples/jmh/arrays/DoubleUtils.java', 'commons-numbers-examples/examples-jmh/src/main/java/org/apache/commons/numbers/examples/jmh/arrays/EuclideanNormAlgorithmPerformance.java', 'commons-numbers-examples/examples-jmh/src/main/java/org/apache/commons/numbers/examples/jmh/arrays/EuclideanNormAlgorithms.java', 'commons-numbers-examples/examples-jmh/src/main/java/org/apache/commons/numbers/examples/jmh/arrays/EuclideanNormEvaluator.java', 'commons-numbers-examples/examples-jmh/src/main/java/org/apache/commons/numbers/examples/jmh/arrays/NormsPerformance.java', 'commons-numbers-examples/examples-jmh/src/test/java/org/apache/commons/numbers/examples/jmh/arrays/EuclideanNormAccuracyTest.java', 'pom.xml', 'src/main/resources/spotbugs/spotbugs-exclude-filter.xml']",NUMBERS-156: replacing SafeNorm with Norms and associated Summation class,NUMBERS-156
67c9c5807231ace9b6a26c293ab462e8dd88624e,darkma773r,darkma773r,1,['src/main/resources/spotbugs/spotbugs-exclude-filter.xml'],adding legitimate floating point equality check to spotbugs exclude,
64262fda3112c011a6637e5d4b6d99c4ecd4842f,,,1,['src/changes/changes.xml'],Track changes.,
3528a2392863f18dcf6a3d284733dd5330987412,,,1,['commons-numbers-angle/src/main/java/org/apache/commons/numbers/angle/Angle.java'],Fix CheckStyle issue.,
0db495b21337d3f30961375dedba2dd469f91200,,,1,['commons-numbers-angle/src/test/java/org/apache/commons/numbers/angle/AngleTest.java'],NUMBERS-161: Additional unit tests.,NUMBERS-161
ca82274718ba58cfeb945d95a10ee274f26b2b61,,,1,['commons-numbers-angle/src/main/java/org/apache/commons/numbers/angle/Angle.java'],Avoid intermediate object creation.,
a71294ae30dc69f99f3a0fe4a5daee45fdd448da,,,3,"['commons-numbers-angle/src/main/java/org/apache/commons/numbers/angle/Angle.java', 'commons-numbers-angle/src/test/java/org/apache/commons/numbers/angle/AngleTest.java', 'commons-numbers-angle/src/test/java/org/apache/commons/numbers/angle/ReduceTest.java']","Let angle normalization operate directly on ""double"".",
4f2fc20a0208d5f7435c0a7cff1562cc33e5fdce,,,1,['commons-numbers-angle/src/main/java/org/apache/commons/numbers/angle/Angle.java'],Useful constants.,
056b268a8e168177c9744744cf2f33f6e9c0376b,,,2,"['commons-numbers-angle/src/main/java/org/apache/commons/numbers/angle/Angle.java', 'commons-numbers-angle/src/test/java/org/apache/commons/numbers/angle/AngleTest.java']",NUMBERS-161: Special case.,NUMBERS-161
7c9f02e3212da55e426bf693db3cd6e138b851af,,,5,"['commons-numbers-angle/src/main/java/org/apache/commons/numbers/angle/PlaneAngle.java', 'commons-numbers-angle/src/main/java/org/apache/commons/numbers/angle/PlaneAngleRadians.java', 'commons-numbers-angle/src/test/java/org/apache/commons/numbers/angle/PlaneAngleRadiansTest.java', 'commons-numbers-angle/src/test/java/org/apache/commons/numbers/angle/PlaneAngleTest.java', 'commons-numbers-angle/src/test/java/org/apache/commons/numbers/angle/ReduceTest.java']","NUMBERS-161: Functionality moved to class ""Angle"".",NUMBERS-161
8e2334ac190892d3aede6edc3a44035d161d5659,,,2,"['commons-numbers-angle/src/main/java/org/apache/commons/numbers/angle/Angle.java', 'commons-numbers-angle/src/test/java/org/apache/commons/numbers/angle/AngleTest.java']",NUMBERS-161: Refactoring of angle normalization.,NUMBERS-161
ecf428e1991fb53996e77829aa22641b543ad12d,,,2,"['src/main/resources/checkstyle/checkstyle-suppressions.xml', 'src/main/resources/checkstyle/checkstyle.xml']","Reinstate ""CheckStyle"" global rule, disable it on a per-file basis.",
f749d6096f257fa56c2a3506a381327591f34fb5,,,3,"['commons-numbers-angle/src/main/java/org/apache/commons/numbers/angle/Angle.java', 'commons-numbers-angle/src/test/java/org/apache/commons/numbers/angle/AngleTest.java', 'src/main/resources/checkstyle/checkstyle.xml']","NUMBERS-161: Class ""Angle"" (holding the user-supplied value without round-off).",NUMBERS-161
cab4d54066e573faf21d053523c1788caee96723,,,1,['.asf.yaml'],"Add "".asf.yaml"".

Cf. https://cwiki.apache.org/confluence/display/INFRA/Git+-+.asf.yaml+features",
8a925343bc505b55132934bfd70c89144859fec3,,,2,"['commons-numbers-arrays/pom.xml', 'commons-numbers-arrays/src/test/java/org/apache/commons/numbers/arrays/LinearCombinationTest.java']",Remove dependency (unit test).,
3cf0a49a330c3c9918f0fdc7f4d3fc6c08be0c36,,,5,"['commons-numbers-angle/src/main/java/org/apache/commons/numbers/angle/PlaneAngle.java', 'commons-numbers-angle/src/main/java/org/apache/commons/numbers/angle/PlaneAngleRadians.java', 'commons-numbers-angle/src/test/java/org/apache/commons/numbers/angle/PlaneAngleRadiansTest.java', 'commons-numbers-angle/src/test/java/org/apache/commons/numbers/angle/PlaneAngleTest.java', 'commons-numbers-angle/src/test/java/org/apache/commons/numbers/angle/ReduceTest.java']","NUMBERS-158: Angle ""normalization"" operators.

API based on JDK 8 replaces ""static"" functions.",NUMBERS-158
00f9f4ec702a428ac0e244a424a16e19a8afc71a,,,2,"['commons-numbers-angle/src/main/java/org/apache/commons/numbers/angle/Reduce.java', 'commons-numbers-angle/src/test/java/org/apache/commons/numbers/angle/ReduceTest.java']","NUMBERS-157: Reduce to primary interval.

Functionality ported from ""Commons Math"".",NUMBERS-157
00a14829720144fd48c97c999fd5bd76298033a9,aherbert,aherbert,1,['commons-numbers-arrays/src/test/java/org/apache/commons/numbers/arrays/SafeNormTest.java'],Additional tests for SafeNorm,
dfba842bf7107f1715fe84dd10277abf8bf8d3a5,darkma773r,darkma773r,1,['commons-numbers-core/src/test/java/org/apache/commons/numbers/core/EpsilonDoubleEquivalenceTest.java'],NUMBERS-77: additional unit tests for Precision.DoubleEquivalence,NUMBERS-77
93476eeba7c2e34d5480eb797032dd019b6d956a,aherbert,aherbert,1,['commons-numbers-examples/examples-jmh/pom.xml'],Specify exec-maven-plugin version,
1c457b74cd54ee0b09b274d57543e82633f47bb2,aherbert,aherbert,5,"['commons-numbers-arrays/src/main/java/org/apache/commons/numbers/arrays/ExtendedPrecision.java', 'commons-numbers-arrays/src/main/java/org/apache/commons/numbers/arrays/LinearCombination.java', 'commons-numbers-arrays/src/test/java/org/apache/commons/numbers/arrays/ExtendedPrecisionTest.java', 'commons-numbers-arrays/src/test/java/org/apache/commons/numbers/arrays/LinearCombinationTest.java', 'src/changes/changes.xml']","NUMBERS-142: Update LinearCombination to use the dot2s algorithm

- Avoids construction of an intermediate array for the dot product of
array input
- Perform splitting using Dekker's multiplication algorithm to retain
all bits of precision
- Handle overflow during the split for large numbers

Splitting now correctly handles sub-normal numbers with no information
in the upper 26-bits as input. The high part will be sub-normal and the
low part will be zero. The previous split created a zero high part and
the input as the low part.",NUMBERS-142
4f0cf073de18650a2cedd9c1ca07cff9bee44d8d,,,3,"['commons-numbers-core/src/main/java/org/apache/commons/numbers/core/Precision.java', 'commons-numbers-core/src/test/java/org/apache/commons/numbers/core/EpsilonDoubleEquivalenceTest.java', 'commons-numbers-core/src/test/java/org/apache/commons/numbers/core/PrecisionTest.java']","NUMBERS-154: Handle NaN to allow consistent sorting.

Thanks to Alex Herbert.",NUMBERS-154
dbd2a473e4949d895054190f61cb950da1d6b36d,darkma773r,,2,"['commons-numbers-core/src/main/java/org/apache/commons/numbers/core/Precision.java', 'commons-numbers-core/src/test/java/org/apache/commons/numbers/core/EpsilonDoubleEquivalenceTest.java']","NUMBERS-77: Equivalence of double values.

Functionality derived from class ""DoublePrecisionContext"" originally defined in Commons Geometry.

Closes #89.

Co-authored-by: Alex Herbert <aherbert@apache.org>
Co-authored-by: Gilles Sadowski <gilleseran@gmail.com>",NUMBERS-77
a5fe3b40d2461d2b0e93bd62dc4417117735005b,sebbASF,sebbASF,1,['src/site/resources/download_numbers.cgi'],Fix name,
c590bc544ba3002cb26b7a83cb1e35321b04084b,aherbert,aherbert,1,['commons-numbers-fraction/src/test/java/org/apache/commons/numbers/fraction/CommonsLangPortedFractionTest.java'],Remove public modifier from test class,
6684c9e0a2d71d0e4c86cc47b1476c9659ac1460,aherbert,aherbert,3,"['commons-numbers-fraction/src/test/java/org/apache/commons/numbers/fraction/BigFractionTest.java', 'commons-numbers-fraction/src/test/java/org/apache/commons/numbers/fraction/CommonsLangPortedFractionTest.java', 'commons-numbers-fraction/src/test/java/org/apache/commons/numbers/fraction/FractionTest.java']","Fix sonar issues

Remove public keyword from tests.

Swap expected and actual values.

Only one possible runtime exception in the assertThrows.

Use assertNotEquals.",
af2d010e8cd2164f0a4b5232e41b66cfaf389e3c,garydgregory,garydgregory,1,['commons-numbers-complex/src/main/java/org/apache/commons/numbers/complex/Complex.java'],Normalize to US English spelling.,
03c34e2e38f46c061a025b8889548302a98714e1,garydgregory,garydgregory,1,['commons-numbers-examples/examples-jmh/src/main/java/org/apache/commons/numbers/examples/jmh/arrays/LinearCombinations.java'],Normalize to US English spelling.,
e33b2ae6b1a70e51cf0d943eb4a291a3695a5f2a,garydgregory,garydgregory,14,"['NOTICE', 'commons-numbers-angle/NOTICE', 'commons-numbers-arrays/NOTICE', 'commons-numbers-combinatorics/NOTICE', 'commons-numbers-complex-streams/NOTICE', 'commons-numbers-complex/NOTICE', 'commons-numbers-core/NOTICE', 'commons-numbers-examples/NOTICE', 'commons-numbers-examples/examples-jmh/NOTICE', 'commons-numbers-field/NOTICE', 'commons-numbers-fraction/NOTICE', 'commons-numbers-gamma/NOTICE', 'commons-numbers-quaternion/NOTICE', 'commons-numbers-rootfinder/NOTICE']",Merge branch 'master' of https://gitbox.apache.org/repos/asf/commons-numbers.git,
63d0309db75f6841e2e6f875ca336a542e2bfcac,garydgregory,garydgregory,1,['commons-numbers-complex/src/test/java/org/apache/commons/numbers/complex/TestUtils.java'],Use isEmpty().,
dce272036fd06c579bd4c7e003274af07bbfac69,aherbert,aherbert,14,"['NOTICE', 'commons-numbers-angle/NOTICE', 'commons-numbers-arrays/NOTICE', 'commons-numbers-combinatorics/NOTICE', 'commons-numbers-complex-streams/NOTICE', 'commons-numbers-complex/NOTICE', 'commons-numbers-core/NOTICE', 'commons-numbers-examples/NOTICE', 'commons-numbers-examples/examples-jmh/NOTICE', 'commons-numbers-field/NOTICE', 'commons-numbers-fraction/NOTICE', 'commons-numbers-gamma/NOTICE', 'commons-numbers-quaternion/NOTICE', 'commons-numbers-rootfinder/NOTICE']",Update NOTICE to 2021,
134133bf7e556e3e5ff631bea0bc350c73d48ae8,garydgregory,garydgregory,2,"['commons-numbers-complex/src/test/java/org/apache/commons/numbers/complex/TestUtils.java', 'commons-numbers-core/src/test/java/org/apache/commons/numbers/core/TestUtils.java']",Remove redundant calls to super().,
361376e1ce2060c4651d505c8bb997f49c6578ad,,,9,"['commons-numbers-core/src/main/java/org/apache/commons/numbers/core/ArithmeticUtils.java', 'commons-numbers-core/src/test/java/org/apache/commons/numbers/core/ArithmeticUtilsTest.java', 'commons-numbers-fraction/src/main/java/org/apache/commons/numbers/fraction/BigFraction.java', 'commons-numbers-fraction/src/main/java/org/apache/commons/numbers/fraction/Fraction.java', 'commons-numbers-fraction/src/test/java/org/apache/commons/numbers/fraction/BigFractionTest.java', 'commons-numbers-fraction/src/test/java/org/apache/commons/numbers/fraction/CommonTestCases.java', 'commons-numbers-fraction/src/test/java/org/apache/commons/numbers/fraction/CommonsLangPortedFractionTest.java', 'commons-numbers-fraction/src/test/java/org/apache/commons/numbers/fraction/FractionTest.java', 'src/changes/changes.xml']",Merge branch 'master' of https://gitbox.apache.org/repos/asf/commons-numbers,
03039699f5abe9f4342cd4a5f0bb0b6e4ceefb73,,,2,"['commons-numbers-gamma/src/main/java/org/apache/commons/numbers/gamma/Trigamma.java', 'commons-numbers-gamma/src/test/java/org/apache/commons/numbers/gamma/TrigammaTest.java']","NUMBERS-153: Iterative implementation of ""trigamma"" function.",NUMBERS-153
43bd837803ffc8b9ed70046af0e493a19f390836,aherbert,aherbert,1,['src/changes/changes.xml'],NUMBERS-149: Track changes,NUMBERS-149
64272ddd6bbafac1c1edf919248fc02650330bb8,aherbert,aherbert,1,['commons-numbers-fraction/src/test/java/org/apache/commons/numbers/fraction/CommonsLangPortedFractionTest.java'],Merge branch 'port_commons_lang_Fraction' of https://github.com/XenoAmess/commons-numbers into XenoAmess-port_commons_lang_Fraction,
da53215163ac0e53f16e0d70756d00815602cb87,XenoAmess,XenoAmess,1,['commons-numbers-fraction/src/test/java/org/apache/commons/numbers/fraction/CommonsLangPortedFractionTest.java'],[NUMBERS-149] port tests in commons-lang for Fraction.,NUMBERS-149
674f6da2d495031d3ea054dddad2818500b9728c,aherbert,aherbert,1,['src/changes/changes.xml'],NUMBER-151: Track changes,NUMBER-151
e510ad14a94b967a74a5fcf054a65a761b119e2f,aherbert,aherbert,2,"['commons-numbers-core/src/main/java/org/apache/commons/numbers/core/ArithmeticUtils.java', 'commons-numbers-core/src/test/java/org/apache/commons/numbers/core/ArithmeticUtilsTest.java']",Merge branch 'refine_ArithmeticUtils_pow' of https://github.com/XenoAmess/commons-numbers into XenoAmess-refine_ArithmeticUtils_pow,
42ebc644ff46e0cef75a59512390c9b78fa16a04,XenoAmess,XenoAmess,2,"['commons-numbers-core/src/main/java/org/apache/commons/numbers/core/ArithmeticUtils.java', 'commons-numbers-core/src/test/java/org/apache/commons/numbers/core/ArithmeticUtilsTest.java']",[NUMBERS-151] performance refine for ArithmeticUtils.pow,NUMBERS-151
c3d173ae9cf25329644b87b8e064f56a2c31ea53,aherbert,aherbert,1,['src/changes/changes.xml'],NUMBERS-150: Track changes,NUMBERS-150
a8897d18c8838cece48335554cf6d7e8fc8edc28,aherbert,aherbert,5,"['commons-numbers-fraction/src/main/java/org/apache/commons/numbers/fraction/BigFraction.java', 'commons-numbers-fraction/src/main/java/org/apache/commons/numbers/fraction/Fraction.java', 'commons-numbers-fraction/src/test/java/org/apache/commons/numbers/fraction/BigFractionTest.java', 'commons-numbers-fraction/src/test/java/org/apache/commons/numbers/fraction/CommonTestCases.java', 'commons-numbers-fraction/src/test/java/org/apache/commons/numbers/fraction/FractionTest.java']","NUMBERS-150: Fix Fraction.pow and BigFraction.pow

Modified to:

- correctly handle Integer.MIN_VALUE as the argument.
- throw an ArithmeticException when zero is raised to a negative power.

Squashed commit of the following:

commit 0fd1da5bdb92bf31b7dd4ec3981924c5f68dbef4
Author: XenoAmess <xenoamess@gmail.com>
Date:   Wed Aug 26 04:36:46 2020 +0800

    fix checkstyles

commit 4c2aa76d0f4425e55eccd23e4a40a19eb9834a31
Author: XenoAmess <xenoamess@gmail.com>
Date:   Wed Aug 26 04:34:54 2020 +0800

    apply suggestions

commit 0fc3a52c4d3789b18795392223e6add522843a0a
Author: XenoAmess <xenoamess@gmail.com>
Date:   Wed Aug 26 04:27:42 2020 +0800

    apply suggestions

commit 1481998f24c49bf8f20123703037a6fbefe6b9af
Author: XenoAmess <xenoamess@gmail.com>
Date:   Wed Aug 26 04:24:58 2020 +0800

    apply suggestions

commit 44678423889201f2c60ac024e132593336033bc9
Author: XenoAmess <xenoamess@gmail.com>
Date:   Wed Aug 26 03:28:58 2020 +0800

    fix checkstyles

commit 708414cdb8046c442360469f294b77729f5d345c
Author: XenoAmess <xenoamess@gmail.com>
Date:   Wed Aug 26 03:27:43 2020 +0800

    change as suggested

commit 5b9c91aaae49f7b2d8d331b2d8947bd1b684151e
Author: XenoAmess <xenoamess@gmail.com>
Date:   Wed Aug 26 03:24:56 2020 +0800

    change as suggested

commit 12142b608c3776e498fd17d66d51f4a7bc48e8f8
Author: XenoAmess <xenoamess@gmail.com>
Date:   Wed Aug 26 03:23:57 2020 +0800

    change as suggested

commit 3f10f12e3f9bb79edb835682cefeeea5ccf6a7ca
Author: XenoAmess <xenoamess@gmail.com>
Date:   Wed Aug 26 03:22:13 2020 +0800

    change as suggested

commit d01b5b8f509c5c9641798d57e4de1434cbac9688
Author: XenoAmess <xenoamess@gmail.com>
Date:   Wed Aug 26 03:20:50 2020 +0800

    change as suggested

commit 6f23df0d9fe789faff07406482108810b0eaf8b4
Author: XenoAmess <xenoamess@gmail.com>
Date:   Wed Aug 26 03:16:33 2020 +0800

    change as suggested

commit 3646e00ce9c17a81ca3a64ffe103974c44b33995
Author: XenoAmess <xenoamess@gmail.com>
Date:   Wed Aug 26 03:15:10 2020 +0800

    change as suggested

commit 3d4bc49f704ee0784ccdc96ab61edeb3720dbff3
Author: XenoAmess <xenoamess@gmail.com>
Date:   Wed Aug 26 03:13:29 2020 +0800

    change as suggested

commit 267df9448e14d28451e9d2ad88783f4bc32b635b
Author: XenoAmess <xenoamess@gmail.com>
Date:   Wed Aug 26 03:12:04 2020 +0800

    change as suggested

commit ba0d39ba532f36e62417b277641932fe46f6af23
Author: XenoAmess <xenoamess@gmail.com>
Date:   Tue Aug 25 21:26:27 2020 +0800

    [NUMBERS-150] fix bug in Fraction.pow and BigFraction.pow",NUMBERS-150
3282fb87ebcc905ef1daa6a7ac24740c3f73cf4f,,,1,['README.md'],"Add ""lgtm"" badge.",
b6d445a2dabda437dbe4c15c7bf9d953fe2e18aa,,,1,['README.md'],"Add ""sonarcloud"" badge.",
329efa72a392d4a63227d3526101897483d18eda,,,57,"['commons-numbers-angle/src/test/java/org/apache/commons/numbers/angle/PlaneAngleRadiansTest.java', 'commons-numbers-angle/src/test/java/org/apache/commons/numbers/angle/PlaneAngleTest.java', 'commons-numbers-arrays/src/test/java/org/apache/commons/numbers/arrays/CosAngleTest.java', 'commons-numbers-arrays/src/test/java/org/apache/commons/numbers/arrays/LinearCombinationTest.java', 'commons-numbers-arrays/src/test/java/org/apache/commons/numbers/arrays/MultidimensionalCounterTest.java', 'commons-numbers-arrays/src/test/java/org/apache/commons/numbers/arrays/SafeNormTest.java', 'commons-numbers-combinatorics/src/main/java/org/apache/commons/numbers/combinatorics/FactorialDouble.java', 'commons-numbers-combinatorics/src/main/java/org/apache/commons/numbers/combinatorics/LogFactorial.java', 'commons-numbers-combinatorics/src/test/java/org/apache/commons/numbers/combinatorics/BinomialCoefficientDoubleTest.java', 'commons-numbers-combinatorics/src/test/java/org/apache/commons/numbers/combinatorics/BinomialCoefficientTest.java', 'commons-numbers-combinatorics/src/test/java/org/apache/commons/numbers/combinatorics/CombinationsTest.java', 'commons-numbers-combinatorics/src/test/java/org/apache/commons/numbers/combinatorics/FactorialDoubleTest.java', 'commons-numbers-combinatorics/src/test/java/org/apache/commons/numbers/combinatorics/FactorialTest.java', 'commons-numbers-combinatorics/src/test/java/org/apache/commons/numbers/combinatorics/LogBinomialCoefficientTest.java', 'commons-numbers-combinatorics/src/test/java/org/apache/commons/numbers/combinatorics/LogFactorialTest.java', 'commons-numbers-complex-streams/src/test/java/org/apache/commons/numbers/complex/streams/ComplexUtilsTest.java', 'commons-numbers-complex/src/test/java/org/apache/commons/numbers/complex/CReferenceTest.java', 'commons-numbers-complex/src/test/java/org/apache/commons/numbers/complex/CStandardTest.java', 'commons-numbers-complex/src/test/java/org/apache/commons/numbers/complex/ComplexEdgeCaseTest.java', 'commons-numbers-complex/src/test/java/org/apache/commons/numbers/complex/ComplexTest.java', 'commons-numbers-core/src/test/java/org/apache/commons/numbers/core/ArithmeticUtilsTest.java', 'commons-numbers-core/src/test/java/org/apache/commons/numbers/core/PrecisionTest.java', 'commons-numbers-examples/examples-jmh/src/main/java/org/apache/commons/numbers/examples/jmh/complex/SinCosPerformance.java', 'commons-numbers-examples/examples-jmh/src/test/java/org/apache/commons/numbers/examples/jmh/arrays/DoublePrecisionTest.java', 'commons-numbers-examples/examples-jmh/src/test/java/org/apache/commons/numbers/examples/jmh/arrays/LinearCombinationAccuracyTest.java', 'commons-numbers-examples/examples-jmh/src/test/java/org/apache/commons/numbers/examples/jmh/arrays/LinearCombinationsTest.java', 'commons-numbers-field/src/test/java/org/apache/commons/numbers/field/FP64Test.java', 'commons-numbers-field/src/test/java/org/apache/commons/numbers/field/FieldParametricTest.java', 'commons-numbers-fraction/src/test/java/org/apache/commons/numbers/fraction/BigFractionTest.java', 'commons-numbers-fraction/src/test/java/org/apache/commons/numbers/fraction/ContinuedFractionTest.java', 'commons-numbers-fraction/src/test/java/org/apache/commons/numbers/fraction/FractionTest.java', 'commons-numbers-gamma/src/test/java/org/apache/commons/numbers/gamma/DigammaTest.java', 'commons-numbers-gamma/src/test/java/org/apache/commons/numbers/gamma/ErfDifferenceTest.java', 'commons-numbers-gamma/src/test/java/org/apache/commons/numbers/gamma/ErfTest.java', 'commons-numbers-gamma/src/test/java/org/apache/commons/numbers/gamma/ErfcTest.java', 'commons-numbers-gamma/src/test/java/org/apache/commons/numbers/gamma/GammaTest.java', 'commons-numbers-gamma/src/test/java/org/apache/commons/numbers/gamma/InvGamma1pm1Test.java', 'commons-numbers-gamma/src/test/java/org/apache/commons/numbers/gamma/InverseErfTest.java', 'commons-numbers-gamma/src/test/java/org/apache/commons/numbers/gamma/InverseErfcTest.java', 'commons-numbers-gamma/src/test/java/org/apache/commons/numbers/gamma/LanczosApproximationTest.java', 'commons-numbers-gamma/src/test/java/org/apache/commons/numbers/gamma/LogBetaTest.java', 'commons-numbers-gamma/src/test/java/org/apache/commons/numbers/gamma/LogGamma1pTest.java', 'commons-numbers-gamma/src/test/java/org/apache/commons/numbers/gamma/LogGammaSumTest.java', 'commons-numbers-gamma/src/test/java/org/apache/commons/numbers/gamma/LogGammaTest.java', 'commons-numbers-gamma/src/test/java/org/apache/commons/numbers/gamma/RegularizedBetaTest.java', 'commons-numbers-gamma/src/test/java/org/apache/commons/numbers/gamma/RegularizedGammaTest.java', 'commons-numbers-gamma/src/test/java/org/apache/commons/numbers/gamma/TrigammaTest.java', 'commons-numbers-primes/src/main/java/org/apache/commons/numbers/primes/Primes.java', 'commons-numbers-primes/src/test/java/org/apache/commons/numbers/primes/PrimesTest.java', 'commons-numbers-primes/src/test/java/org/apache/commons/numbers/primes/SmallPrimesTest.java', 'commons-numbers-quaternion/src/test/java/org/apache/commons/numbers/quaternion/QuaternionTest.java', 'commons-numbers-quaternion/src/test/java/org/apache/commons/numbers/quaternion/SlerpTest.java', 'commons-numbers-rootfinder/src/test/java/org/apache/commons/numbers/rootfinder/BrentSolverTest.java', 'pom.xml', 'siteMods/pom.xml', 'siteMods/site.css', 'siteMods/site.xml']",Merge branch 'master' of https://gitbox.apache.org/repos/asf/commons-numbers,
e7e3bfbb6d311bf693381ff3d9339f88814da388,,,1,['commons-numbers-core/src/main/java/org/apache/commons/numbers/core/Precision.java'],"Javadoc.

First sentence modified so that it appears correctly on the HTML rendered page.",
b157f5bb2b9d8198056c0acefb08b83937f73278,aherbert,aherbert,1,['commons-numbers-examples/examples-jmh/src/main/java/org/apache/commons/numbers/examples/jmh/complex/SinCosPerformance.java'],Fix checkstyle errors,
51241aff264bf818fc59bf955dda8a12b6b30648,aherbert,aherbert,17,"['commons-numbers-angle/src/test/java/org/apache/commons/numbers/angle/PlaneAngleTest.java', 'commons-numbers-arrays/src/test/java/org/apache/commons/numbers/arrays/CosAngleTest.java', 'commons-numbers-arrays/src/test/java/org/apache/commons/numbers/arrays/LinearCombinationTest.java', 'commons-numbers-arrays/src/test/java/org/apache/commons/numbers/arrays/SafeNormTest.java', 'commons-numbers-combinatorics/src/test/java/org/apache/commons/numbers/combinatorics/BinomialCoefficientDoubleTest.java', 'commons-numbers-combinatorics/src/test/java/org/apache/commons/numbers/combinatorics/FactorialDoubleTest.java', 'commons-numbers-combinatorics/src/test/java/org/apache/commons/numbers/combinatorics/LogBinomialCoefficientTest.java', 'commons-numbers-combinatorics/src/test/java/org/apache/commons/numbers/combinatorics/LogFactorialTest.java', 'commons-numbers-complex-streams/src/test/java/org/apache/commons/numbers/complex/streams/ComplexUtilsTest.java', 'commons-numbers-complex/src/test/java/org/apache/commons/numbers/complex/ComplexTest.java', 'commons-numbers-core/src/test/java/org/apache/commons/numbers/core/PrecisionTest.java', 'commons-numbers-examples/examples-jmh/src/test/java/org/apache/commons/numbers/examples/jmh/arrays/DoublePrecisionTest.java', 'commons-numbers-field/src/test/java/org/apache/commons/numbers/field/FP64Test.java', 'commons-numbers-fraction/src/test/java/org/apache/commons/numbers/fraction/ContinuedFractionTest.java', 'commons-numbers-gamma/src/test/java/org/apache/commons/numbers/gamma/ErfTest.java', 'commons-numbers-gamma/src/test/java/org/apache/commons/numbers/gamma/LanczosApproximationTest.java', 'commons-numbers-quaternion/src/test/java/org/apache/commons/numbers/quaternion/QuaternionTest.java']","Remove Assertions.equals using 0.0 or 0d

Cases that require the use of 0.0 to equate -0.0 to 0.0 have been
commented.",
faaa4d539d88a43832eb8c4f9f4e9a6588022be4,aherbert,aherbert,1,['commons-numbers-field/src/test/java/org/apache/commons/numbers/field/FieldParametricTest.java'],Remove more public modifiers from tests,
7ae8abb4880ab1ef5c8c1b0a501e426aa38ac152,aherbert,aherbert,1,['commons-numbers-field/src/test/java/org/apache/commons/numbers/field/FieldParametricTest.java'],Remove public modifiers from tests,
6b0e82ae718dc17ab163b3949ba9f2d821a42d9d,aherbert,aherbert,1,['commons-numbers-primes/src/main/java/org/apache/commons/numbers/primes/Primes.java'],Remove extra if statement.,
2080a7be7e3f7b9a9f648b3061efe0d36f2be792,aherbert,aherbert,1,['commons-numbers-primes/src/main/java/org/apache/commons/numbers/primes/Primes.java'],"Remove commented out code.

The block:

if (isPrime(n)) return n;

is already executed with the same value n in lines above.",
e3712b4bd82dc11b581d7faac2a97da77334747e,aherbert,aherbert,49,"['commons-numbers-angle/src/test/java/org/apache/commons/numbers/angle/PlaneAngleRadiansTest.java', 'commons-numbers-angle/src/test/java/org/apache/commons/numbers/angle/PlaneAngleTest.java', 'commons-numbers-arrays/src/test/java/org/apache/commons/numbers/arrays/CosAngleTest.java', 'commons-numbers-arrays/src/test/java/org/apache/commons/numbers/arrays/LinearCombinationTest.java', 'commons-numbers-arrays/src/test/java/org/apache/commons/numbers/arrays/MultidimensionalCounterTest.java', 'commons-numbers-arrays/src/test/java/org/apache/commons/numbers/arrays/SafeNormTest.java', 'commons-numbers-combinatorics/src/test/java/org/apache/commons/numbers/combinatorics/BinomialCoefficientDoubleTest.java', 'commons-numbers-combinatorics/src/test/java/org/apache/commons/numbers/combinatorics/BinomialCoefficientTest.java', 'commons-numbers-combinatorics/src/test/java/org/apache/commons/numbers/combinatorics/CombinationsTest.java', 'commons-numbers-combinatorics/src/test/java/org/apache/commons/numbers/combinatorics/FactorialDoubleTest.java', 'commons-numbers-combinatorics/src/test/java/org/apache/commons/numbers/combinatorics/FactorialTest.java', 'commons-numbers-combinatorics/src/test/java/org/apache/commons/numbers/combinatorics/LogBinomialCoefficientTest.java', 'commons-numbers-combinatorics/src/test/java/org/apache/commons/numbers/combinatorics/LogFactorialTest.java', 'commons-numbers-complex-streams/src/test/java/org/apache/commons/numbers/complex/streams/ComplexUtilsTest.java', 'commons-numbers-complex/src/test/java/org/apache/commons/numbers/complex/CReferenceTest.java', 'commons-numbers-complex/src/test/java/org/apache/commons/numbers/complex/CStandardTest.java', 'commons-numbers-complex/src/test/java/org/apache/commons/numbers/complex/ComplexEdgeCaseTest.java', 'commons-numbers-complex/src/test/java/org/apache/commons/numbers/complex/ComplexTest.java', 'commons-numbers-core/src/test/java/org/apache/commons/numbers/core/ArithmeticUtilsTest.java', 'commons-numbers-core/src/test/java/org/apache/commons/numbers/core/PrecisionTest.java', 'commons-numbers-examples/examples-jmh/src/test/java/org/apache/commons/numbers/examples/jmh/arrays/DoublePrecisionTest.java', 'commons-numbers-examples/examples-jmh/src/test/java/org/apache/commons/numbers/examples/jmh/arrays/LinearCombinationAccuracyTest.java', 'commons-numbers-examples/examples-jmh/src/test/java/org/apache/commons/numbers/examples/jmh/arrays/LinearCombinationsTest.java', 'commons-numbers-field/src/test/java/org/apache/commons/numbers/field/FP64Test.java', 'commons-numbers-field/src/test/java/org/apache/commons/numbers/field/FieldParametricTest.java', 'commons-numbers-fraction/src/test/java/org/apache/commons/numbers/fraction/BigFractionTest.java', 'commons-numbers-fraction/src/test/java/org/apache/commons/numbers/fraction/ContinuedFractionTest.java', 'commons-numbers-fraction/src/test/java/org/apache/commons/numbers/fraction/FractionTest.java', 'commons-numbers-gamma/src/test/java/org/apache/commons/numbers/gamma/DigammaTest.java', 'commons-numbers-gamma/src/test/java/org/apache/commons/numbers/gamma/ErfDifferenceTest.java', 'commons-numbers-gamma/src/test/java/org/apache/commons/numbers/gamma/ErfTest.java', 'commons-numbers-gamma/src/test/java/org/apache/commons/numbers/gamma/ErfcTest.java', 'commons-numbers-gamma/src/test/java/org/apache/commons/numbers/gamma/GammaTest.java', 'commons-numbers-gamma/src/test/java/org/apache/commons/numbers/gamma/InvGamma1pm1Test.java', 'commons-numbers-gamma/src/test/java/org/apache/commons/numbers/gamma/InverseErfTest.java', 'commons-numbers-gamma/src/test/java/org/apache/commons/numbers/gamma/InverseErfcTest.java', 'commons-numbers-gamma/src/test/java/org/apache/commons/numbers/gamma/LanczosApproximationTest.java', 'commons-numbers-gamma/src/test/java/org/apache/commons/numbers/gamma/LogBetaTest.java', 'commons-numbers-gamma/src/test/java/org/apache/commons/numbers/gamma/LogGamma1pTest.java', 'commons-numbers-gamma/src/test/java/org/apache/commons/numbers/gamma/LogGammaSumTest.java', 'commons-numbers-gamma/src/test/java/org/apache/commons/numbers/gamma/LogGammaTest.java', 'commons-numbers-gamma/src/test/java/org/apache/commons/numbers/gamma/RegularizedBetaTest.java', 'commons-numbers-gamma/src/test/java/org/apache/commons/numbers/gamma/RegularizedGammaTest.java', 'commons-numbers-gamma/src/test/java/org/apache/commons/numbers/gamma/TrigammaTest.java', 'commons-numbers-primes/src/test/java/org/apache/commons/numbers/primes/PrimesTest.java', 'commons-numbers-primes/src/test/java/org/apache/commons/numbers/primes/SmallPrimesTest.java', 'commons-numbers-quaternion/src/test/java/org/apache/commons/numbers/quaternion/QuaternionTest.java', 'commons-numbers-quaternion/src/test/java/org/apache/commons/numbers/quaternion/SlerpTest.java', 'commons-numbers-rootfinder/src/test/java/org/apache/commons/numbers/rootfinder/BrentSolverTest.java']",Remove public modifiers for test fixtures.,
ebbbf929bd0745a1cd3f27e1092f9636439a7f92,aherbert,aherbert,2,"['commons-numbers-core/src/test/java/org/apache/commons/numbers/core/ArithmeticUtilsTest.java', 'commons-numbers-rootfinder/src/test/java/org/apache/commons/numbers/rootfinder/BrentSolverTest.java']",Use assertThrows,
7b57fc870aa7b08f0460d2198f57c0f379630c8e,aherbert,aherbert,2,"['commons-numbers-fraction/src/test/java/org/apache/commons/numbers/fraction/BigFractionTest.java', 'commons-numbers-fraction/src/test/java/org/apache/commons/numbers/fraction/FractionTest.java']",Use assertTrue/False when testing the equals method,
eb5a13e3c4b9ebe6de62f5a43ac60e291018529b,aherbert,aherbert,1,['commons-numbers-rootfinder/src/test/java/org/apache/commons/numbers/rootfinder/BrentSolverTest.java'],Use assertThrows instead of catching an expected exception,
d1b9542dac9a36d7a8ddf3dcc313553b28a6a12c,aherbert,aherbert,1,['pom.xml'],Remove commented out code,
4077b9ab4d578d4bce6994bafa6b90a4fa4bee7a,aherbert,aherbert,2,"['commons-numbers-combinatorics/src/test/java/org/apache/commons/numbers/combinatorics/FactorialDoubleTest.java', 'commons-numbers-quaternion/src/test/java/org/apache/commons/numbers/quaternion/QuaternionTest.java']",Fix SonarCloud: Use assertNotEquals,
7ab58cc1d403611d1869847260953d0302154acc,aherbert,aherbert,2,"['commons-numbers-combinatorics/src/main/java/org/apache/commons/numbers/combinatorics/FactorialDouble.java', 'commons-numbers-combinatorics/src/main/java/org/apache/commons/numbers/combinatorics/LogFactorial.java']",Fix SonarCloud: Remove nested ternary,
7983d34b7b3fab4dbaf21c04dad427555b498539,aherbert,aherbert,1,['commons-numbers-combinatorics/src/test/java/org/apache/commons/numbers/combinatorics/LogFactorialTest.java'],Add assertions to test of useless cache,
c83453e4745f7942686790c043d42886ebc78d4c,aherbert,aherbert,47,"['commons-numbers-angle/src/test/java/org/apache/commons/numbers/angle/PlaneAngleRadiansTest.java', 'commons-numbers-angle/src/test/java/org/apache/commons/numbers/angle/PlaneAngleTest.java', 'commons-numbers-arrays/src/test/java/org/apache/commons/numbers/arrays/CosAngleTest.java', 'commons-numbers-arrays/src/test/java/org/apache/commons/numbers/arrays/LinearCombinationTest.java', 'commons-numbers-arrays/src/test/java/org/apache/commons/numbers/arrays/MultidimensionalCounterTest.java', 'commons-numbers-arrays/src/test/java/org/apache/commons/numbers/arrays/SafeNormTest.java', 'commons-numbers-combinatorics/src/test/java/org/apache/commons/numbers/combinatorics/BinomialCoefficientDoubleTest.java', 'commons-numbers-combinatorics/src/test/java/org/apache/commons/numbers/combinatorics/BinomialCoefficientTest.java', 'commons-numbers-combinatorics/src/test/java/org/apache/commons/numbers/combinatorics/CombinationsTest.java', 'commons-numbers-combinatorics/src/test/java/org/apache/commons/numbers/combinatorics/FactorialDoubleTest.java', 'commons-numbers-combinatorics/src/test/java/org/apache/commons/numbers/combinatorics/FactorialTest.java', 'commons-numbers-combinatorics/src/test/java/org/apache/commons/numbers/combinatorics/LogBinomialCoefficientTest.java', 'commons-numbers-combinatorics/src/test/java/org/apache/commons/numbers/combinatorics/LogFactorialTest.java', 'commons-numbers-complex-streams/src/test/java/org/apache/commons/numbers/complex/streams/ComplexUtilsTest.java', 'commons-numbers-complex/src/test/java/org/apache/commons/numbers/complex/CReferenceTest.java', 'commons-numbers-complex/src/test/java/org/apache/commons/numbers/complex/CStandardTest.java', 'commons-numbers-complex/src/test/java/org/apache/commons/numbers/complex/ComplexEdgeCaseTest.java', 'commons-numbers-complex/src/test/java/org/apache/commons/numbers/complex/ComplexTest.java', 'commons-numbers-core/src/test/java/org/apache/commons/numbers/core/ArithmeticUtilsTest.java', 'commons-numbers-core/src/test/java/org/apache/commons/numbers/core/PrecisionTest.java', 'commons-numbers-examples/examples-jmh/src/test/java/org/apache/commons/numbers/examples/jmh/arrays/DoublePrecisionTest.java', 'commons-numbers-examples/examples-jmh/src/test/java/org/apache/commons/numbers/examples/jmh/arrays/LinearCombinationsTest.java', 'commons-numbers-field/src/test/java/org/apache/commons/numbers/field/FP64Test.java', 'commons-numbers-fraction/src/test/java/org/apache/commons/numbers/fraction/BigFractionTest.java', 'commons-numbers-fraction/src/test/java/org/apache/commons/numbers/fraction/ContinuedFractionTest.java', 'commons-numbers-fraction/src/test/java/org/apache/commons/numbers/fraction/FractionTest.java', 'commons-numbers-gamma/src/test/java/org/apache/commons/numbers/gamma/DigammaTest.java', 'commons-numbers-gamma/src/test/java/org/apache/commons/numbers/gamma/ErfDifferenceTest.java', 'commons-numbers-gamma/src/test/java/org/apache/commons/numbers/gamma/ErfTest.java', 'commons-numbers-gamma/src/test/java/org/apache/commons/numbers/gamma/ErfcTest.java', 'commons-numbers-gamma/src/test/java/org/apache/commons/numbers/gamma/GammaTest.java', 'commons-numbers-gamma/src/test/java/org/apache/commons/numbers/gamma/InvGamma1pm1Test.java', 'commons-numbers-gamma/src/test/java/org/apache/commons/numbers/gamma/InverseErfTest.java', 'commons-numbers-gamma/src/test/java/org/apache/commons/numbers/gamma/InverseErfcTest.java', 'commons-numbers-gamma/src/test/java/org/apache/commons/numbers/gamma/LanczosApproximationTest.java', 'commons-numbers-gamma/src/test/java/org/apache/commons/numbers/gamma/LogBetaTest.java', 'commons-numbers-gamma/src/test/java/org/apache/commons/numbers/gamma/LogGamma1pTest.java', 'commons-numbers-gamma/src/test/java/org/apache/commons/numbers/gamma/LogGammaSumTest.java', 'commons-numbers-gamma/src/test/java/org/apache/commons/numbers/gamma/LogGammaTest.java', 'commons-numbers-gamma/src/test/java/org/apache/commons/numbers/gamma/RegularizedBetaTest.java', 'commons-numbers-gamma/src/test/java/org/apache/commons/numbers/gamma/RegularizedGammaTest.java', 'commons-numbers-gamma/src/test/java/org/apache/commons/numbers/gamma/TrigammaTest.java', 'commons-numbers-primes/src/test/java/org/apache/commons/numbers/primes/PrimesTest.java', 'commons-numbers-primes/src/test/java/org/apache/commons/numbers/primes/SmallPrimesTest.java', 'commons-numbers-quaternion/src/test/java/org/apache/commons/numbers/quaternion/QuaternionTest.java', 'commons-numbers-quaternion/src/test/java/org/apache/commons/numbers/quaternion/SlerpTest.java', 'commons-numbers-rootfinder/src/test/java/org/apache/commons/numbers/rootfinder/BrentSolverTest.java']",Fix SonarCloud: Test scope for JUnit5 can be package-private,
9bc38041ed48e7a8108d488047af8be7ac7b4a13,aherbert,aherbert,1,['pom.xml'],"Update commons-parent 50 to 51

Allows bundling LICENSE and NOTICE in the jar files.",
736d373c312e5b17f105dab29173275bba4e9859,aherbert,aherbert,3,"['siteMods/pom.xml', 'siteMods/site.css', 'siteMods/site.xml']","Remove redundant siteMods directory.

This has been copied from commons-math. It is used to build the math
userguide and is not applicable to the numbers project.",
c837f7bcea8dbf0aaff31ddd18b24e48b31aac53,aherbert,aherbert,1,['pom.xml'],"Remove redundant groupId from pom.

The project groupId matches the parent groupId.",
246f3648fa9027d0a11b009ba2a42b0a48b68ba7,XenoAmess,aherbert,1,['.travis.yml'],refine travis-ci scripts,
bef023d440634e7109605a2988c647e37daf568d,XenoAmess,web-flow,1,['CONTRIBUTING.md'],fix typo,
ae6a5e39b4e4c424959fbfdd9dc13aa05c3e3517,aherbert,aherbert,5,"['commons-numbers-fraction/src/main/java/org/apache/commons/numbers/fraction/BigFraction.java', 'commons-numbers-fraction/src/main/java/org/apache/commons/numbers/fraction/Fraction.java', 'commons-numbers-fraction/src/test/java/org/apache/commons/numbers/fraction/BigFractionTest.java', 'commons-numbers-fraction/src/test/java/org/apache/commons/numbers/fraction/CommonTestCases.java', 'commons-numbers-fraction/src/test/java/org/apache/commons/numbers/fraction/FractionTest.java']","NUMBERS-147: Fix conversion from double to support 2^31

The value 2^31 can be in the numerator or denominator. Previously the
conversion from double supported up to Integer.MAX_VALUE which is
2^31-1.

Adds common test cases for conversion from double with a max
denominator.

Changed the conversion from a double to use the absolute value and
restore the sign at the end. The conversion is thus identical for
positive or negative values.

Throw an illegal argument exception if maxDenominator is zero. A zero
invalidates the conversion from a double with a restricted denominator.

Replace Math.abs with compareUnsigned. This is appropriate as the fraction p/q is
always positive.

Add test cases for overflow double conversions.

Fix the fall-back to always use p1/q1 when either p2 or q2 overflow.

Move the default max iterations to a constant.

Validate epsilon and max iterations are positive.",NUMBERS-147
5daca57eea93e42323d35659c118aea43815f3cf,aherbert,aherbert,1,['commons-numbers-fraction/src/main/java/org/apache/commons/numbers/fraction/BigFraction.java'],"BigFraction: Mantissa cannot be zero in subnormal number

Since the value has already been tested against zero any sub-normal
number has a non-zero mantissa.",
aa243b33be0eccd3878d46b7ac485e048c2a2dbd,aherbert,aherbert,1,['commons-numbers-fraction/src/main/java/org/apache/commons/numbers/fraction/Fraction.java'],Use correct FractionException constant in Fraction constructor,
649eaaac1bc82a97d4d8792bf240dddcc6abde73,aherbert,aherbert,1,['commons-numbers-fraction/src/main/java/org/apache/commons/numbers/fraction/FractionException.java'],FractionException constructor with a plain string message,
d6bda8679b1c9d290de24f269c6140837c5b9c91,aherbert,aherbert,1,['commons-numbers-fraction/src/main/java/org/apache/commons/numbers/fraction/FractionException.java'],"Change FractionException to use String.format

The use of MessageFormat.format does not support a canonical String
representation for a double value. This prevents the message from
containing the exact double that caused a conversion error.

For example the previous message format text contained the text:

Overflow trying to convert 0 to fraction

when the input double was 4.6566128730773926E-10",
69f7ddc5065961e12b63002d2d4a34b145758963,aherbert,aherbert,2,"['commons-numbers-fraction/src/main/java/org/apache/commons/numbers/fraction/BigFraction.java', 'commons-numbers-fraction/src/main/java/org/apache/commons/numbers/fraction/Fraction.java']","Fraction: double constructor to avoid iterations <= epsilon.

Change < epsilon to <= epsilon.

The rest of the double constructor logic uses > epsilon. Thus <= epsilon
is the opposite comparison operator.

This allows avoiding the iterations in max denominator mode (epsilon ==
0.0) when the double argument is an exact integer.",
466d33e9b9028740ed3b4e9259f4423e8fc4750b,aherbert,aherbert,1,['commons-numbers-fraction/src/test/java/org/apache/commons/numbers/fraction/CommonTestCases.java'],Add integer case to double constructor test cases.,
ccd5e31a6cf67cc061a4f53abc3920492e3ce5b5,aherbert,aherbert,2,"['commons-numbers-fraction/src/main/java/org/apache/commons/numbers/fraction/Fraction.java', 'commons-numbers-fraction/src/test/java/org/apache/commons/numbers/fraction/FractionTest.java']","Fraction: Add tests for Integer.MIN_VALUE in intValue()

The intValue cannot be done by simple integer divide arithmetic:

numerator / denominator

This will return Integer.MIN_VALUE for the fraction Integer.MIN_VALUE /
-1. The correct result is Integer.MAX_VALUE (as the fraction is
positive).

integer divide arithmetic can be used in longValue().",
c8d9fb72b27ffe35134559915913db859ba59c3f,aherbert,aherbert,3,"['commons-numbers-fraction/src/test/java/org/apache/commons/numbers/fraction/BigFractionTest.java', 'commons-numbers-fraction/src/test/java/org/apache/commons/numbers/fraction/CommonTestCases.java', 'commons-numbers-fraction/src/test/java/org/apache/commons/numbers/fraction/FractionTest.java']",Use final,
86e3b5f732eca7942984b63c2be7108d39605911,aherbert,aherbert,2,"['commons-numbers-fraction/src/main/java/org/apache/commons/numbers/fraction/Fraction.java', 'commons-numbers-fraction/src/test/java/org/apache/commons/numbers/fraction/FractionTest.java']","Fraction: test for zero in add/subtract int

Added test cases with Integer.MIN_VALUE as this requires special
handling for subtract.",
1e789e0538dc9c5ab37eadafa0cb365c526981f7,aherbert,aherbert,1,['commons-numbers-fraction/src/test/java/org/apache/commons/numbers/fraction/FractionTest.java'],FractionTest: Create test cases for arithmetic overflow,
b0164fb6b185e3776a17af54c631ff76a74b4f66,aherbert,aherbert,1,['commons-numbers-fraction/src/main/java/org/apache/commons/numbers/fraction/Fraction.java'],Fraction: rename f to num (for numerator) in add/subtract int,
83098b7bec08e11829dc419a556b34a142809776,aherbert,aherbert,1,['commons-numbers-fraction/src/test/java/org/apache/commons/numbers/fraction/FractionTest.java'],FractionTest: overflow check in multiply/divide by int,
e3f69b746cc89f4c8ef8efb390c854131cc19842,aherbert,aherbert,2,"['commons-numbers-fraction/src/main/java/org/apache/commons/numbers/fraction/Fraction.java', 'commons-numbers-fraction/src/test/java/org/apache/commons/numbers/fraction/FractionTest.java']",Fraction: fix overflow detection in add/subtract int,
5192e10a101ebf7d91706b7ce1b5d4321d664a18,aherbert,aherbert,3,"['commons-numbers-fraction/src/main/java/org/apache/commons/numbers/fraction/BigFraction.java', 'commons-numbers-fraction/src/main/java/org/apache/commons/numbers/fraction/Fraction.java', 'commons-numbers-fraction/src/test/java/org/apache/commons/numbers/fraction/CommonTestCases.java']","Fraction: use factory constructor in add/subtract

These can create zero if the denominator is 1.

Added a case to the common test cases to check the canonical zero (0 /
1) is returned.",
7d64af52fd2ed82e5410d6e7bbe202b153c1a381,aherbert,aherbert,1,['commons-numbers-fraction/src/test/java/org/apache/commons/numbers/fraction/FractionTest.java'],Remove unused import,
b47f05ebe6d298bc933603d1115602d3b96d91dc,aherbert,aherbert,1,['commons-numbers-core/src/test/java/org/apache/commons/numbers/core/TestUtils.java'],"Clean-up numbers core TestUtilities.

Removed all public methods that are not used.",Clean-
e55c35bffb5d73ba787e6da2c7af95cc4007beb3,aherbert,aherbert,1,['commons-numbers-fraction/src/test/java/org/apache/commons/numbers/fraction/FractionTest.java'],FractionTest: use assertFraction in testMath1261,
6794743049740bf8088065cd296d117544ca0e8c,aherbert,aherbert,2,"['commons-numbers-fraction/src/main/java/org/apache/commons/numbers/fraction/BigFraction.java', 'commons-numbers-fraction/src/main/java/org/apache/commons/numbers/fraction/Fraction.java']","Fraction: Optimise divide by fraction

The divide uses multiply by reciprocal. This can avoid the call to
reciprocal() by directly inverting the numerator and denominator. These
will already by in reduced form and thus this avoids the reduction
algorithm.",
368187dd96e44430ed3eff270dfec171298a7149,aherbert,aherbert,1,['commons-numbers-fraction/src/main/java/org/apache/commons/numbers/fraction/Fraction.java'],Fraction: efficient divide by integer,
4002f401de28135700526749664d4f52a012411f,aherbert,aherbert,1,['commons-numbers-fraction/src/main/java/org/apache/commons/numbers/fraction/Fraction.java'],Fraction: efficient multiply by integer,
4356bd947a81343e093254116d0798870e959521,aherbert,aherbert,2,"['commons-numbers-fraction/src/main/java/org/apache/commons/numbers/fraction/BigFraction.java', 'commons-numbers-fraction/src/main/java/org/apache/commons/numbers/fraction/Fraction.java']","Fraction: update toString()

Since zero is a canonical value (0 / 1) it cannot be obtained in
toString when the denominator is not 1. Rearrange the toString logic to
test for zero first.",
fa5b3eed90ac61ae4230ec0e69a9f10102d66d12,aherbert,aherbert,5,"['commons-numbers-fraction/src/main/java/org/apache/commons/numbers/fraction/BigFraction.java', 'commons-numbers-fraction/src/main/java/org/apache/commons/numbers/fraction/Fraction.java', 'commons-numbers-fraction/src/test/java/org/apache/commons/numbers/fraction/BigFractionTest.java', 'commons-numbers-fraction/src/test/java/org/apache/commons/numbers/fraction/CommonTestCases.java', 'commons-numbers-fraction/src/test/java/org/apache/commons/numbers/fraction/FractionTest.java']","Fraction: Use canonical zero as 0 / 1

Change arithmetic to return ZERO where applicable.

Change the factory constructor to return ZERO when the fraction is zero.

This removes the possibility to create 0 / -1. There should be no
equivalent of 0.0 and -0.0 in double. Thus compareTo, equals and
doubleValue() should function as if 0 / 1 and 0 / -1 are identical.",
854d141a9332c26b09c8164d6f428fb69d9f2fc3,aherbert,aherbert,4,"['commons-numbers-fraction/src/main/java/org/apache/commons/numbers/fraction/BigFraction.java', 'commons-numbers-fraction/src/main/java/org/apache/commons/numbers/fraction/Fraction.java', 'commons-numbers-fraction/src/test/java/org/apache/commons/numbers/fraction/BigFractionTest.java', 'commons-numbers-fraction/src/test/java/org/apache/commons/numbers/fraction/FractionTest.java']","Fraction: fix compareTo for positive numbers with two negative parts

The numerator and denominator can both be negative. Thus the comparison
by magnitude (when the signum is equal) must use the absolute values.",
bcdbb3f3531d80a4d366e91b629b802a94667c9e,aherbert,aherbert,3,"['commons-numbers-fraction/src/test/java/org/apache/commons/numbers/fraction/BigFractionTest.java', 'commons-numbers-fraction/src/test/java/org/apache/commons/numbers/fraction/CommonTestCases.java', 'commons-numbers-fraction/src/test/java/org/apache/commons/numbers/fraction/FractionTest.java']","Fraction: common test cases for arithmetic with an integer

add/subtract/multiply/divide using an int argument.",
51419db92c6fa1edd7b2d2cfaf26ae6bd4f45704,aherbert,aherbert,2,"['commons-numbers-fraction/src/main/java/org/apache/commons/numbers/fraction/BigFraction.java', 'commons-numbers-fraction/src/test/java/org/apache/commons/numbers/fraction/BigFractionTest.java']","BigFraction: Remove pow(long/BigInteger)

These are currently redundant given the maximum supported range of
BigInteger in the reference JDK.",
bb645f6c19a93cf2bc8aef21ee1c09e0bab3658d,aherbert,aherbert,3,"['commons-numbers-fraction/src/test/java/org/apache/commons/numbers/fraction/BigFractionTest.java', 'commons-numbers-fraction/src/test/java/org/apache/commons/numbers/fraction/CommonTestCases.java', 'commons-numbers-fraction/src/test/java/org/apache/commons/numbers/fraction/FractionTest.java']","Fraction: Increase similarity between BigFraction tests

Adds some compareTo tests that currently fail.",
7fa4f4be1d2b2ab36520dbe98ef950a3b267d264,aherbert,aherbert,3,"['commons-numbers-fraction/src/test/java/org/apache/commons/numbers/fraction/BigFractionTest.java', 'commons-numbers-fraction/src/test/java/org/apache/commons/numbers/fraction/CommonTestCases.java', 'commons-numbers-fraction/src/test/java/org/apache/commons/numbers/fraction/FractionTest.java']",Rename powFractionTestCases to powTestCases,
36154bba47e78c3a3d1ff9193ffacb89be13c63f,aherbert,aherbert,3,"['commons-numbers-fraction/src/main/java/org/apache/commons/numbers/fraction/BigFraction.java', 'commons-numbers-fraction/src/main/java/org/apache/commons/numbers/fraction/Fraction.java', 'commons-numbers-fraction/src/test/java/org/apache/commons/numbers/fraction/FractionTest.java']","Fixed Fraction.compareTo

Since the sign can be in the numerator or denominator the signum must be
checked first before the magnitude can be tested.",
7ad0f911ad41b69b52fffdf07d2cda11897aec6d,aherbert,aherbert,2,"['commons-numbers-fraction/src/test/java/org/apache/commons/numbers/fraction/BigFractionTest.java', 'commons-numbers-fraction/src/test/java/org/apache/commons/numbers/fraction/FractionTest.java']","Use consistent order and tests in FractionTest and BigFractionTest.

Copy missing tests from each class to the other when applicable.

The compare function in Fraction currently fails and assertions are
commented out.",
828f6a728d92e1ae911233ea2da9c100586f8d2d,aherbert,aherbert,2,"['commons-numbers-fraction/src/test/java/org/apache/commons/numbers/fraction/BigFractionTest.java', 'commons-numbers-fraction/src/test/java/org/apache/commons/numbers/fraction/FractionTest.java']","Fraction: Add tests for two representations of zero.

BigFraction handles the conversion to double and float differently than
Fraction as it does not support negative zero.",
c876c0c189061564905594111e336f7e588666a0,aherbert,aherbert,1,['commons-numbers-fraction/src/test/java/org/apache/commons/numbers/fraction/FractionTest.java'],"FractionTest: zero divide should be equal to Fraction.ZERO

This relaxes the requirement that it is the same object as
Fraction.ZERO.",
6cabdbc54d0af1976339e000217950a88b583e79,aherbert,aherbert,1,['commons-numbers-fraction/src/main/java/org/apache/commons/numbers/fraction/Fraction.java'],Fraction: Fix divide to return this if it is zero.,
eea818d1781314504e8de7fa6873005739117c7b,aherbert,aherbert,1,['commons-numbers-fraction/src/test/java/org/apache/commons/numbers/fraction/CommonTestCases.java'],"Fraction: Add alternative zero to common test cases.

Zero can be 0 / 1 or 0 / -1.

Zero divide is specified to return the original faction and not
Fraction.ZERO.",
99c627e57e5bb14ada31f33809aa62356bfbb7bd,aherbert,aherbert,2,"['commons-numbers-fraction/src/main/java/org/apache/commons/numbers/fraction/BigFraction.java', 'commons-numbers-fraction/src/test/java/org/apache/commons/numbers/fraction/BigFractionTest.java']",Document and test for overflow in BigFraction.pow(int),
e0582a914b7901cfb840603a038e941fc975690c,aherbert,aherbert,2,"['commons-numbers-fraction/src/main/java/org/apache/commons/numbers/fraction/BigFraction.java', 'commons-numbers-fraction/src/test/java/org/apache/commons/numbers/fraction/BigFractionTest.java']",Remove BigFraction.pow(double).,
699897ddf39225f27eff0baa06c27bbaa894d23f,aherbert,aherbert,3,"['commons-numbers-fraction/src/test/java/org/apache/commons/numbers/fraction/BigFractionTest.java', 'commons-numbers-fraction/src/test/java/org/apache/commons/numbers/fraction/CommonTestCases.java', 'commons-numbers-fraction/src/test/java/org/apache/commons/numbers/fraction/FractionTest.java']",Added fraction power test cases,
c572758acfd7ddfc17554d42d89414a4574ed721,aherbert,aherbert,1,['commons-numbers-fraction/src/test/java/org/apache/commons/numbers/fraction/CommonTestCases.java'],Add -0.0 to fraction constructor test cases.,
424c6c359b230554acf29afebf6c375e12b84d1d,aherbert,aherbert,2,"['commons-numbers-fraction/src/main/java/org/apache/commons/numbers/fraction/Fraction.java', 'commons-numbers-fraction/src/test/java/org/apache/commons/numbers/fraction/FractionTest.java']","Fraction: Add thrown exception to pow javadoc.

Add test to the demonstrate exception due to overflow.",
58aafe135561b2912ec0301655dc431e796175dc,aherbert,aherbert,1,['commons-numbers-fraction/src/main/java/org/apache/commons/numbers/fraction/BigFraction.java'],BigFraction: Correct javadoc for pow(double) method.,
ded284061692853f2e1bffec71ef7ce600a5246a,aherbert,aherbert,2,"['commons-numbers-fraction/src/test/java/org/apache/commons/numbers/fraction/BigFractionTest.java', 'commons-numbers-fraction/src/test/java/org/apache/commons/numbers/fraction/FractionTest.java']",Fraction: Add zero test to equals and hashCode,
c8e4fe25bbdb08ecb23643bde3f3ac55d0926156,aherbert,aherbert,1,['commons-numbers-fraction/src/main/java/org/apache/commons/numbers/fraction/BigFraction.java'],BigFraction: Document exception thrown by reciprocal when zero.,
f3bab83e11afc75e8246d72f04c6cb3787356b4e,aherbert,aherbert,1,['commons-numbers-fraction/src/main/java/org/apache/commons/numbers/fraction/FractionException.java'],FractionException: Removed unused exception constant.,
5768299d477dce8b72d4d28f93f2277256495981,aherbert,aherbert,1,['commons-numbers-fraction/src/main/java/org/apache/commons/numbers/fraction/Fraction.java'],Fraction: Use of(numerator) to construct the public constants.,
01cb55acd3068e0518b88730c73f0081a557efdd,aherbert,aherbert,1,['commons-numbers-fraction/src/main/java/org/apache/commons/numbers/fraction/Fraction.java'],"Fraction constructor cannot throw an arithmetic exception

The greatest common divisor is never called with the 3 cases where
ArithmeticUtils.gcd can throw an exception.",
8089d08aab20d9d35b446513620ebf69e1bb46a3,aherbert,aherbert,1,['commons-numbers-fraction/src/test/java/org/apache/commons/numbers/fraction/FractionTest.java'],Fraction: test multiply by integer with zero cases.,
25ce3fab796588830b4da9adfae2370548c20c1c,aherbert,aherbert,2,"['commons-numbers-fraction/src/test/java/org/apache/commons/numbers/fraction/BigFractionTest.java', 'commons-numbers-fraction/src/test/java/org/apache/commons/numbers/fraction/FractionTest.java']",Use assertThrows to detect exceptions,
d293dd0bdb5faa2e33fcf75c7a1097634244631f,aherbert,aherbert,1,['commons-numbers-fraction/src/test/java/org/apache/commons/numbers/fraction/FractionTest.java'],Explicit test for divide by zero in fraction constructor,
40dae8c00511e44fcd0d904f1569520dd5586b33,aherbert,aherbert,2,"['commons-numbers-fraction/src/main/java/org/apache/commons/numbers/fraction/BigFraction.java', 'commons-numbers-fraction/src/main/java/org/apache/commons/numbers/fraction/Fraction.java']","Fraction.of(numerator) to directly invoke special fraction constructor.

When the denominator is 1 there is no requirement to use the reduction
logic.

This method is invoked for use in arithmetic with integers with a
corresponding performance gain for avoiding the reduction logic.",
ddc1ee77d15a915632c215fb6a49987500bff16a,aherbert,aherbert,1,['commons-numbers-fraction/src/main/java/org/apache/commons/numbers/fraction/Fraction.java'],Fraction: Document possible exception thrown by reciprocal(),
c7a2734c4db92354d34a6feec64d89a3055cc600,aherbert,aherbert,4,"['commons-numbers-fraction/src/main/java/org/apache/commons/numbers/fraction/BigFraction.java', 'commons-numbers-fraction/src/main/java/org/apache/commons/numbers/fraction/Fraction.java', 'commons-numbers-fraction/src/test/java/org/apache/commons/numbers/fraction/BigFractionTest.java', 'commons-numbers-fraction/src/test/java/org/apache/commons/numbers/fraction/FractionTest.java']","Clean-up Fraction hashcode.

Removed reference to Arrays.hashCode in the comments.

Changed computation to be the hash generated from Array.hashCode with
the magnitude of the numerator and the denominator then multiplied by
the sign.",Clean-
51973c3294ca0cdfbe711c8549e2609b40d31634,aherbert,aherbert,4,"['commons-numbers-fraction/src/main/java/org/apache/commons/numbers/fraction/BigFraction.java', 'commons-numbers-fraction/src/main/java/org/apache/commons/numbers/fraction/Fraction.java', 'commons-numbers-fraction/src/test/java/org/apache/commons/numbers/fraction/BigFractionTest.java', 'commons-numbers-fraction/src/test/java/org/apache/commons/numbers/fraction/FractionTest.java']","Fix fraction hashCode

The sign must be incorporated into the hash as a fraction with the same
numerical value can have different representations:

-1/3 == 1/-3

Using the sign ensures that -1/3 and 1/3 have different hash codes. This
would not be true if the hash were constructed using only the absolute
values of numerator and denominator.",
fbcde793e465e265ba3ee2ee88cc3d4fcf59cb89,aherbert,aherbert,2,"['commons-numbers-fraction/src/main/java/org/apache/commons/numbers/fraction/BigFraction.java', 'commons-numbers-fraction/src/main/java/org/apache/commons/numbers/fraction/Fraction.java']","Updated Fraction/BigFraction signum()

Use the method from BigInteger.divide(BigInteger).

The sign of the result is equal to a.signum() * b.signum() for a/b.

This exploits the fact that BigInteger explicitly stores the signum as a
field thus removing the need for signed comparators in the
BigFraction.signum() method.

For Fraction the use of Integer.signum(int) for numerator and
denominator is the equivalent operation. This is also branchless due to
use of bit manipulation in Integer.signum to compute the sign.",
1dad4a176279a608a655d8c4473463139f833c67,aherbert,aherbert,3,"['commons-numbers-fraction/src/test/java/org/apache/commons/numbers/fraction/BigFractionTest.java', 'commons-numbers-fraction/src/test/java/org/apache/commons/numbers/fraction/CommonTestCases.java', 'commons-numbers-fraction/src/test/java/org/apache/commons/numbers/fraction/FractionTest.java']",Add test for signum to fraction constructor tests,
d392058a78213e96f1218d26a10b9702cd9954e6,aherbert,aherbert,2,"['commons-numbers-fraction/src/test/java/org/apache/commons/numbers/fraction/BigFractionTest.java', 'commons-numbers-fraction/src/test/java/org/apache/commons/numbers/fraction/FractionTest.java']","Test hashCode is equal when the fractions are equal.

This test currently fails and is marked disabled.",
233223542e392be0055edddfe7bcc54f5e49300f,aherbert,aherbert,1,['src/main/resources/pmd/pmd-ruleset.xml'],"PMD: Allow certain violations in Fraction/BigFraction

Allow field ZERO and ONE to match method name in Fraction.

Allow GodClass and ExcessiveMethodLength for BigFraction.",
071aa588ba37907241ae684a0e34c014789450ec,aherbert,aherbert,2,"['commons-numbers-fraction/src/main/java/org/apache/commons/numbers/fraction/BigFraction.java', 'commons-numbers-fraction/src/main/java/org/apache/commons/numbers/fraction/Fraction.java']",Avoid reassigning parameters.,
0963555f3791a90c953ec916dde82bd7a74399f7,aherbert,aherbert,4,"['commons-numbers-fraction/src/main/java/org/apache/commons/numbers/fraction/BigFraction.java', 'commons-numbers-fraction/src/main/java/org/apache/commons/numbers/fraction/Fraction.java', 'commons-numbers-fraction/src/main/java/org/apache/commons/numbers/fraction/FractionException.java', 'commons-numbers-fraction/src/test/java/org/apache/commons/numbers/fraction/BigFractionTest.java']","Fraction/BigFraction: Increase consistency using isZero().

Use internal method isZero() for increase consistency.

Consistent divide by zero error message.

Consistent formatting in identical methods.",
d7b2895dc48b6804ef010188906209346edb6a1b,aherbert,aherbert,4,"['commons-numbers-fraction/src/main/java/org/apache/commons/numbers/fraction/ContinuedFraction.java', 'commons-numbers-fraction/src/test/java/org/apache/commons/numbers/fraction/ContinuedFractionTest.java', 'commons-numbers-gamma/src/main/java/org/apache/commons/numbers/gamma/RegularizedBeta.java', 'commons-numbers-gamma/src/main/java/org/apache/commons/numbers/gamma/RegularizedGamma.java']","ContinuedFraction: reverse names of coefficients a and b

a = numerator
b = denominator

This matches the original reference paper for the implemented method
(Thompson & Barnett, 1986).",
8b6ba200cad92f37c0127d45bd58ad28d52e07ad,aherbert,aherbert,2,"['commons-numbers-fraction/src/main/java/org/apache/commons/numbers/fraction/BigFraction.java', 'commons-numbers-fraction/src/main/java/org/apache/commons/numbers/fraction/Fraction.java']",Fraction/BigFraction to use consistent javadoc.,
4e596fc5c9203f898e49806d6f3b46388e26be1f,aherbert,aherbert,4,"['commons-numbers-fraction/src/main/java/org/apache/commons/numbers/fraction/BigFraction.java', 'commons-numbers-fraction/src/main/java/org/apache/commons/numbers/fraction/Fraction.java', 'commons-numbers-fraction/src/test/java/org/apache/commons/numbers/fraction/BigFractionTest.java', 'commons-numbers-fraction/src/test/java/org/apache/commons/numbers/fraction/FractionTest.java']","Fraction/BigFraction to validate input double in factory constructors

The double must not be nan or infinite.",
7a94e4afb853c4e32b19a6ef0053937bf4bd7c2e,aherbert,aherbert,2,"['commons-numbers-fraction/src/main/java/org/apache/commons/numbers/fraction/BigFraction.java', 'commons-numbers-fraction/src/main/java/org/apache/commons/numbers/fraction/Fraction.java']","Fraction/BigFraction to use same method order:

private constructors

factory constructors, including parse(String)

Properties:
zero(), one()
numerator(), denominator()

Computed properties:
signum

Conversions:
abs, negate, reciprocal
primitive values (double/float/int/longValue,etc)

Math:

Arithmetic
add,subtract,multiply,divide

Power functions

Standard object stuff:
toString(), compareTo, equals(), hashCode()",
077baedf1203d26ff34592c60fc2e44ca1d58ee6,aherbert,aherbert,2,"['commons-numbers-fraction/src/main/java/org/apache/commons/numbers/fraction/BigFraction.java', 'commons-numbers-fraction/src/main/java/org/apache/commons/numbers/fraction/Fraction.java']","BigFraction/Fraction: clean-up javadoc

Remove <p> tags from first paragraph.

Change <code> tags to {@code ...}

Consistent javadoc between BigFraction and Fraction.",
db98ddf465f685a2ae0ec265feb6de8fe62f3f67,aherbert,aherbert,1,['commons-numbers-fraction/src/main/java/org/apache/commons/numbers/fraction/BigFraction.java'],"BigFraction: Removed validation of arguments in internal function

This method is only called internally and the arguments are always
valid.",
01a6c770666f2e7cf970729519162cb24f6bf337,darkma773r,darkma773r,13,"['README.md', 'commons-numbers-angle/README.md', 'commons-numbers-arrays/README.md', 'commons-numbers-combinatorics/README.md', 'commons-numbers-complex-streams/README.md', 'commons-numbers-complex/README.md', 'commons-numbers-core/README.md', 'commons-numbers-field/README.md', 'commons-numbers-fraction/README.md', 'commons-numbers-gamma/README.md', 'commons-numbers-primes/README.md', 'commons-numbers-quaternion/README.md', 'commons-numbers-rootfinder/README.md']",updating README files to refer to latest release,
344dc40b255eb33133e67e7b2050b6d67d64c4b0,darkma773r,darkma773r,32,"['RELEASE-NOTES.txt', 'commons-numbers-angle/src/site/site.xml', 'commons-numbers-angle/src/site/xdoc/index.xml', 'commons-numbers-arrays/src/site/site.xml', 'commons-numbers-arrays/src/site/xdoc/index.xml', 'commons-numbers-combinatorics/src/site/site.xml', 'commons-numbers-combinatorics/src/site/xdoc/index.xml', 'commons-numbers-complex/pom.xml', 'commons-numbers-complex/src/site/site.xml', 'commons-numbers-complex/src/site/xdoc/index.xml', 'commons-numbers-core/src/site/site.xml', 'commons-numbers-core/src/site/xdoc/index.xml', 'commons-numbers-field/src/site/site.xml', 'commons-numbers-field/src/site/xdoc/index.xml', 'commons-numbers-fraction/src/site/site.xml', 'commons-numbers-fraction/src/site/xdoc/index.xml', 'commons-numbers-gamma/src/site/site.xml', 'commons-numbers-gamma/src/site/xdoc/index.xml', 'commons-numbers-primes/src/site/site.xml', 'commons-numbers-primes/src/site/xdoc/index.xml', 'commons-numbers-quaternion/src/site/site.xml', 'commons-numbers-quaternion/src/site/xdoc/index.xml', 'commons-numbers-rootfinder/src/site/site.xml', 'commons-numbers-rootfinder/src/site/xdoc/index.xml', 'dist-archive/pom.xml', 'dist-archive/src/assembly/src.xml', 'pom.xml', 'src/changes/changes.xml', 'src/site/resources/release-notes/RELEASE-NOTES-1.0-beta1.txt', 'src/site/xdoc/download_numbers.xml', 'src/site/xdoc/index.xml', 'src/site/xdoc/release-history.xml']",merging changes from 1.0-beta1-release branch into master after 1.0-beta1 release,
2ba8f9e122b63789ba17b36cb231a5e084d6d0cb,aherbert,aherbert,2,"['commons-numbers-gamma/src/main/java/org/apache/commons/numbers/gamma/RegularizedGamma.java', 'commons-numbers-gamma/src/test/java/org/apache/commons/numbers/gamma/RegularizedGammaTest.java']","Fixed RegularizedGamma.P to confine to the interval [0, 1]",
e0e86f5858ef05c51da7e8ad745b421c13c9e5bf,aherbert,aherbert,1,['commons-numbers-gamma/src/test/java/org/apache/commons/numbers/gamma/RegularizedGammaTest.java'],"Fixed coverage in RegularizedGammaTest.

Added a disabled test that currently fails as the function evaluates the
result outside the interval [0, 1].",
90c4a1268886194082ba93ade2bbf3f04dfe00e1,aherbert,aherbert,1,['commons-numbers-examples/examples-jmh/src/main/java/org/apache/commons/numbers/examples/jmh/complex/SinCosPerformance.java'],SinCosPerformance: Change random number test to uniform range benchmark.,
3be43edc85a28576a1b427e88e17b14fde2fd503,aherbert,aherbert,2,"['commons-numbers-examples/examples-jmh/src/main/java/org/apache/commons/numbers/examples/jmh/complex/ComplexPerformance.java', 'commons-numbers-examples/examples-jmh/src/main/java/org/apache/commons/numbers/examples/jmh/complex/SinCosPerformance.java']","Switch Complex benchmarks to use of a Blackhole.

This removes the allocation of an array and array memory access overhead
for the benchmark. Timings scale better (more linearly) when the size of
the data is changed.

Clean-up javadoc warnings.",
0494360c0eb9f7df75db2752cd4d094e4b880853,aherbert,aherbert,14,"['commons-numbers-angle/LICENSE', 'commons-numbers-examples/examples-jmh/pom.xml', 'commons-numbers-examples/examples-jmh/src/main/java/org/apache/commons/numbers/examples/jmh/arrays/DoublePrecision.java', 'commons-numbers-examples/examples-jmh/src/main/java/org/apache/commons/numbers/examples/jmh/arrays/DoubleSplitPerformance.java', 'commons-numbers-examples/examples-jmh/src/main/java/org/apache/commons/numbers/examples/jmh/arrays/LinearCombination.java', 'commons-numbers-examples/examples-jmh/src/main/java/org/apache/commons/numbers/examples/jmh/arrays/LinearCombinationPerformance.java', 'commons-numbers-examples/examples-jmh/src/main/java/org/apache/commons/numbers/examples/jmh/arrays/LinearCombinationUtils.java', 'commons-numbers-examples/examples-jmh/src/main/java/org/apache/commons/numbers/examples/jmh/arrays/LinearCombinations.java', 'commons-numbers-examples/examples-jmh/src/main/java/org/apache/commons/numbers/examples/jmh/arrays/StickySumPerformance.java', 'commons-numbers-examples/examples-jmh/src/main/java/org/apache/commons/numbers/examples/jmh/arrays/package-info.java', 'commons-numbers-examples/examples-jmh/src/test/java/org/apache/commons/numbers/examples/jmh/arrays/DoublePrecisionTest.java', 'commons-numbers-examples/examples-jmh/src/test/java/org/apache/commons/numbers/examples/jmh/arrays/LinearCombinationAccuracyTest.java', 'commons-numbers-examples/examples-jmh/src/test/java/org/apache/commons/numbers/examples/jmh/arrays/LinearCombinationsTest.java', 'src/main/resources/checkstyle/checkstyle-suppressions.xml']","[NUMBERS-142] Added LinearCombination implementations to the JMH module.

Adds implementations based on the method of Dekker, Ogita et al, and
Shewchuk.

All implementations pass the tests copied from
arrays.LinearCombinationTest.

Tests were added using ill-conditioned dot products to demonstrate the
condition number where each implementation will fail.

The method for computing a double length product of two numbers has been
written to ensure no overflow of intermediates.

All implementations are added to a JMH performance test.",NUMBERS-142
a2ce6c77d5fa90385b34b9b95bf46a7e7c98efc9,aherbert,aherbert,2,"['commons-numbers-fraction/src/main/java/org/apache/commons/numbers/fraction/ContinuedFraction.java', 'commons-numbers-fraction/src/test/java/org/apache/commons/numbers/fraction/ContinuedFractionTest.java']","Updated ContinuedFraction and the test.

Re-factor the close-to-zero logic into a method.

Increase test coverage to 100% with the exception of an approach to zero
test.

Document the representation of A and B coefficients.
This is currently the inverse of the original paper and the wolfram
reference.",
c0a449face3959bb0cf09c43402ba88a69d5b2ab,aherbert,aherbert,1,['commons-numbers-arrays/src/test/java/org/apache/commons/numbers/arrays/SafeNormTest.java'],"Fix coverage in SafeNormTest

Drop the redundant 0d delta for assertEquals.",
a23596ae37ccba3657df18f01d02ca4ac5ef5dd3,aherbert,aherbert,1,['commons-numbers-fraction/src/main/java/org/apache/commons/numbers/fraction/ContinuedFraction.java'],"Formatting in ContinuedFraction.

Use https for javadoc link.

Wrap the exception message and exception format argument to the same
line.",
0824c497aa0e52f06111ec576d3046f9ca950621,aherbert,aherbert,1,['commons-numbers-fraction/src/test/java/org/apache/commons/numbers/fraction/ContinuedFractionTest.java'],Increase coverage in ContinuedFractionTest,
307024db19127e7b101a5071fe3e263724a3243f,aherbert,aherbert,2,"['commons-numbers-fraction/src/test/java/org/apache/commons/numbers/fraction/BigFractionTest.java', 'commons-numbers-fraction/src/test/java/org/apache/commons/numbers/fraction/CommonTestCases.java']",Increase coverage in BigFractionTest,
489d90a544970584e79ad69fe4f62e185773776d,aherbert,aherbert,2,"['commons-numbers-fraction/src/test/java/org/apache/commons/numbers/fraction/CommonTestCases.java', 'commons-numbers-fraction/src/test/java/org/apache/commons/numbers/fraction/FractionTest.java']",Increase coverage in FractionTest,
4e6e29a5c36fc40925973f2bfafbae3f5dbfa421,aherbert,aherbert,0,[],"Fraction: Check numerator before denominator in toString()

If constructed with a numerator of 0 the denominator is always reduced
to 1 as the greatest common divisor.

An alternative would be to drop the numerator == 0 branch as it is
unreachable since denominator should always be 1.",
f91f812e40e5928fc8cb29c1c4db27e6033465f7,aherbert,aherbert,1,['commons-numbers-gamma/src/test/java/org/apache/commons/numbers/gamma/RegularizedBetaTest.java'],Increase coverage in RegularizedBetaTest.,
84f196290a6729f1570cea7ff7b198d94b19f257,aherbert,aherbert,1,['commons-numbers-gamma/src/test/java/org/apache/commons/numbers/gamma/DigammaTest.java'],Increase coverage in DigammaTest,
b7cd42b24c3c1932f5e70c7718893f73f1db45dd,aherbert,aherbert,1,['commons-numbers-gamma/src/test/java/org/apache/commons/numbers/gamma/TrigammaTest.java'],"Increase coverage in TrigammaTest.

This sets the allowed delta using the maximum of the relative error of
1e8 or absolute error of 1e8 as defined in the method javadoc.

It adds additional data for values below the algorithm computation
switch point (1e5).

These would fail at 1e8 absolute error but pass at 1e8 relative error as
the result is very big.",
62c24fed077ec869a5d0b5fd4a32694891ff61a6,aherbert,aherbert,1,['commons-numbers-angle/src/test/java/org/apache/commons/numbers/angle/PlaneAngleTest.java'],Fix coverage in PlaneAngleTest,
791aa8d1f5173bf8ff34414c9559c26b044ec367,aherbert,aherbert,1,['commons-numbers-core/src/test/java/org/apache/commons/numbers/core/PrecisionTest.java'],Ensure the PrecisionTest covers using 0 ulps for absolute equality.,
50fcfa34769917080f44f11c82c822b8fd928cbc,aherbert,aherbert,1,['commons-numbers-core/src/main/java/org/apache/commons/numbers/core/Precision.java'],Use same javadoc for float and double Precision variants.,
dc0071f91f110f7e7974f568ff54bf77f13e72ac,aherbert,aherbert,2,"['commons-numbers-combinatorics/src/main/java/org/apache/commons/numbers/combinatorics/Combinations.java', 'commons-numbers-combinatorics/src/test/java/org/apache/commons/numbers/combinatorics/CombinationsTest.java']",Fixed test coverage in CombinationsTest,
e20c9fd5ec8674abee243e6524df810efbe8b136,aherbert,aherbert,1,['commons-numbers-combinatorics/src/test/java/org/apache/commons/numbers/combinatorics/FactorialDoubleTest.java'],Fixed test coverage in FactorialDoubleTest,
36679a7ad08ffb53287f5c6ccdf6fa5c5d9821ab,aherbert,aherbert,1,['commons-numbers-combinatorics/src/test/java/org/apache/commons/numbers/combinatorics/BinomialCoefficientTest.java'],Fixed test coverage in BinomialCoefficientTest,
66a3a2d3180bc9ecd0e16ae03aa4a43d1e08279f,aherbert,aherbert,1,['commons-numbers-combinatorics/src/test/java/org/apache/commons/numbers/combinatorics/LogFactorialTest.java'],Fixed test coverage in LogFactorialTest,
98b64f1eeda26cac21e3923b1350b9ba0e2d6671,aherbert,aherbert,1,['commons-numbers-field/src/test/java/org/apache/commons/numbers/field/FP64Test.java'],"Fixed test coverage for field.

Added test for FP64 equals.",
08edae944e4abe7ec4b95a72d3791a9f39fb53c8,aherbert,aherbert,1,['commons-numbers-core/src/main/java/org/apache/commons/numbers/core/Precision.java'],"Remove a branch from equals tests with NaN.

A bitwise OR of the booleans is true if either boolean is true. Since
they are both already computed then the || operator short circuit (if
first is true) cannot avoid having to compute the second boolean.

This change converts 3 conditional evaluations to 2 conditional
evaluations.",
894e72614487cea0cb152044a9fad9bf60f09e97,aherbert,aherbert,1,['commons-numbers-core/src/test/java/org/apache/commons/numbers/core/PrecisionTest.java'],"Increase coverage in PrecisionTest to 100%.

Some code is unreachable in the equals test using NaN since since two
values cannot be equal and have one nan but not the other value a nan.",
104254a7888663f625b271aff21fb4b4f9c155ec,aherbert,aherbert,1,['commons-numbers-arrays/src/test/java/org/apache/commons/numbers/arrays/LinearCombinationTest.java'],Remove deprecated RNG from test.,
c461f2509c08bf896beb8bbfc0b9c3bc7393c397,aherbert,aherbert,1,['pom.xml'],"Default the jacoco coverage checks to those in parent.

commons-parent is stricter than the removed configuration.

Here we set the method ratio to 1.00. It should be possible to call all
methods via the test suite.

jacoco version 0.8.2 -> 0.8.5
classRatio 0.96 -> 1.00
instructionRatio 0.8 -> 0.90
methodRatio 0.8 -> 0.95 => 1.00
branchRatio 0.8 -> 0.85
complexityRatio 0.8 -> 0.85
lineRatio 0.85 -> 0.90

haltOnFailure is still false to prevent build failure.",
f12139e8f6820679ab0b30d4f43e9d8e7ffa9603,aherbert,aherbert,1,['commons-numbers-complex/src/main/java/org/apache/commons/numbers/complex/Complex.java'],Complex hypot: use 54 as the exponent difference to ignore overlap,
e6aa0883c4a3ccdb799ba6a49777b6ac958badb2,aherbert,aherbert,5,"['LICENSE', 'NOTICE', 'commons-numbers-complex/LICENSE', 'commons-numbers-complex/NOTICE', 'commons-numbers-complex/src/main/java/org/apache/commons/numbers/complex/Complex.java']","Update attribution of 3rd party works in Complex

In accordance with https://www.apache.org/legal/src-headers.html#3party

- ""Do not remove or modify any copyright notices or licenses""
- ""Minor modifications/additions to 3rd party source files should
typically be licensed under the same terms as the rest of the 3rd party
source for convenience""

Here the 3rd party works are software conversions of single methods with
minor modifications. The methods are marked as distributed under the
original terms and the original copyright and license notice are
included inline.

Added copyright attribution to NOTICE.

Updated LICENSE to indicate the parts of 'commons-numbers' which are
subject to a different license.",
a4eedec17bdf3a87c434b43ed355f56056ae49c0,aherbert,aherbert,46,"['LICENSE', 'NOTICE', 'README.md', 'commons-numbers-angle/LICENSE', 'commons-numbers-angle/NOTICE', 'commons-numbers-angle/README.md', 'commons-numbers-arrays/LICENSE', 'commons-numbers-arrays/NOTICE', 'commons-numbers-arrays/README.md', 'commons-numbers-combinatorics/LICENSE', 'commons-numbers-combinatorics/NOTICE', 'commons-numbers-combinatorics/README.md', 'commons-numbers-complex-streams/LICENSE', 'commons-numbers-complex-streams/NOTICE', 'commons-numbers-complex-streams/README.md', 'commons-numbers-complex/LICENSE', 'commons-numbers-complex/NOTICE', 'commons-numbers-complex/README.md', 'commons-numbers-complex/src/main/java/org/apache/commons/numbers/complex/Complex.java', 'commons-numbers-core/LICENSE', 'commons-numbers-core/NOTICE', 'commons-numbers-core/README.md', 'commons-numbers-examples/LICENSE', 'commons-numbers-examples/NOTICE', 'commons-numbers-examples/README.md', 'commons-numbers-examples/examples-jmh/LICENSE', 'commons-numbers-examples/examples-jmh/NOTICE', 'commons-numbers-examples/examples-jmh/README.md', 'commons-numbers-field/LICENSE', 'commons-numbers-field/NOTICE', 'commons-numbers-field/README.md', 'commons-numbers-fraction/LICENSE', 'commons-numbers-fraction/NOTICE', 'commons-numbers-fraction/README.md', 'commons-numbers-gamma/LICENSE', 'commons-numbers-gamma/NOTICE', 'commons-numbers-gamma/README.md', 'commons-numbers-primes/README.md', 'commons-numbers-quaternion/LICENSE', 'commons-numbers-quaternion/NOTICE', 'commons-numbers-quaternion/README.md', 'commons-numbers-rootfinder/LICENSE', 'commons-numbers-rootfinder/NOTICE', 'commons-numbers-rootfinder/README.md', 'dist-archive/src/assembly/bin.xml', 'pom.xml']","Renamed NOTICE.txt and LICENCE.txt to drop .txt

The use of a plain filename is preferred convention.",
2b01d3ca6f9484a17e9c8c368ca3060f70d3e6d9,aherbert,aherbert,13,"['README.md', 'commons-numbers-angle/README.md', 'commons-numbers-arrays/README.md', 'commons-numbers-combinatorics/README.md', 'commons-numbers-complex-streams/README.md', 'commons-numbers-complex/README.md', 'commons-numbers-core/README.md', 'commons-numbers-field/README.md', 'commons-numbers-fraction/README.md', 'commons-numbers-gamma/README.md', 'commons-numbers-primes/README.md', 'commons-numbers-quaternion/README.md', 'commons-numbers-rootfinder/README.md']","Updated README.md

Regenerated with commons build plugin.

Modified for multi-module project:

Top level README to contain javadoc links for all modules and maven
examples for a few modules.

Module README requires an updated javadoc url and change of title to
remove the module name suffix from 'Apache Commons Numbers' where
appropriate.",
c06ba43574a3e70639987a0b8a698aba0aeace0d,aherbert,aherbert,2,"['commons-numbers-complex/src/main/java/org/apache/commons/numbers/complex/Complex.java', 'src/main/resources/pmd/pmd-ruleset.xml']","Fix some Complex PMD issues.

Suppress loss of stack trace in Complex parse exception.",
b6be43eb887a76f95fe2527f6936f6fc382e6d0c,aherbert,aherbert,1,['commons-numbers-complex/src/test/java/org/apache/commons/numbers/complex/ComplexTest.java'],"Update ComplexTest to match the method order of Complex.

Added note about the incomplete testing of ISO C99 math functions. These
are covered in other test classes.",
957a24652d4ea9db3329ee7bfc601b75924e549e,aherbert,aherbert,1,['commons-numbers-complex/src/main/java/org/apache/commons/numbers/complex/Complex.java'],"Update parsing message for Complex to include the input string.

This is consistent with NumberFormatException which includes the input
string in the message.",
50da4295f5fd4f357797d28b855366c504aaedd5,aherbert,aherbert,1,['commons-numbers-complex/src/main/java/org/apache/commons/numbers/complex/Complex.java'],"Rearrange Complex source code.

Constructors

Factory Constructor methods (including parse())

Properties
real(), imag()

Properties which are methods:
abs(), arg()

Other member functions:
double-valued: norm()
boolean-valued: isNaN, isInfinite, isFinite
complex-valued: conj(), proj()

Math:

Arithmetic
add/subtract,multiply,divide

Exponential and Log functions

Power functions (pow, sqrt)

Trigonomic functions

Hyperbolic functions

Misc functions:
nthRoot

Standard object stuff:
toString(), equals(), hashCode()

Common private helper functions. Specialised helper functions may be
located with the only method that uses them if they are not commonly
used.",
32bfd4fe4304251a4bcfe705b5c3b12e9dfd768e,aherbert,aherbert,1,['commons-numbers-complex/src/main/java/org/apache/commons/numbers/complex/Complex.java'],"Complex: replace internal functional interface.

The interface is identical to java.util.function.DoubleUnaryOperator.",
30ca5015fad6a3d9804c313e6df307e9fb61b32c,aherbert,aherbert,1,['commons-numbers-complex/src/main/java/org/apache/commons/numbers/complex/Complex.java'],"Complex javadoc updates.

Update text documenting technical corrigendum DR 471.

Added missing 'Special cases:' text.

Ensure pow is consistent with add/subtract/etc describing Complex or
real arguments.",
5f0686220dfd6e94b922e076ef6809de3233cdc4,aherbert,aherbert,3,"['LICENSE.txt', 'commons-numbers-complex/LICENSE.txt', 'commons-numbers-complex/src/main/java/org/apache/commons/numbers/complex/Complex.java']",Added Boost license for derived works in Complex.,
728d6566425902784d9d9842d9929984e16cdce1,aherbert,aherbert,1,['commons-numbers-complex/src/main/java/org/apache/commons/numbers/complex/Complex.java'],"Update Complex javadoc.

Fix typos.

Fix bad MathJax.

Ensure consistency access methods.",
2f3aaaefbc7c3e20c63567139f7e9eb9e4e94219,darkma773r,darkma773r,1,['src/main/resources/checkstyle/checkstyle-suppressions.xml'],fixing checkstyle suppression patterns to work with Windows paths,
ce58624fb191aa25e40c93468459d86294044ba9,garydgregory,garydgregory,4,"['commons-numbers-complex/src/main/java/org/apache/commons/numbers/complex/Complex.java', 'commons-numbers-complex/src/test/java/org/apache/commons/numbers/complex/ComplexTest.java', 'commons-numbers-rootfinder/src/test/java/org/apache/commons/numbers/rootfinder/BrentSolverTest.java', 'src/main/resources/checkstyle/checkstyle.xml']",Standardize on American English spelling of 'behavior'.,
643e1693b7ba06aa3cc524fb8b83a983a62a6227,aherbert,aherbert,8,"['LICENSE.txt', 'commons-numbers-complex/LICENSE.txt', 'commons-numbers-complex/pom.xml', 'commons-numbers-complex/src/main/java/org/apache/commons/numbers/complex/Complex.java', 'commons-numbers-complex/src/test/java/org/apache/commons/numbers/complex/CStandardTest.java', 'commons-numbers-complex/src/test/java/org/apache/commons/numbers/complex/ComplexTest.java', 'commons-numbers-examples/examples-jmh/src/main/java/org/apache/commons/numbers/examples/jmh/complex/ComplexPerformance.java', 'src/main/resources/pmd/pmd-ruleset.xml']","NUMBERS-143: Added specialised hypot function to Complex.

The new implementation is faster and has lower maximum error than using
Math.hypot.

This is a port of the ""Freely Distributable Math Library"" hypot
function. The original source notice is included in the project LICENSE.

The functionality of Complex.abs should match Math.hypot for infinity
edge case handling and scaling of the intermediate sum. Tests have
been added to the CStandardTest to check the returned value on random
numbers.

Update Complex performance test for Complex.abs().
Add tests for Math.sqrt(Complex.norm()) and use of Math.hypot().
Increase size to 10000 to prevent branch prediction memorising the test
data.

Exclude PMD rule ExcessiveMethodLength for Complex.",NUMBERS-143
817cb6d4c8ec6afdfed94e9d5e8bbd50e0b9f9db,aherbert,aherbert,1,['commons-numbers-complex/src/main/java/org/apache/commons/numbers/complex/Complex.java'],"Fix comments in multiply method.

Removed a spurious comment left-over from when multiply accepted another
Complex named 'factor'.",
2b13b8f7b98571d07eba452c157d0d98263990cc,aherbert,aherbert,2,"['commons-numbers-complex/src/main/java/org/apache/commons/numbers/complex/Complex.java', 'commons-numbers-complex/src/test/java/org/apache/commons/numbers/complex/ComplexEdgeCaseTest.java']","Improve documentation of the high precision sum in Complex.

Added note to state that the current method is consistently more
accurate than a faster alternative suggested by Shewchuk. To achieve the
same consistency requires a distillation sum of the output expansion of
fast-two-sum.",
3fd48ab491ce2999476a894565d65a2f0183b3f3,aherbert,aherbert,1,['pom.xml'],"Update pmd

3.12.0 -> 3.13.0
dependency 6.19.0 -> 6.21.0",
5efcb78bb68ed4aad83bc621a30ede248f116e24,aherbert,aherbert,1,['src/main/resources/findbugs/findbugs-exclude-filter.xml'],"Remove findbugs configuration.

spotbugs is used in preference to findbugs.",
0bc3540a5e345095506941fa9babbff57a70fe3e,aherbert,aherbert,2,"['pom.xml', 'src/main/resources/checkstyle/checkstyle.xml']","Update checkstyle

maven plugin 3.0.0 -> 3.1.0
Dependency 8.20 -> 8.29",
81c2fd3d763afdae3cadc711b220e6ded9f7fd36,aherbert,aherbert,1,['pom.xml'],Remove unused aggregate configuration from javadoc plugin.,
c4817e4f41c1790aea541c048453d8539f26e308,aherbert,aherbert,1,['commons-numbers-complex/src/test/java/org/apache/commons/numbers/complex/ComplexTest.java'],Reverse actual and expected for the assertion.,
52877dd2694418d1f59fdfea6a2d7b2e3b433ff5,aherbert,aherbert,2,"['.gitignore', 'pom.xml']","Exclude examples module from rat check using wildcards in .gitignore.

Remove the rat exclusions from the pom that are duplicates of those in
.gitignore.",
f2fc03187d3bcad2d609f499572e674940f1cfa6,aherbert,aherbert,2,"['commons-numbers-examples/examples-jmh/pom.xml', 'pom.xml']",Disable PMD analysis for benchmarking code.,
b73017f04eb65fbac02b0c650006e3231d9c9840,aherbert,aherbert,1,['pom.xml'],Update to parent 50,
10ec6946c4181af301706dd8718171f7a8b0edf8,aherbert,aherbert,1,['pom.xml'],"Removed version for plugins which are managed by commons parent.

maven-compiler-plugin : 3.8.1 -> 3.8.1
maven-surefire-plugin : 2.22.0 -> 2.22.2
maven-failsafe-plugin : 2.22.0 -> 2.22.2
apache-rat-plugin : ${commons.rat.version}
maven-antrun-plugin : 1.7 -> 1.8",
9a8e1c53fe815eff7680726d31be50d5cd298f76,aherbert,aherbert,1,['src/main/resources/spotbugs/spotbugs-exclude-filter.xml'],"Fixed spotbugs filter for JMH module.

Ignore the generated JMH files.

Ignore exposing internal array for test data classes in Performance
classes.

Fixed XML schema namespace.",
b7925803fda67fe27fbb2175c0773e6efba435ba,,,13,"['commons-numbers-arrays/src/main/java/org/apache/commons/numbers/arrays/CosAngle.java', 'commons-numbers-arrays/src/test/java/org/apache/commons/numbers/arrays/CosAngleTest.java', 'commons-numbers-combinatorics/src/main/java/org/apache/commons/numbers/combinatorics/BinomialCoefficient.java', 'commons-numbers-combinatorics/src/main/java/org/apache/commons/numbers/combinatorics/BinomialCoefficientDouble.java', 'commons-numbers-combinatorics/src/main/java/org/apache/commons/numbers/combinatorics/LogBinomialCoefficient.java', 'commons-numbers-complex-streams/src/main/java/org/apache/commons/numbers/complex/streams/ComplexUtils.java', 'commons-numbers-fraction/src/main/java/org/apache/commons/numbers/fraction/BigFraction.java', 'commons-numbers-fraction/src/main/java/org/apache/commons/numbers/fraction/Fraction.java', 'commons-numbers-gamma/src/main/java/org/apache/commons/numbers/gamma/ErfDifference.java', 'commons-numbers-gamma/src/main/java/org/apache/commons/numbers/gamma/GammaException.java', 'commons-numbers-gamma/src/main/java/org/apache/commons/numbers/gamma/RegularizedGamma.java', 'commons-numbers-quaternion/src/main/java/org/apache/commons/numbers/quaternion/Slerp.java', 'commons-numbers-rootfinder/src/main/java/org/apache/commons/numbers/rootfinder/BrentSolver.java']","Merge branch 'NUMBERS-40__Matt'

Closes #74.",
b09535852dd45c066a506963eb51b581098b55e2,,,1,['commons-numbers-rootfinder/src/main/java/org/apache/commons/numbers/rootfinder/BrentSolver.java'],Javadoc.,
0521c5e0c02411c40c5b8dcc5ac77b9a2bc7298f,darkma773r,darkma773r,13,"['commons-numbers-arrays/src/main/java/org/apache/commons/numbers/arrays/CosAngle.java', 'commons-numbers-arrays/src/test/java/org/apache/commons/numbers/arrays/CosAngleTest.java', 'commons-numbers-combinatorics/src/main/java/org/apache/commons/numbers/combinatorics/BinomialCoefficient.java', 'commons-numbers-combinatorics/src/main/java/org/apache/commons/numbers/combinatorics/BinomialCoefficientDouble.java', 'commons-numbers-combinatorics/src/main/java/org/apache/commons/numbers/combinatorics/LogBinomialCoefficient.java', 'commons-numbers-complex-streams/src/main/java/org/apache/commons/numbers/complex/streams/ComplexUtils.java', 'commons-numbers-fraction/src/main/java/org/apache/commons/numbers/fraction/BigFraction.java', 'commons-numbers-fraction/src/main/java/org/apache/commons/numbers/fraction/Fraction.java', 'commons-numbers-gamma/src/main/java/org/apache/commons/numbers/gamma/ErfDifference.java', 'commons-numbers-gamma/src/main/java/org/apache/commons/numbers/gamma/GammaException.java', 'commons-numbers-gamma/src/main/java/org/apache/commons/numbers/gamma/RegularizedGamma.java', 'commons-numbers-quaternion/src/main/java/org/apache/commons/numbers/quaternion/Slerp.java', 'commons-numbers-rootfinder/src/main/java/org/apache/commons/numbers/rootfinder/BrentSolver.java']",NUMBERS-40: fixing inconsistent exception behavior in RegularizedGamma.P.value(); fixing and adding exception javadocs,NUMBERS-40
97b24998940dd6607d4e07cbf4f63eca9b16ecde,aherbert,aherbert,1,['commons-numbers-complex/src/main/java/org/apache/commons/numbers/complex/Complex.java'],Use final.,
25f71b03fc7f730eb7239376dbd4921aea336c17,aherbert,aherbert,1,['commons-numbers-complex/src/main/java/org/apache/commons/numbers/complex/Complex.java'],Move the check for a finite value known to be positive to a method.,
8af1a5dd8d1efaf2a29ed403e98cbf216212220b,aherbert,aherbert,3,"['commons-numbers-complex/src/main/java/org/apache/commons/numbers/complex/Complex.java', 'commons-numbers-complex/src/test/java/org/apache/commons/numbers/complex/CReferenceTest.java', 'commons-numbers-complex/src/test/java/org/apache/commons/numbers/complex/ComplexTest.java']","Change tanh to use the identities for all computations.

This removes the requirement to assert that the switch from using
sin(2x) and cos(2x) and suitable identities is smooth. The test to
assert this failed on Java 11 but passed on Java 8. This may be due to a
change in the trigonomic functions between JDKs. The test assertion has
been removed as it is no longer valid for the new computation. The
functions to compute the identities for overflow are now redundant and
have been removed. The function is now overflow safe for finite
imaginary with no computation switch as y approaches infinity.

This lowers the ulp from the c reference test from 3 to 2 for tanh. Thus
the computation accuracy is similar and the c reference data may be
using the same computation.",
c79bdffb5c79fe19a662a42b8c69ad3869ed75f8,aherbert,aherbert,2,"['commons-numbers-complex/src/main/java/org/apache/commons/numbers/complex/Complex.java', 'commons-numbers-complex/src/test/java/org/apache/commons/numbers/complex/ComplexEdgeCaseTest.java']","sqrt() to use multiply by sqrt(2) / 2 for imaginary only numbers.

The change alters the divide by sqrt(2) to a multiply by the closest
double representation of 1 / sqrt(2). This is sqrt(2) / 2.

This adds tests to ensure the polar representation is not used when
either a real or imaginary only number:

real = sqrt(abs()) * Math.cos(arg() / 2)
imag = sqrt(abs()) * Math.sin(arg() / 2)

Due to floating-point errors in the trignomic functions and the
inexactness of Math.PI the result is not the correct result. It
explicitly checks conditions that would fail if using the polar
computation with the trigonomic functions cos and sin.",
b2622effae96912f154fa7f629bb064a647886e8,aherbert,aherbert,3,"['commons-numbers-complex/src/main/java/org/apache/commons/numbers/complex/Complex.java', 'commons-numbers-complex/src/test/java/org/apache/commons/numbers/complex/ComplexEdgeCaseTest.java', 'commons-numbers-complex/src/test/java/org/apache/commons/numbers/complex/ComplexTest.java']","Complex: log() and sqrt() should use the same magnitude as abs().

Added tests to check the functions return what is documented as the
formula in the javadoc.

Fixed sqrt and log to use the hypot function to compute the absolute of
the complex number.",
79fbf9d06bf96bffa841ad3abe7e87acb7e70a71,aherbert,aherbert,3,"['commons-numbers-examples/examples-jmh/pom.xml', 'commons-numbers-examples/examples-jmh/src/main/java/org/apache/commons/numbers/examples/jmh/complex/ComplexPerformance.java', 'pom.xml']","Added more random distribution types to the Complex performance test.

This adds commons-rng-sampling to the parent pom for use in data
generation.",
980d80a40e67d4513f809a74e433fa9d58abfc64,aherbert,aherbert,1,['commons-numbers-complex/src/main/java/org/apache/commons/numbers/complex/Complex.java'],"Remove methods for (a * c + b * d) and (b * c - a * d) in Complex divide

The scaling now reduces a and b before computing the division if there
is a chance of overflow. Thus the specialised methods to detect overflow
are redundant and cannot be hit by any input arguments, e.g.
divide(Double.MAX_VALUE, Double.MAX_VALUE, 1, 1).

This returns the listing for edge case handling to match ISO C99 G.5.1
(8).",
3bb0f6952fb5990b8d71c691190c991741838428,aherbert,aherbert,1,['commons-numbers-complex/src/main/java/org/apache/commons/numbers/complex/Complex.java'],"Clean-up getScale() method.

Rename max to bits for clarity it is the bit representation.

Drop nan/inf case.",Clean-
649fe6418f55a7535eae2667d4d077269176ac1a,aherbert,aherbert,1,['commons-numbers-complex/src/main/java/org/apache/commons/numbers/complex/Complex.java'],"Clean-up the constants in Complex.

Use underscore notation for hex representations.",Clean-
69cbbeff0684e9874c07c4cfe6ccc14921fc7a25,aherbert,aherbert,1,['commons-numbers-complex/src/main/java/org/apache/commons/numbers/complex/Complex.java'],Changed multiplier to use the value 2^27 + 1 as a double.,
4bf3f12cba545efc79b1f8c894a13af0c7bd03ba,,,1,['pom.xml'],"Exclude ""data"" files from RAT report.",
434fe48e101e70c47f561a2060659d29dc6f50ad,aherbert,aherbert,1,['commons-numbers-complex/src/main/java/org/apache/commons/numbers/complex/Complex.java'],"Explicit grow expansion of -1 into x^2.

This generates the intermediate expansion for (x^2 - 1) which is further
away from 1 and closer to the next term y^2.

The formula for sumLow has been rewritten to match Shewchuk's paper.

fastSumLow was added for the grow expansion of -1 which assumes -1 is
greater in magnitude than the other terms.",
c4dc88cab80dd8c4448f43b2930373df9f92c118,aherbert,aherbert,2,"['commons-numbers-complex/src/main/java/org/apache/commons/numbers/complex/Complex.java', 'commons-numbers-complex/src/test/java/org/apache/commons/numbers/complex/ComplexEdgeCaseTest.java']","Ensure divide correctly scales numbers to avoid over/underflow.

Added tested to ensure the smallest and largest possible value divided
by itself is (1, 0). Previously it would compute zero for small and
overflow to infinite for large.",
62ee60b9911c7ebaa94db494dc93deb47db82819,aherbert,aherbert,1,['commons-numbers-complex/src/main/java/org/apache/commons/numbers/complex/Complex.java'],"Modify hypotenuse scaling formula for x^2+y^2 in log().

The modification change uses the method from FastMath.hypot().",
a79dcaaa0a0b2e37d4b17b5ffbb568fc47cb2711,aherbert,aherbert,1,['commons-numbers-complex/src/main/java/org/apache/commons/numbers/complex/Complex.java'],"Change x2y2m1 summation algorithm.

This switches from Ogita's dot3 sum to Shewchuk's expansion sum. The
number of two sum operations is the same, the order is different.

The new version passes the previous strict tests but has a formal proof
in Shewchuk's paper. The method from Ogita may be functionally
equivalent but has no proof. Thus it may differ in some untested
combinations of x and y.",
f7e5a7c067407802ca9a79322edb3e7ab64b3160,aherbert,aherbert,1,['commons-numbers-complex/src/test/java/org/apache/commons/numbers/complex/ComplexEdgeCaseTest.java'],Reinstate ulps tolerance in test of Complex::log.,
f48844b44ce064bcea89e05d10b49912e6a9a5be,aherbert,aherbert,3,"['commons-numbers-complex/src/main/java/org/apache/commons/numbers/complex/Complex.java', 'commons-numbers-complex/src/test/java/org/apache/commons/numbers/complex/ComplexEdgeCaseTest.java', 'commons-numbers-complex/src/test/java/org/apache/commons/numbers/complex/ComplexTest.java']","Approximation of sinh/cosh using exp can be overflow/underflow safe.

Updated the sinh(), cosh() and tanh() methods for large absolute real to
avoid overflow of exp(x) to infinite.

sinh()/cosh() now use a common function to compute the result as only
the sign of the result components differs. The computation of e^x can be
made in stages to allow computation of results even when e^x / 2
overflows.

tanh() now computes e^x in stages.

Added edge cases where exp(x) overflows but the result can be computed.",
cd30b161d063b5f5007e3f5b91668af8aaca3dd0,aherbert,aherbert,1,['commons-numbers-examples/examples-jmh/src/main/java/org/apache/commons/numbers/examples/jmh/complex/SinCosPerformance.java'],"Add a set of numbers that are within the quadrant [0, pi/2).",
8f5a839eda5afdf435c2082bb57be37cca070370,aherbert,aherbert,1,['commons-numbers-complex/src/main/java/org/apache/commons/numbers/complex/Complex.java'],Fixed documentation of constant ln(max_value),
4531ba1fecb206f7bd6ecdd7c58ad5ec14a1db95,aherbert,aherbert,2,"['commons-numbers-examples/examples-jmh/pom.xml', 'commons-numbers-examples/examples-jmh/src/main/java/org/apache/commons/numbers/examples/jmh/complex/SinCosPerformance.java']","Add benchmark for sin/cos computation.

Computing sin/cos together would improve many of the functions in
Complex. This benchmark investigates the possibility of using the
Commons FastMath implementation instead of java.util.Math.",
c1a3dca29e9c0fef70fe1e62a3271f2716e9abe3,aherbert,aherbert,1,['src/main/resources/checkstyle/checkstyle-suppressions.xml'],Allow long file length for ComplexTest.,
642741cc893505a93351bbdfe7232dd8aa895ce6,aherbert,aherbert,2,"['commons-numbers-complex/src/main/java/org/apache/commons/numbers/complex/Complex.java', 'commons-numbers-complex/src/test/java/org/apache/commons/numbers/complex/ComplexTest.java']","Better overflow handling of sinh/cosh.

At large x sinh and cosh can be approximated by exp(|x|) / 2.",
95050a18547dd7d556892b24de15e8032aabae3c,aherbert,aherbert,1,['commons-numbers-complex/src/main/java/org/apache/commons/numbers/complex/Complex.java'],"Removed impossible edge case in log().

Since y<x it is not possible for x < SAFE_MIN and y > SAFE_MIN. So just
test if y < SAFE_MIN since this will be an underflow.",
8bd4f082b133526ae865a3665bb634a4ea351696,aherbert,aherbert,11,"['commons-numbers-angle/NOTICE.txt', 'commons-numbers-arrays/NOTICE.txt', 'commons-numbers-combinatorics/NOTICE.txt', 'commons-numbers-complex-streams/NOTICE.txt', 'commons-numbers-complex/NOTICE.txt', 'commons-numbers-core/NOTICE.txt', 'commons-numbers-field/NOTICE.txt', 'commons-numbers-fraction/NOTICE.txt', 'commons-numbers-gamma/NOTICE.txt', 'commons-numbers-quaternion/NOTICE.txt', 'commons-numbers-rootfinder/NOTICE.txt']",Update NOTICE.txt to 2020.,
4b8103f80d77d6af7a085478ebf4b5fed0376bbd,aherbert,aherbert,13,"['.travis.yml', 'commons-numbers-examples/LICENSE.txt', 'commons-numbers-examples/NOTICE.txt', 'commons-numbers-examples/README.md', 'commons-numbers-examples/examples-jmh/LICENSE.txt', 'commons-numbers-examples/examples-jmh/NOTICE.txt', 'commons-numbers-examples/examples-jmh/README.md', 'commons-numbers-examples/examples-jmh/pom.xml', 'commons-numbers-examples/examples-jmh/src/main/java/org/apache/commons/numbers/examples/jmh/complex/ComplexPerformance.java', 'commons-numbers-examples/examples-jmh/src/main/java/org/apache/commons/numbers/examples/jmh/complex/package-info.java', 'commons-numbers-examples/examples-jmh/src/main/java/org/apache/commons/numbers/examples/jmh/package-info.java', 'commons-numbers-examples/pom.xml', 'pom.xml']","Added examples module with a JMH examples module.

The JMH module contains a benchmark for all operations in Complex.

The examples are currently not included in the standard build. Travis
has been configured to compile them and apply apache-rat:check and
checkstyle:check to maintain the code consistency.",
367710a643da9b90de29668f88b0b578e5a7891d,aherbert,aherbert,1,['pom.xml'],Added Alex Herbert as a developer.,
6afb064f5e05e671200266a47e348d7fe45bb87f,aherbert,aherbert,2,"['commons-numbers-complex/src/main/java/org/apache/commons/numbers/complex/Complex.java', 'commons-numbers-complex/src/test/java/org/apache/commons/numbers/complex/ComplexEdgeCaseTest.java']","Update x2y2m1 to use Ogita's dot-product summation in 3-fold precision.

This has been tested with 1,000,000,000 random cis numbers with no ULP
errors. The previous summation using Dekker's 2-fold precision sum had
observed ULPs > 65000.

Hard examples of cis-numbers have been added to the Complex edge-case
test.",
598b578b84ead47e0ede20de6565a8a6208b8363,aherbert,aherbert,1,['commons-numbers-complex/src/main/java/org/apache/commons/numbers/complex/Complex.java'],Optimise x2y2m1 using assumptions on the range of x and y.,
34071accc5ca013aa7a6279192326f167bf2ab76,aherbert,aherbert,1,['commons-numbers-complex/src/test/java/org/apache/commons/numbers/complex/CStandardTest.java'],Document enforcement of the conjugate equality when not mandated by C99.,
198147a0097aea2ac0c559deb9c5dae15cf32fd5,aherbert,aherbert,1,['commons-numbers-complex/src/main/java/org/apache/commons/numbers/complex/Complex.java'],Update sinh/cosh/tanh for real/imaginary only numbers.,
4d9cbf9ed97a869b71437e2016ca48df0bf989e9,aherbert,aherbert,1,['commons-numbers-complex/src/main/java/org/apache/commons/numbers/complex/Complex.java'],"Updated javadoc for functions.

Corrected range for acos.

Added branch cuts.

Document ""invalid"" and ""divide-by-zero"" floating-point operations.",
788fdd4a983392fe68377ff1f3f0ca783cd67049,aherbert,aherbert,1,['commons-numbers-complex/src/main/java/org/apache/commons/numbers/complex/Complex.java'],Simplify high precision summation using Dekker's add2 sum.,
2d8221a8fd931a7beb0b2b57fd616f0a7defee77,aherbert,aherbert,1,['commons-numbers-combinatorics/src/test/java/org/apache/commons/numbers/combinatorics/FactorialTest.java'],Fixed indentation in test class.,
377c972836ce6e4d43610953f3f080ba6ad85de8,aherbert,aherbert,1,['src/main/resources/checkstyle/checkstyle-suppressions.xml'],Update checkstyle suppressions for Complex method length.,
ac7e98d29be8180a862fe6e2878775474b57b17f,aherbert,aherbert,1,['commons-numbers-complex/src/main/java/org/apache/commons/numbers/complex/Complex.java'],Use high precision x^2 + y^2 - 1 in atanh.,
f61e1136f57db2429182c64e3bf2ef9fef3712f6,aherbert,aherbert,3,"['commons-numbers-complex/src/main/java/org/apache/commons/numbers/complex/Complex.java', 'commons-numbers-complex/src/test/java/org/apache/commons/numbers/complex/ComplexEdgeCaseTest.java', 'pom.xml']","Use high precision computation in Complex::log.

This avoids the enormous relative error documented by Hull et al when 4
* y^2 >= |x^2 – 1|.",
c3a0fc022080bf338ebe185916b871db69b83a3f,,,1,['NOTICE.txt'],"Update ""NOTICE.txt"".",
fcb54c90630f748177510e213e0b9f2019017e30,aherbert,aherbert,1,['commons-numbers-complex-streams/pom.xml'],Added test scope dependency on commons-numbers-core.,
6361a80f3910921f8854c15ea5e854f510e208e7,aherbert,aherbert,1,['commons-numbers-complex/src/main/java/org/apache/commons/numbers/complex/Complex.java'],Javadoc cleanup of <pre> tags for better rendered layout.,
f12e04e7e4a5354f2c5a58ee1e493e7e67401694,aherbert,aherbert,2,"['commons-numbers-complex/pom.xml', 'commons-numbers-complex/src/main/java/org/apache/commons/numbers/complex/Complex.java']","Remove dependency on numbers-core for the Precision EPSILON.

The dependency has been reduced to test scope.",
f1b8cc31888aa284e39249708787b37164c5d436,aherbert,aherbert,2,"['commons-numbers-complex/src/main/java/org/apache/commons/numbers/complex/Complex.java', 'commons-numbers-complex/src/test/java/org/apache/commons/numbers/complex/CStandardTest.java']","Update C99 standard for acosh and tanh

See:
http://www.open-std.org/jtc1/sc22/wg14/www/docs/n1892.htm#dr_471",
b215129a1101b6cf14b36ca33ab0274dff4305c1,aherbert,aherbert,1,['commons-numbers-complex/src/main/java/org/apache/commons/numbers/complex/Complex.java'],"Added C99 special cases to javadoc.

Improved layout of MathJax to separate paragraphs.",
fd3e2f1e8c0d2955556164d9223aa463e99af9da,aherbert,aherbert,1,['commons-numbers-complex/src/main/java/org/apache/commons/numbers/complex/Complex.java'],Pre-compute bit representation of -0.0.,Pre-
23a490614ee7e252fc2fa334857247deae6cb19f,aherbert,aherbert,3,"['commons-numbers-complex/src/main/java/org/apache/commons/numbers/complex/Complex.java', 'commons-numbers-complex/src/test/java/org/apache/commons/numbers/complex/CStandardTest.java', 'commons-numbers-complex/src/test/java/org/apache/commons/numbers/complex/ComplexTest.java']","Remove the static equals(Complex,Complex) methods using Precision.

These methods do not represent all ways to compute equality between a
pair of complex numbers. These methods are present in commons-math3
Complex. Helper methods can be added later if the use case is well
defined.",
6bd37c999531d107275de3d53e63a37ba6aafc6f,aherbert,aherbert,2,"['commons-numbers-complex/src/main/java/org/apache/commons/numbers/complex/Complex.java', 'commons-numbers-complex/src/test/java/org/apache/commons/numbers/complex/ComplexTest.java']","Remove reciprocal().

This is not a ISO C99 method and is easily implemented using
Complex.ONE.divide(z).",
84fc5c6c528ca1669fd22661d35df0e8a6804961,aherbert,aherbert,1,['commons-numbers-complex/src/main/java/org/apache/commons/numbers/complex/Complex.java'],fixup,
158f6b800f4f51d59bb60893d74209851af48d46,aherbert,aherbert,1,['commons-numbers-complex/src/main/java/org/apache/commons/numbers/complex/Complex.java'],"[NUMBERS-141] Complex javadoc to use MathJax.

This updates all equations to use MathJax and standardises on using x +
iy for the representation of complex z.

A general clean-up of the javadoc has been made for consistency across
the class.",NUMBERS-141
610e70ca7174067b047bbdb8a3a00675a4c70d89,aherbert,aherbert,2,"['commons-numbers-complex/src/main/java/org/apache/commons/numbers/complex/Complex.java', 'commons-numbers-complex/src/test/java/org/apache/commons/numbers/complex/ComplexTest.java']","Reciprocal to use divide(Complex).

This has edge case recovery for infinity and NaN missing from the
previous direct implementation.

It also computes values when the previous method did not due to use of
scaling. This allows computation for (Double.MAX_VALUE,
Double.MAX_VALUE).reciprocal().",
261b7e701f7eadaa73969f3fa5bd7bff37d68b92,aherbert,aherbert,1,['commons-numbers-complex/src/main/java/org/apache/commons/numbers/complex/Complex.java'],Consistent error handling between asin and acos.,
ba07e65b74e4f6a6a99437bf365057ad45769243,aherbert,aherbert,1,['commons-numbers-complex/src/main/java/org/apache/commons/numbers/complex/Complex.java'],"Do not duplicate Precision.EPSILON.

The class already imports Precision for use in equality testing so use
the public constant direct.",
d2f0388442bf46996499136bdd11c6dd9b33bd2c,aherbert,aherbert,1,['commons-numbers-complex/src/main/java/org/apache/commons/numbers/complex/Complex.java'],"Update log() to use the overflow/underflow safe method of Hull et al.

This maintains the existing overflow safe functionality but adds
underflow protection.",
970512c6d4a6084f17084e07ecc4f3423ae21b74,aherbert,aherbert,2,"['commons-numbers-complex/src/main/java/org/apache/commons/numbers/complex/Complex.java', 'commons-numbers-complex/src/test/java/org/apache/commons/numbers/complex/ComplexEdgeCaseTest.java']",Use final.,
c283420af7165e09729002978ce195ec48fbab25,aherbert,aherbert,2,"['commons-numbers-complex/src/main/java/org/apache/commons/numbers/complex/Complex.java', 'commons-numbers-complex/src/test/java/org/apache/commons/numbers/complex/ComplexEdgeCaseTest.java']","Update log() to use method from Hull et al.

This requires changes to the edge case test as small values are computed
more accurately.",
c23541ddcf53153b4d526933ece92743937e6538,aherbert,aherbert,1,['commons-numbers-complex/src/test/java/org/apache/commons/numbers/complex/ComplexTest.java'],"Ensure the test for log10 hits the edge case where x>0.5 and x<root(2).

This uses a different computation with log1p.",
c193ff715e0f095841b944c328a54c1486bf668b,aherbert,aherbert,1,['commons-numbers-complex/src/test/java/org/apache/commons/numbers/complex/CStandardTest.java'],Change unspecified sign exception message.,
92c5db5f2b3482c6e1d1dba230d268315b36f3fc,aherbert,aherbert,1,['commons-numbers-complex/src/main/java/org/apache/commons/numbers/complex/Complex.java'],"Update exp() control flow for edge cases.

Added C99 edge cases in the comments.",
9b18dc0457bde8303cc3e96da1fda8ff7e956b5d,aherbert,aherbert,1,['commons-numbers-complex/src/test/java/org/apache/commons/numbers/complex/ComplexEdgeCaseTest.java'],"Change pow() overflow edge case test.

Some libraries can compute (MAX, 1).pow(2, 0) as non-infinite in the
imaginary part by using a decomposition of:

e^a * sin(im) = sin(im) * e^n * e^(a-n)

with n set to not overflow to inf.",
e03cbc06ec1623f5813d8d135a622b3f05c6f8e5,aherbert,aherbert,1,['commons-numbers-complex/src/main/java/org/apache/commons/numbers/complex/Complex.java'],EPSILON should be private,
34542f4232cd7941e810cab0f43be1dbe70d9777,grimreaper,grimreaper,1,['commons-numbers-core/src/test/java/org/apache/commons/numbers/core/TestUtils.java'],testutils: correct order of expected and actual results,
ceb62698d95a6b6a562a896c8ed8e82e72f1e411,aherbert,aherbert,1,['commons-numbers-complex/src/test/java/org/apache/commons/numbers/complex/ComplexTest.java'],Test abs() and arg() return the input to ofPolar constructor.,
5fad5e285c6498d3747ebd75f98557b6a9324fcc,aherbert,aherbert,2,"['commons-numbers-complex/src/main/java/org/apache/commons/numbers/complex/Complex.java', 'commons-numbers-complex/src/test/java/org/apache/commons/numbers/complex/ComplexTest.java']","Added norm method that is part of the C++ standard for complex.

This returns the same value as squared abs().",
940705ae6efd2e7165993a4170357ce1425a6442,aherbert,aherbert,2,"['commons-numbers-complex/src/main/java/org/apache/commons/numbers/complex/Complex.java', 'commons-numbers-complex/src/test/java/org/apache/commons/numbers/complex/ComplexTest.java']","Changed ofPolar to not throw IllegalArgumentException.

Method will return NaN for input arguments that are not allowed.

rho must be non-negative and non-nan.

theta must be finite.

This is in compliance with C++ behaviour.",
32d8fc1e5c1f21a336ea3b20712777ec3a0de1be,aherbert,aherbert,1,['commons-numbers-complex/src/test/java/org/apache/commons/numbers/complex/ComplexEdgeCaseTest.java'],Overflow test for pow(),
1eae0a46843ba8e0ee2ec785d3f8003af54f3608,aherbert,aherbert,1,['commons-numbers-complex/src/main/java/org/apache/commons/numbers/complex/Complex.java'],"Simplify sinh, cosh and tanh",
e2e7b8b9fba25f181d1254f41db189a4543b480b,aherbert,aherbert,1,['commons-numbers-complex/src/main/java/org/apache/commons/numbers/complex/Complex.java'],Simplify exp() edge cases.,
3614d51ec5a53324f268ba5b96c975a6e5ac04ce,aherbert,aherbert,1,['commons-numbers-complex/src/main/java/org/apache/commons/numbers/complex/Complex.java'],Simplify sqrt() edge cases.,
ba7fe3aa925744d4fba5eacf3758b6f8625ee715,aherbert,aherbert,1,['commons-numbers-complex/src/test/java/org/apache/commons/numbers/complex/ComplexEdgeCaseTest.java'],Edge cases for cosh and sinh.,
1f7af2c2a634b70121de3e4d079cfd508cffe5af,aherbert,aherbert,1,['commons-numbers-complex/src/main/java/org/apache/commons/numbers/complex/Complex.java'],Added links to Wolfram elementary functions where applicable.,
3366f35d8120ddc5c52f991c1d120a7c7f95c72f,aherbert,aherbert,2,"['commons-numbers-complex/src/main/java/org/apache/commons/numbers/complex/Complex.java', 'commons-numbers-complex/src/test/java/org/apache/commons/numbers/complex/ComplexEdgeCaseTest.java']","Fix overflow in tanh. Added edge case tests.

Overflow is cause by computation of Math.sin(2a) or Math.cos(2a) when a
is finite and 2a is infinite. This has been fixed to use trigonomic
identities for sin(2a) and cos(2a) in this case.",
8375852acc8b58f12b8f0acf51046753569e0e52,aherbert,aherbert,1,['commons-numbers-complex/src/main/java/org/apache/commons/numbers/complex/Complex.java'],Fix javadoc comment on SAFE_MIN/MAX,
e1ad2a0e9c6f05b38d26d6484c3a3509b6a5935a,aherbert,aherbert,1,['commons-numbers-complex/src/test/java/org/apache/commons/numbers/complex/ComplexEdgeCaseTest.java'],Added edge case tests for asin.,
f5ba494b10ea41cf4dad439ce882457e52d84ceb,aherbert,aherbert,1,['commons-numbers-complex/src/test/java/org/apache/commons/numbers/complex/ComplexTest.java'],Add atanh assumption on x close to 1.,
dfcc1188e1457e6f385996e4ebe8dafb94950e09,aherbert,aherbert,1,['commons-numbers-complex/src/test/java/org/apache/commons/numbers/complex/ComplexEdgeCaseTest.java'],Added edge case tests for acos.,
45d1a4618ed0022ae669dd04561f00e6a7823312,aherbert,aherbert,1,['commons-numbers-complex/src/test/java/org/apache/commons/numbers/complex/ComplexEdgeCaseTest.java'],Added edge case tests for atanh.,
bf2b32cbc2a5dc3785ebdb52b23c90f1008f15d7,aherbert,aherbert,1,['commons-numbers-complex/src/main/java/org/apache/commons/numbers/complex/Complex.java'],Moved the check for the safe region to a method.,
e3351253466aab6ffc940e2dcd64cf7841ab5d0c,aherbert,aherbert,1,['commons-numbers-complex/src/main/java/org/apache/commons/numbers/complex/Complex.java'],"Remove unused/redundant methods.

Overflow safe average method is only used when one argument is less than
the other so compute
inline.

The getArgument method is not used.",
244f6e7a0d93ed92d0748b062d29a59333217b5e,aherbert,aherbert,2,"['commons-numbers-complex/src/main/java/org/apache/commons/numbers/complex/Complex.java', 'commons-numbers-complex/src/test/java/org/apache/commons/numbers/complex/ComplexTest.java']",Remove use of log1p when value is very small.,
9aa23ab5738c67892e204f1c19598936460c1aa7,aherbert,aherbert,1,['commons-numbers-complex/src/main/java/org/apache/commons/numbers/complex/Complex.java'],"Switch atanh if statements to fix PMD warning.

if (x != y) { 1; } else { 2; }

to:

if (x == y) { 2; } else { 1; }",
913b01293b9aba4058dee953422c03c3c9689c30,aherbert,aherbert,1,['commons-numbers-complex/src/test/java/org/apache/commons/numbers/complex/ComplexTest.java'],Trailing whitespace.,
12c0b57ccda1269ae020636051adc8ca9614adfc,aherbert,aherbert,1,['commons-numbers-complex/src/test/java/org/apache/commons/numbers/complex/ComplexTest.java'],Drop exact log10 test. The method of computation cannot be assumed.,
5d9156bfe79858e804d91b3a2da3e9353b2f2506,aherbert,aherbert,2,"['commons-numbers-complex/src/main/java/org/apache/commons/numbers/complex/Complex.java', 'commons-numbers-complex/src/test/java/org/apache/commons/numbers/complex/ComplexTest.java']","Added atanh assumptions test to check the safe upper and lower limits.

Updated the atanh code to use the boost assumptions.",
1d20e9fa8ad6cd6b416fba8e4091cd2f992d4445,aherbert,aherbert,1,['commons-numbers-complex/src/test/java/org/apache/commons/numbers/complex/ComplexTest.java'],Removed unused constants,
4bbbef917075a6670ae5289f7ea646a86d21f6f3,aherbert,aherbert,1,['commons-numbers-complex/src/test/java/org/apache/commons/numbers/complex/CReferenceTest.java'],Update the max ULP for log from 3 to 1 for the C reference test.,
67dc19de65579b1a3335919e6459b8946d1fae75,aherbert,aherbert,1,['commons-numbers-complex/src/main/java/org/apache/commons/numbers/complex/Complex.java'],Compute log() within a safe region without using the sqrt.,
bdaecba1eb69fc44349362640230c93ce1a07366,aherbert,aherbert,1,['commons-numbers-complex/src/main/java/org/apache/commons/numbers/complex/Complex.java'],Use final,
26b9ae7953d0c50faf3946c6aaf5bfe27227edf2,aherbert,aherbert,1,['commons-numbers-complex/src/test/java/org/apache/commons/numbers/complex/CReferenceTest.java'],Update the max ULP for atanh from 17 to 1 for the C reference test.,
5346128780ffd61c914cb76eab3301080fa46c3f,aherbert,aherbert,1,['commons-numbers-complex/src/main/java/org/apache/commons/numbers/complex/Complex.java'],Updated atanh using an overflow/underflow safe method.,
a2cc4ec1cc601dec340a6d2c514f2c79d57c6670,aherbert,aherbert,1,['commons-numbers-complex/src/main/java/org/apache/commons/numbers/complex/Complex.java'],Removed unused static asinh method and constants.,
93d68901bbe9bad7041011b8a455a1779a2e918d,aherbert,aherbert,1,['commons-numbers-complex/src/test/java/org/apache/commons/numbers/complex/CReferenceTest.java'],Update the max ULP for acos/acosh from 36 to 2 for the C reference test.,
2c77d008b7232290a127993b41be6bd44becf894,aherbert,aherbert,1,['commons-numbers-complex/src/test/java/org/apache/commons/numbers/complex/CStandardTest.java'],Fix unspecified sign in C99 standard for acos.,
96fe378a62aa7c5151c35721d05676c27b5164d6,aherbert,aherbert,1,['commons-numbers-complex/src/main/java/org/apache/commons/numbers/complex/Complex.java'],Updated cosh/acosh using an overflow/underflow safe method.,
4dd3fc82b1017834c2947682e20f2a13e92082c4,aherbert,aherbert,2,"['commons-numbers-complex/src/main/java/org/apache/commons/numbers/complex/Complex.java', 'commons-numbers-complex/src/test/java/org/apache/commons/numbers/complex/CReferenceTest.java']",Updated sinh/asinh using an overflow/underflow safe method.,
9c0cb71537a8cc18af300902cd0155913370df07,aherbert,aherbert,1,['commons-numbers-complex/src/test/java/org/apache/commons/numbers/complex/CStandardTest.java'],Use multiplyImaginary instead of multiply by Complex.I,
42a2f65b5b6543f548f951adc7c4b13e5f731a94,aherbert,aherbert,1,['commons-numbers-arrays/src/main/java/org/apache/commons/numbers/arrays/MultidimensionalCounter.java'],Check all indices and the running cumulative are strictly positive.,
bb48af087ed0221793ce3e051df3d56b53ec7cd6,aherbert,aherbert,1,['commons-numbers-arrays/src/test/java/org/apache/commons/numbers/arrays/MultidimensionalCounterTest.java'],"Add tests that fails to be detected as a negative index.

(-1,-1) or (Integer.MAX_VALUE, 2, Integer.MAX_VALUE) are not negative as
a total product.",
f6a35dabc9a8aab78ddf3dfcb6344e9aa59a75ba,aherbert,aherbert,1,['commons-numbers-arrays/src/main/java/org/apache/commons/numbers/arrays/MultidimensionalCounter.java'],Use integer division in MultiDimensionalCounter.toMulti,
cf5ec339a80ccc6ede2b81d623a94d8dd7f9c25d,aherbert,aherbert,1,['commons-numbers-arrays/src/test/java/org/apache/commons/numbers/arrays/MultidimensionalCounterTest.java'],Changed tests to use assertThrows.,
18cb0dbf90799be8157eb97f7fcc1b9271894c54,aherbert,aherbert,2,"['commons-numbers-arrays/src/main/java/org/apache/commons/numbers/arrays/MultidimensionalCounter.java', 'commons-numbers-arrays/src/test/java/org/apache/commons/numbers/arrays/MultidimensionalCounterTest.java']",Fixed checkstyle issues.,
15c7706701e41db5a604f21b4582ece67f56135f,aherbert,aherbert,1,['commons-numbers-complex/src/test/java/org/apache/commons/numbers/complex/ComplexTest.java'],Use final.,
a4b33d4cc717cef2cc4a5be81596da9f5cdbcc03,aherbert,aherbert,2,"['commons-numbers-complex/src/main/java/org/apache/commons/numbers/complex/Complex.java', 'commons-numbers-complex/src/test/java/org/apache/commons/numbers/complex/ComplexTest.java']","Improve documentation of sign differences in +/-0.0 for arithmetic.

Adds a comprehensive test to demonstrate cases where sign differences
occur. These cases are non-trivial to document and the javadoc for the
class has been left without explicit edge case documentation.

In most cases the result has the same value except the sign of zero.

The exception is divideImaginary(0). The equivalent case
divide(Complex.ZERO) has edge case correction to match divide by a
real-only zero. A separate test for divideImaginary demonstrates the
result is made the same (except sign differences on infinities) by
multiplying by I.",
9a2c29077c15e8dff0b5d285d0b3191c62e25d40,aherbert,aherbert,1,['commons-numbers-complex/src/main/java/org/apache/commons/numbers/complex/Complex.java'],"Use charAt(int) to test for the start and end characters.

Change parse exception so that the error is within single quote 'x'
rather than parentheses (x). This produces clearer error messages when x
is either ( or ). Error messages currently are:

""Expected format '(real,imaginary)'""
""Expected start '('""
""Expected end '('""
""Expected separator between two numbers ','""
""Incorrect number of parts, expected only 2 using separator ','""
""Could not parse real part 's'""
""Could not parse imaginary part 's'""",
0d66b94d4096793a9ce457eb841a20ef74410899,,,2,"['commons-numbers-arrays/src/main/java/org/apache/commons/numbers/arrays/MultidimensionalCounter.java', 'commons-numbers-arrays/src/test/java/org/apache/commons/numbers/arrays/MultidimensionalCounterTest.java']","NUMBERS-140: Multidimensional counter.

Ported from ""Commons Math"".",NUMBERS-140
145391b9d4b0db1c89e7bbbe2ec9538cc695eb8b,,,0,[],Merge branch 'master' of https://gitbox.apache.org/repos/asf/commons-numbers,
c642c8f8b89ad2258accfb299b1133fc874e524b,aherbert,web-flow,2,"['commons-numbers-combinatorics/src/main/java/org/apache/commons/numbers/combinatorics/Combinations.java', 'commons-numbers-fraction/src/main/java/org/apache/commons/numbers/fraction/Fraction.java']","Merge pull request #73 from grimreaper/eax/long-compare-mode

[commons-number] replace some compares with their function",
0c5cd6d56c1ceed9932b056b41cec9ce4efdd938,aherbert,web-flow,1,['commons-numbers-core/src/main/java/org/apache/commons/numbers/core/Precision.java'],"Merge pull request #72 from grimreaper/eax/update-documentation-for-numbers

[commons-numbers-core] use non-deprecated ref in docs",
ec8f3f1f65e29ccd9fc6ddafae42e1aef82075f0,,,1,['commons-numbers-fraction/src/main/java/org/apache/commons/numbers/fraction/Fraction.java'],Simplify.,
3b3743f24ebf033f153a3961f3fa2fefcf05d6b8,grimreaper,,2,"['commons-numbers-combinatorics/src/main/java/org/apache/commons/numbers/combinatorics/Combinations.java', 'commons-numbers-fraction/src/main/java/org/apache/commons/numbers/fraction/Fraction.java']","[commons-number] replace some compares with their function

Replace explicit logic of comparing longs with the function that does
so.",
2b5712523a7e08663acc80721938b043eab78a60,grimreaper,grimreaper,2,"['commons-numbers-combinatorics/src/main/java/org/apache/commons/numbers/combinatorics/Combinations.java', 'commons-numbers-fraction/src/main/java/org/apache/commons/numbers/fraction/Fraction.java']","[commons-number] replace some compares with their function

Replace explicit logic of comparing longs with the function that does
so.",
d2c8760d6fccedc859ba6aef059b1e529751ddbf,grimreaper,grimreaper,1,['commons-numbers-core/src/main/java/org/apache/commons/numbers/core/Precision.java'],"[commons-numbers-core] use non-deprecated ref in docs

The code was already changed but refer to the non-deprecated version in
documentaton as well.",
007cc20e9f84e41a65359b922d01b0247f975157,aherbert,aherbert,2,"['commons-numbers-complex/src/main/java/org/apache/commons/numbers/complex/Complex.java', 'commons-numbers-complex/src/test/java/org/apache/commons/numbers/complex/ComplexTest.java']","[NUMBERS-139] Implement multiply and divide for imaginary only.

multiplyImaginary(double)
divideImaginary(double)

Document that the method may return different signs than the
corresponding Complex method for the result parts if the complex has
zeros of the argument of the function is zero.

The documentation of the differences requires full unit test of all
cases. The exact cases that differ may be individually documented.",NUMBERS-139
ebf1e3c55cdbbc08011e98ca0b5e32a8a378919b,aherbert,aherbert,2,"['commons-numbers-complex-streams/src/main/java/org/apache/commons/numbers/complex/streams/ComplexUtils.java', 'commons-numbers-complex-streams/src/test/java/org/apache/commons/numbers/complex/streams/ComplexUtilsTest.java']",Remove reference to ofReal in ComplexUtils.,
1c7611e6195b09f62decb4a4d650c4c23d2ad64c,aherbert,aherbert,1,['commons-numbers-complex/src/test/java/org/apache/commons/numbers/complex/ComplexTest.java'],Removed redundant assertion.,
a66db2daa78cec871f62cc83868f24875710642f,aherbert,aherbert,2,"['commons-numbers-complex/src/main/java/org/apache/commons/numbers/complex/Complex.java', 'commons-numbers-complex/src/test/java/org/apache/commons/numbers/complex/ComplexTest.java']","Optimise toString() and parse().

toString() may be longer than the default StringBuilder buffer size
(16). Use a larger value to avoid reallocation. This is set large enough
for 2 maximum precision doubles.

Use char as the format characters and not String. Requires changes to
the parsing. This avoids the use of String.split() which uses a regex
pattern.

Javadoc has been expanded taking style guides from the JDK Javadoc for
Double#toString() and Double.valueOf(String).",
05da007bfe455297f014a6d82e407b80d2474fd7,aherbert,aherbert,2,"['commons-numbers-complex/src/main/java/org/apache/commons/numbers/complex/Complex.java', 'commons-numbers-complex/src/test/java/org/apache/commons/numbers/complex/ComplexTest.java']",Remove square(),
3e630014ff26c49e51ba061f312c8d95bf678cd5,aherbert,aherbert,2,"['commons-numbers-complex/src/main/java/org/apache/commons/numbers/complex/Complex.java', 'commons-numbers-complex/src/test/java/org/apache/commons/numbers/complex/ComplexTest.java']",Remove ofReal(double) and ofImaginary(double),
c0ddd1f6094352823007ecf5e33b1ea97545b3ef,aherbert,aherbert,1,['commons-numbers-complex/src/main/java/org/apache/commons/numbers/complex/Complex.java'],"Refactor uses of getExponent to internal getMaxExponent(a, b) method.",
9011b7d425699af4a371e9aa118d77cd4718d673,aherbert,aherbert,1,['commons-numbers-complex/src/main/java/org/apache/commons/numbers/complex/Complex.java'],Tweak Javadoc for NAN constant.,
20a5c8f9e9d7f294ef343c1a7603d366082c4913,aherbert,aherbert,1,['commons-numbers-complex/src/main/java/org/apache/commons/numbers/complex/Complex.java'],"Improved javadoc for public constants.

This includes the formal (a + i b) notation to make it clear what the
number represents.",
276028dcea4c334f2088f0a22fbe444f83dfe206,aherbert,aherbert,2,"['commons-numbers-complex/src/main/java/org/apache/commons/numbers/complex/Complex.java', 'commons-numbers-complex/src/test/java/org/apache/commons/numbers/complex/ComplexTest.java']",Added Complex.ofImaginary(double),
69636da01e3689a8e20989c2c0cceb4c50676385,aherbert,aherbert,1,['commons-numbers-complex/src/test/java/org/apache/commons/numbers/complex/ComplexEdgeCaseTest.java'],Correct assertions in ComplexEdgeCaseTest.,
ac893bf6b075c083fe306d7fb637de6e95edd0f2,aherbert,aherbert,1,['commons-numbers-complex/src/main/java/org/apache/commons/numbers/complex/Complex.java'],Optimise scaling during overflow of log(),
b699628219fcd0a0712064c04cedfe3541853500,aherbert,aherbert,1,['commons-numbers-complex/src/main/java/org/apache/commons/numbers/complex/Complex.java'],"Implement scaling using Math.scalb not divide by largest absolute value.

Applies to the log() and sqrt() functions.

scalb represents an exact multiplication by 2^exponent. Thus no
information is lost from the mantissa if the result remains within the
range of a double exponent.",
fbf308b12fee9757eece61a57cf356ced1b7ca1a,aherbert,aherbert,1,['commons-numbers-complex/src/main/java/org/apache/commons/numbers/complex/Complex.java'],"Use getExponent(double) in place of Math.log(double) / Math.log(2)

The calls to Math.log() are only required to the nearest integer value
for use in scaling.",
d96bc97cfdca5b36d3f8b2561f60c7cec72761fe,aherbert,aherbert,2,"['commons-numbers-complex/src/main/java/org/apache/commons/numbers/complex/Complex.java', 'commons-numbers-complex/src/test/java/org/apache/commons/numbers/complex/ComplexTest.java']","[NUMBERS-139] Implement add and subtract for imaginary only.

addImaginary(double)
subtractImaginary(double)

subtractFrom(double)
subtractFromImaginary(double)",NUMBERS-139
32318c672ce084bd2a6f4a791b0f10f210e22f2a,aherbert,aherbert,1,['commons-numbers-complex/src/test/java/org/apache/commons/numbers/complex/CStandardTest.java'],Removed unused field and clarified multiply() comment regarding NaN.,
44298409892b82031cef4540274f913e52d583f0,aherbert,aherbert,2,"['commons-numbers-complex/src/test/java/org/apache/commons/numbers/complex/CReferenceTest.java', 'commons-numbers-complex/src/test/java/org/apache/commons/numbers/complex/ComplexEdgeCaseTest.java']","Added a ComplexEdgeCaseTest.

Overflow and underflow are tested for log, exp and sqrt.

The test is incomplete. Placeholders are left for the other C99
functions to test boundary conditions.",
ff1b7d1d197fac7ce58864a8c89d032132ee53f0,aherbert,aherbert,1,['commons-numbers-complex/src/main/java/org/apache/commons/numbers/complex/Complex.java'],Ensure log() and log10() avoid overflow.,
9b3c706a83cf7d46589af344e14ccdaa0d4cd8b8,aherbert,aherbert,2,"['commons-numbers-complex/src/main/java/org/apache/commons/numbers/complex/Complex.java', 'commons-numbers-complex/src/test/java/org/apache/commons/numbers/complex/CReferenceTest.java']","Use identities for tanh() with real / imaginary parts of zero.

real only the formula reduces to:
sinh x / (1 + cosh x) = tanh(x/2)

imaginary only the formula reduces to:
sin x / (1 + cos x) = tan(x/2)",
e135bae831ace9d237a12af261abc4ff616bd41a,aherbert,aherbert,1,['commons-numbers-complex/src/test/java/org/apache/commons/numbers/complex/CReferenceTest.java'],"Improve CReferenceTest equality assertions and debug reporting.

Changed a few max ULPs for some of the tests.",
931348b06696818eef2128be83091b3119d00721,aherbert,aherbert,12,"['commons-numbers-complex/src/test/resources/data/acos.txt', 'commons-numbers-complex/src/test/resources/data/acosh.txt', 'commons-numbers-complex/src/test/resources/data/asinh.txt', 'commons-numbers-complex/src/test/resources/data/atanh.txt', 'commons-numbers-complex/src/test/resources/data/cosh.txt', 'commons-numbers-complex/src/test/resources/data/divide.txt', 'commons-numbers-complex/src/test/resources/data/exp.txt', 'commons-numbers-complex/src/test/resources/data/log.txt', 'commons-numbers-complex/src/test/resources/data/pow.txt', 'commons-numbers-complex/src/test/resources/data/sinh.txt', 'commons-numbers-complex/src/test/resources/data/sqrt.txt', 'commons-numbers-complex/src/test/resources/data/tanh.txt']","Updated reference data using GNU gcc.

gcc --version
gcc (Ubuntu 5.4.0-6ubuntu1~16.04.12) 5.4.0 20160609

Previous data was created using gcc on MacOS which had at least one
non-conforming ISO C99 result. This was not computed by the previous
reference program.

atanh(1, 0) = (Inf, 0)",
4255a0db6ab26eb78a0384ec8b902d9ece74ff0e,aherbert,aherbert,4,"['commons-numbers-complex/src/test/resources/data/acos.txt', 'commons-numbers-complex/src/test/resources/data/acosh.txt', 'commons-numbers-complex/src/test/resources/data/asinh.txt', 'commons-numbers-complex/src/test/resources/data/atanh.txt']",Reinstate ignored test data. These cases have been fixed.,
778f94b5a4c93d378d549ed0dfd0a8147264f042,aherbert,aherbert,2,"['commons-numbers-complex/src/test/java/org/apache/commons/numbers/complex/CReferenceTest.java', 'commons-numbers-complex/src/test/java/org/apache/commons/numbers/complex/TestUtils.java']",Improved CReferenceTest to allow processing of flagged reference data.,
2ed318c04e6f9afdf6269c6230587ea52378acfc,aherbert,aherbert,1,['commons-numbers-complex/src/main/java/org/apache/commons/numbers/complex/Complex.java'],"Added special cases of trigonomic functions:

acos(a + 0 i)  when |a| <= 1
asinh(0 + b i) = i asin(b)  when |b| <= 1
atanh(0 + b i) = i atan(b)",
7cbee90fb91da2182107aee2d3b4ff6b980a9ddf,aherbert,aherbert,16,"['commons-numbers-complex/src/test/java/org/apache/commons/numbers/complex/CReferenceTest.java', 'commons-numbers-complex/src/test/java/org/apache/commons/numbers/complex/TestUtils.java', 'commons-numbers-complex/src/test/resources/data/acos.txt', 'commons-numbers-complex/src/test/resources/data/acosh.txt', 'commons-numbers-complex/src/test/resources/data/asinh.txt', 'commons-numbers-complex/src/test/resources/data/atanh.txt', 'commons-numbers-complex/src/test/resources/data/cosh.txt', 'commons-numbers-complex/src/test/resources/data/divide.txt', 'commons-numbers-complex/src/test/resources/data/exp.txt', 'commons-numbers-complex/src/test/resources/data/log.txt', 'commons-numbers-complex/src/test/resources/data/multiply.txt', 'commons-numbers-complex/src/test/resources/data/pow.txt', 'commons-numbers-complex/src/test/resources/data/sinh.txt', 'commons-numbers-complex/src/test/resources/data/sqrt.txt', 'commons-numbers-complex/src/test/resources/data/tanh.txt', 'pom.xml']","Move the data from the CReferenceTest to test resources.

There are currently some cases of incorrect computations that are
commented out using a ';' character in the test data:

acos.txt:;0.5 0.0 1.0471975511965979 -0.0
acos.txt:;-0.5 -0.0 2.0943951023931953 0.0
acosh.txt:;0.5 0.0 0.0 1.0471975511965979
acosh.txt:;-0.5 -0.0 0.0 -2.0943951023931953
asinh.txt:;0.0 0.5 0.0 0.52359877559829893
atanh.txt:;1 0.0 Infinity 0.78539816339744828",
6a7ce94ac7b4a3e1c612c2e7e05b3f750c9441db,aherbert,aherbert,1,['src/main/resources/pmd/pmd-ruleset.xml'],PMD: Ignore field real and method real() match in Complex.,
1d63ae2bd28ccce68832f6348ad37961504908a6,aherbert,aherbert,2,"['commons-numbers-complex/src/main/java/org/apache/commons/numbers/complex/Complex.java', 'commons-numbers-complex/src/test/java/org/apache/commons/numbers/complex/CReferenceTest.java']","Ensure sqrt() always functions on finite input.

Any finite complex can be square rooted. If computation of the new
magnitude overflows then the computation can be scaled down, computed
then scaled back. This ensures infinity is never returned for a finite
complex.",
087d40af801116902d19aeb12804552b804f0ffd,aherbert,aherbert,2,"['commons-numbers-complex/src/main/java/org/apache/commons/numbers/complex/Complex.java', 'commons-numbers-complex/src/test/java/org/apache/commons/numbers/complex/CReferenceTest.java']","Clean up sqrt().

Removed the commented out code to compute the sqrt() in polar
coordinates.

Add note about computing for real only complex numbers to the
CReferenceTest.",
0887c257a298d261204d35a311b1a5900812657c,aherbert,aherbert,1,['commons-numbers-complex/src/main/java/org/apache/commons/numbers/complex/Complex.java'],"sqrt(): Drop copySign(0, imaginary) when imaginary is already zero.",
563d896b2a5c435f66af6dc215290637c1498ba3,aherbert,aherbert,3,"['commons-numbers-complex/src/main/java/org/apache/commons/numbers/complex/Complex.java', 'commons-numbers-complex/src/test/java/org/apache/commons/numbers/complex/CStandardTest.java', 'commons-numbers-complex/src/test/java/org/apache/commons/numbers/complex/ComplexTest.java']",Removed conjugate() method.,
69499d3ab2b66185c5f0bbb8a850d2c4fc540d85,aherbert,aherbert,1,['commons-numbers-complex/src/main/java/org/apache/commons/numbers/complex/Complex.java'],sqrt() handling of zero extends to all real numbers (imaginary == 0),
e804844ff7c75f1d335141272fe38cf09579e7f8,aherbert,aherbert,1,['src/main/resources/spotbugs/spotbugs-exclude-filter.xml'],Exclude check for equality with positive infinity in Complex sqrt.,
32dbe346e717ffafa188b0b1d9cf51006b852c17,aherbert,aherbert,1,['commons-numbers-complex/src/main/java/org/apache/commons/numbers/complex/Complex.java'],"Remove overflow protection to compute average.

The sqrt() switches to using polar coordinates to compute the result.",
04bed94ba343864871e756e05350f44d2c1b88b0,aherbert,aherbert,1,['commons-numbers-complex-streams/src/test/java/org/apache/commons/numbers/complex/streams/ComplexUtilsTest.java'],Replace getArgument() with arg() in test class.,
dc0f87b8af952c20e7fc5f96aa87b4b5a1dc9af7,aherbert,aherbert,1,['commons-numbers-complex-streams/src/main/java/org/apache/commons/numbers/complex/streams/ComplexUtils.java'],Replace getArgument() with arg(),
9b1b88700a43a618c7a67590f0dbdba1302f956f,aherbert,aherbert,1,['commons-numbers-complex/src/main/java/org/apache/commons/numbers/complex/Complex.java'],"Added TODO notes on special case for imaginary only numbers.

asinh(iy) = i asin(y)
atanh(iy) = i atan(y)

do not work.",
5db7d736976477fe20e3f31cf81b582e40035515,aherbert,aherbert,1,['commons-numbers-complex/src/main/java/org/apache/commons/numbers/complex/Complex.java'],Remove unused private methods,
f3c6b06cb53428a520ddd493b4709ca0946ab913,aherbert,aherbert,1,['commons-numbers-complex/src/main/java/org/apache/commons/numbers/complex/Complex.java'],Avoid reassigning params,
c897177a3f4399e4feefeddff9fdb902f2c554bc,aherbert,aherbert,1,['commons-numbers-complex/src/main/java/org/apache/commons/numbers/complex/Complex.java'],Use final,
0cfc94de303b6cc56c3dbc6157db8d70bfa8c975,aherbert,aherbert,2,"['commons-numbers-complex/src/main/java/org/apache/commons/numbers/complex/Complex.java', 'commons-numbers-complex/src/test/java/org/apache/commons/numbers/complex/CReferenceTest.java']",Compute extreme values of sqrt() in polar coordinates.,
c4648b9eaa314b453b0d95809626a32cedd8390d,aherbert,aherbert,1,['commons-numbers-complex/src/test/java/org/apache/commons/numbers/complex/CReferenceTest.java'],"Remove the edge cases for overflow.

These should be better constructed based on the formula that is
implemented in terms of overflow/underflow of parts of the computation.",
08465eb01b0bfc0dbf7e0e920a7cc20aba53cab6,aherbert,aherbert,1,['commons-numbers-complex/src/test/java/org/apache/commons/numbers/complex/CReferenceTest.java'],"Removed mirrored cases for odd/even functions.

The data for negative real is the same as that for the positive real for
odd/even functions.",
2753fa05fecfa6fe0c738248ed24737dfb5056f4,aherbert,aherbert,1,['commons-numbers-complex/src/main/java/org/apache/commons/numbers/complex/Complex.java'],Document odd and even functions.,
8edcaecda2262f229e214c26c3c0695eea508aa5,aherbert,aherbert,2,"['commons-numbers-complex/src/main/java/org/apache/commons/numbers/complex/Complex.java', 'commons-numbers-complex/src/test/java/org/apache/commons/numbers/complex/ComplexTest.java']","Remove getArgument and getAbsolute.

Document method names are chosen to match the names defined in ISO C99.",
f621118e148533c5810879f84300e0c8d5c99d8b,aherbert,aherbert,1,['commons-numbers-complex/src/test/java/org/apache/commons/numbers/complex/ComplexTest.java'],Remove unnecessary deltas from assertions.,
65f60835e2afe26bdaba9665d62edb25195bfff6,aherbert,aherbert,2,"['commons-numbers-complex/src/main/java/org/apache/commons/numbers/complex/Complex.java', 'commons-numbers-complex/src/test/java/org/apache/commons/numbers/complex/ComplexTest.java']",Added getAbsolute() to complement getArgument().,
bc387815e7c73f2ebfcb010c70ab97484ea80762,aherbert,aherbert,2,"['commons-numbers-complex/src/main/java/org/apache/commons/numbers/complex/Complex.java', 'commons-numbers-complex/src/test/java/org/apache/commons/numbers/complex/ComplexTest.java']",Correct proj() function to preserve the sign of the imaginary part.,
ae70ab2504dcc79fa4e820446a65ab3acd4338c9,aherbert,aherbert,1,['pom.xml'],Ignore pom.properties,
84e3b21d4c2645a6a2faf42e08fc4878174d815c,aherbert,aherbert,1,['commons-numbers-complex/src/test/java/org/apache/commons/numbers/complex/CReferenceTest.java'],Fix trailing spaces,
69a69afd8e4c5bbe4b3eef60acbe2d9637d5cfa7,aherbert,aherbert,2,"['commons-numbers-complex/src/main/java/org/apache/commons/numbers/complex/Complex.java', 'commons-numbers-complex/src/test/java/org/apache/commons/numbers/complex/CReferenceTest.java']","Update tanh() to perform edge checks on twice the imaginary value.

This matches the reference test result.",
cc24bfcf91370e197d09b33c0d02edb6e633a40d,aherbert,aherbert,1,['commons-numbers-complex/src/main/java/org/apache/commons/numbers/complex/Complex.java'],Fix overflow in sqrt(),
9eedfec839712fc1eb3fcd1dc98628b4fd4ba84c,aherbert,aherbert,1,['commons-numbers-complex/src/test/java/org/apache/commons/numbers/complex/CReferenceTest.java'],"Update CReferenceTest with many more cases.

Some extreme value cases do not match and are commented out.",
73743d3c7f69c0c31ee035ebf5bd57edea0a21fd,aherbert,aherbert,1,['commons-numbers-complex/src/main/java/org/apache/commons/numbers/complex/Complex.java'],"Fix acosh() to preserve the conjugate equality.

The returned value is chosen to ensure the result is positive in the
real component.",
9eb3e77b5178756d19c29dff38cd5689542e2e30,aherbert,aherbert,2,"['commons-numbers-complex/src/main/java/org/apache/commons/numbers/complex/Complex.java', 'commons-numbers-complex/src/test/java/org/apache/commons/numbers/complex/CReferenceTest.java']","Use static acos() function for acosh().

This method currently returns a sign that does not match the
CReferenceTest. The test has been commented out and other reference
implementations should be checked.",
43b7d31cdae8c4c494bd86e645370eb0d3df6c93,aherbert,aherbert,1,['commons-numbers-complex/src/test/java/org/apache/commons/numbers/complex/CReferenceTest.java'],Added real/imaginary only data to the CReferenceTest.,
8dd939b29ea7f525ac4dfcc42305a32bbb7f956e,aherbert,aherbert,1,['commons-numbers-complex/src/test/java/org/apache/commons/numbers/complex/ComplexTest.java'],Trailing whitespace.,
61dfc1880602161916aad45b9e143694c3dc063f,aherbert,aherbert,1,['commons-numbers-complex/src/main/java/org/apache/commons/numbers/complex/Complex.java'],Remove multiply(int).,
4d7d8e01e93bf6f2ef3fc3d91f1db0b2e71400e8,aherbert,aherbert,1,['commons-numbers-complex/src/main/java/org/apache/commons/numbers/complex/Complex.java'],Add special cases for asinh/atanh with imaginary only numbers.,
89c907fb4e25d5851303863ea0b6b05cd4555920,aherbert,aherbert,1,['commons-numbers-complex/src/test/java/org/apache/commons/numbers/complex/ComplexTest.java'],Add a test for square(),
52a8992fff8641ec3ba628baf3b982a403b60b61,aherbert,aherbert,1,['commons-numbers-complex/src/main/java/org/apache/commons/numbers/complex/Complex.java'],Use changeSign() rather than copySign().,
b44700c888c0e867c37e58124cb05a0c7a5a14a5,aherbert,aherbert,1,['commons-numbers-complex/src/main/java/org/apache/commons/numbers/complex/Complex.java'],"Remove Complex object creation from asinh.

Remove unused method.",
78fe8d8e9ef81968ba3767e115598775f3c844b4,aherbert,aherbert,1,['commons-numbers-complex/src/main/java/org/apache/commons/numbers/complex/Complex.java'],"Optimise identity acosh() to avoid Complex object creation.

Updates the formula for acos to match the Wolfram reference.

Extract sqrt() to static method for use in acos.

Removed unused private methods.",
62bebd7f16213e21ee0ef955a4678193a40d25f7,aherbert,aherbert,1,['commons-numbers-complex/src/main/java/org/apache/commons/numbers/complex/Complex.java'],Removed unused mapping functions,
85d3ba3dd9efb740b321439b127e268a1d900dab,aherbert,aherbert,1,['src/main/resources/checkstyle/checkstyle-suppressions.xml'],Allow Complex to exceed 2000 lines.,
3441694b8e85e1e2d7118937901aa7a3cc78cfc7,aherbert,aherbert,1,['commons-numbers-complex/src/main/java/org/apache/commons/numbers/complex/Complex.java'],"Optimise identity atan() to avoid Complex object creation.

Extract divide to static method for use in atanh.",
df9328d07693f290c800bce3feb0a844d90d15f4,aherbert,aherbert,1,['commons-numbers-complex/src/main/java/org/apache/commons/numbers/complex/Complex.java'],Correct helper computeBCminusAD used in divide() function.,
92cb49b1d77167ca62d26764096165e3890f30b2,aherbert,aherbert,1,['commons-numbers-complex/src/main/java/org/apache/commons/numbers/complex/Complex.java'],"Optimise identity asin() to avoid Complex object creation.

Extract multiply to static method for use in asinh.",
4f61050469d540dd67cd48f5b6b1e6fc5e7399e0,aherbert,aherbert,1,['commons-numbers-complex/src/test/java/org/apache/commons/numbers/complex/ComplexTest.java'],Remove redundant disabled test.,
4874158391c15e78c2905fba37414a2c428fe5e7,aherbert,aherbert,1,['commons-numbers-complex/src/main/java/org/apache/commons/numbers/complex/Complex.java'],Remove unused private method,
9181f7d94ddebcb0d651b2021a73ebb2f734938a,aherbert,aherbert,1,['commons-numbers-complex/src/main/java/org/apache/commons/numbers/complex/Complex.java'],Update javadoc formulas to be consistent with their Wolfram reference.,
f8089850302b35ce9d61f90a215bcee57b3120ec,aherbert,aherbert,1,['commons-numbers-complex/src/main/java/org/apache/commons/numbers/complex/Complex.java'],Implement acosh using acos.,
6d2869f9033e9562c9c976a723bdebe20ace476d,aherbert,aherbert,1,['commons-numbers-complex/src/test/java/org/apache/commons/numbers/complex/CStandardTest.java'],"Fix acosh (-0,0) specification.",
e7c32ad526f8cdb09045681e266089d129ff6ca9,aherbert,aherbert,1,['commons-numbers-complex/src/main/java/org/apache/commons/numbers/complex/Complex.java'],Removed redundant null checks in parsingException().,
d9b44bcd92d7efba3829b5a3b061ec119737d23c,aherbert,aherbert,1,['commons-numbers-complex/src/test/java/org/apache/commons/numbers/complex/CReferenceTest.java'],"Added a CReferenceTest for Complex.

The test data is from a reference implementation of C99.",
fd26d1f0f73ab56fbaa86f22088a8738b9f68e56,aherbert,aherbert,1,['commons-numbers-complex/src/test/java/org/apache/commons/numbers/complex/CStandardTest.java'],"Update C standard tests to match ISO C99.

Adds arrays to test finite and finite non-zero values of complex parts.

Removes redundant negation of assertion arguments as these are covered
by the ODD/EVEN test and conjugate equalities.",
5af4d3c2ad599fa28a0b7f9a67eda34e1aa682e6,aherbert,aherbert,1,['commons-numbers-complex/src/main/java/org/apache/commons/numbers/complex/Complex.java'],"Fix sinh conjugate and odd equality for infinite real, finite imaginary.",
f3a7bc914f4e7f62c92cbfca18f6faea68fb1f68,aherbert,aherbert,1,['commons-numbers-complex/src/main/java/org/apache/commons/numbers/complex/Complex.java'],Javadoc for trigonomic identities.,
94201f902b566a197e24a42cfdc4687f403c1568,aherbert,aherbert,1,['commons-numbers-complex/src/test/java/org/apache/commons/numbers/complex/CStandardTest.java'],Improve C99 test compliance,
202214e371d5a725ab5d88e80007587897ee5e83,aherbert,aherbert,1,['commons-numbers-complex/src/test/java/org/apache/commons/numbers/complex/CStandardTest.java'],Update function type assertions.,
cfb2719579a116123d6387091e0511ce74497cbd,aherbert,aherbert,1,['commons-numbers-complex/src/main/java/org/apache/commons/numbers/complex/Complex.java'],Optimise mapping function to the positive domain,
87729db90e75908f04a6aa57e1fce9e4379b3e0d,aherbert,aherbert,1,['commons-numbers-complex/src/main/java/org/apache/commons/numbers/complex/Complex.java'],Javadoc fix.,
72c1fecc5cfe06459fd82a82cbbc847e58770d58,,,1,['commons-numbers-complex/src/main/java/org/apache/commons/numbers/complex/Complex.java'],Fix CheckStyle errors.,
2181e4254fe04a67b64ee537eaa0ce291cccd576,,,1,['commons-numbers-angle/src/test/java/org/apache/commons/numbers/angle/PlaneAngleRadiansTest.java'],Typo.,
e0d38c83f2b3dbcad4da0a659051ac506eba9edb,aherbert,aherbert,1,['commons-numbers-complex/src/test/java/org/apache/commons/numbers/complex/CStandardTest.java'],Added notes about testing odd/even functions.,
7ec50bb2a9c37c9b136f48b0096fe3380fa6d610,aherbert,aherbert,1,['commons-numbers-complex/src/main/java/org/apache/commons/numbers/complex/Complex.java'],"Map the Complex to a positive domain to preserve oddness.

This applies to asinh and atanh.",
8950a68339b4d96172a53a736ba422cff5a09e98,aherbert,aherbert,1,['commons-numbers-complex/src/test/java/org/apache/commons/numbers/complex/CStandardTest.java'],"Remove odd/even edge cases.

The C99 reference states that the sign of the parts is undefined for
some edge cases. These should be tested separately.

Fix testCosh for cis check using the even property of the function and
the conjugate equality.",
4cb87cfe9d6b3e899165a5f4bf28b667bed417e0,,,2,"['commons-numbers-complex/src/main/java/org/apache/commons/numbers/complex/Complex.java', 'commons-numbers-complex/src/test/java/org/apache/commons/numbers/complex/ComplexTest.java']","Removed ""ComplexParsingException"".

It was almost a synonym for the standard ""NumberFormatException"".",
ff77988f8b5db27f64b6e7561263dd7a0167997f,,,2,"['commons-numbers-complex/src/main/java/org/apache/commons/numbers/complex/Complex.java', 'commons-numbers-complex/src/test/java/org/apache/commons/numbers/complex/CStandardTest.java']",Merge branch 'master' of https://gitbox.apache.org/repos/asf/commons-numbers,
5fec6e10970a7e17e36f5924a14741c726f1ab46,,,1,['commons-numbers-angle/src/test/java/org/apache/commons/numbers/angle/PlaneAngleRadiansTest.java'],"Disable SonarQube rule.

The rule was triggered whatever the order of the assertion arguments.",
8963bd191ca80af6b1ba3f94998d5be0d64e43ac,aherbert,aherbert,1,['commons-numbers-complex/src/main/java/org/apache/commons/numbers/complex/Complex.java'],Preserve even function in cosh,
fb4b645d6e8073764ce00adf5a78b083ff7a1f7b,aherbert,aherbert,1,['commons-numbers-complex/src/test/java/org/apache/commons/numbers/complex/CStandardTest.java'],Reorder assertion error arguments,
4e2d62b34ac5b43ba3c29ba30dda98bd1a0665eb,aherbert,aherbert,1,['commons-numbers-complex/src/main/java/org/apache/commons/numbers/complex/Complex.java'],Fix asinh odd equality for infinite imaginary.,
19e272f1b61ef4b2432c52aa219ba422e7ad970d,aherbert,aherbert,1,['commons-numbers-complex/src/test/java/org/apache/commons/numbers/complex/CStandardTest.java'],"Complex: Added test for function odd/even.

These tests currently fail with sign errors on infinite edge cases for:

asinh
atanh
cosh
sinh

tanh is OK.

The failing tests are commented out.",
a7603bf65e5db956655935561cce6b109088e683,,,1,['commons-numbers-angle/src/test/java/org/apache/commons/numbers/angle/PlaneAngleRadiansTest.java'],"Revert ""Order of arguments in Junit assertions.""

This reverts commit d59daba7a06349db19a044068a90b1ed32e5c5a3.",
2bc8b1660a7c8d471c29542bae181c4ed6379a59,,,1,['commons-numbers-complex/src/test/java/org/apache/commons/numbers/complex/ComplexTest.java'],Disable SonarQube rule.,
58da8554b8598b4384cf9a711b5a1512a3090d2c,,,1,['commons-numbers-complex/src/test/java/org/apache/commons/numbers/complex/ComplexTest.java'],"Revert ""Disable SonarQube locally.""

This reverts commit b726f8299aee7769ad317f7251eec414c8d63548.",
b726f8299aee7769ad317f7251eec414c8d63548,,,1,['commons-numbers-complex/src/test/java/org/apache/commons/numbers/complex/ComplexTest.java'],Disable SonarQube locally.,
d59daba7a06349db19a044068a90b1ed32e5c5a3,,,1,['commons-numbers-angle/src/test/java/org/apache/commons/numbers/angle/PlaneAngleRadiansTest.java'],"Order of arguments in Junit assertions.

Reported by ""sonarcloud.io"".",
2026f96c3d8465eda9e494756d29427e1bb9840f,aherbert,aherbert,1,['commons-numbers-complex/src/main/java/org/apache/commons/numbers/complex/Complex.java'],"Use add(double), subtract and subtractFromReal(double).

Use this in preference to add(ONE), subtract(ONE) and ONE.subtract(z).

The add is faster.

The subtract preserves the sign of an imaginary zero.

The subtractFromReal negates the sign of the imaginary if it is zero.",
d258522e2ec93b06f120fe66e3b8837afb8389b2,aherbert,aherbert,2,"['commons-numbers-complex/src/main/java/org/apache/commons/numbers/complex/Complex.java', 'commons-numbers-complex/src/test/java/org/apache/commons/numbers/complex/ComplexTest.java']","[NUMBERS-78] Increase edge case coverage of atanh.

Requires implementation of subtractFromReal to negate the sign of the
imaginary zero when subtracting from 0 imaginary.",NUMBERS-78
2065d65e9d656c92f0c7d4718e548cbcd8edc5f5,aherbert,aherbert,1,['commons-numbers-complex/src/test/java/org/apache/commons/numbers/complex/ComplexTest.java'],[NUMBERS-78] Increase edge case coverage of pow.,NUMBERS-78
75b94a2d28b59c8bc73c646f6020869043f8a167,aherbert,aherbert,1,['commons-numbers-complex/src/test/java/org/apache/commons/numbers/complex/ComplexTest.java'],[NUMBERS-78] Increase coverage of reciprocal,NUMBERS-78
cbe47a6f4f595e9cb2c5758f3c7dc150aa3e327b,aherbert,aherbert,1,['commons-numbers-complex/src/test/java/org/apache/commons/numbers/complex/CStandardTest.java'],Use conjugate not conj,
13a3d64a0124ffa31aec50016556643cc6a57b46,aherbert,aherbert,1,['commons-numbers-complex/src/main/java/org/apache/commons/numbers/complex/Complex.java'],Javadoc correction,
3861867532f3892fcf24c56a470fe59aa04681b0,aherbert,aherbert,1,['commons-numbers-complex/src/test/java/org/apache/commons/numbers/complex/ComplexTest.java'],Allow floating-point error in the log10 test.,
9838beb06a94f020525e2a7a03fd8f2d8df7d160,aherbert,aherbert,1,['commons-numbers-complex/src/test/java/org/apache/commons/numbers/complex/ComplexTest.java'],Fixed Complex log10 test.,
152c0eb8c715964e2f35091e374add68ea6bb887,aherbert,aherbert,2,"['commons-numbers-complex/src/main/java/org/apache/commons/numbers/complex/Complex.java', 'commons-numbers-complex/src/test/java/org/apache/commons/numbers/complex/CStandardTest.java']","Complex: Increase ISO C99 compliance.

Explicit testing of the conjugate equalities. These are implemented for
zero and +/- infinity for the imaginary part.",
694e8d81231da3efbd7068731694fa146b91b4cb,aherbert,aherbert,1,['pom.xml'],commons-rng 1.2 -> 1.3,commons-
e163c0fd5680b5087c02d7910c1a9ab8b2483599,aherbert,aherbert,1,['pom.xml'],"Update coveralls config from 3.1.0 to 4.3.0.

Removed configuration of <maven.buildNumber.timestampFormat>.

Use the settings from commons-parent with the timestamp set to
EpochMillis.",
5d27e75e787353a885814195eb77552a66aeec54,,,1,['commons-numbers-arrays/src/test/java/org/apache/commons/numbers/arrays/SafeNormTest.java'],Add (trivial) test.,
5b09ec74f19be133e9084e2542b4efd682e81de6,,,2,"['commons-numbers-angle/src/main/java/org/apache/commons/numbers/angle/PlaneAngleRadians.java', 'commons-numbers-angle/src/test/java/org/apache/commons/numbers/angle/PlaneAngleRadiansTest.java']",Removed redundant fields.,
4860e9d7b134650d738c51670d432221903104a8,,,1,['commons-numbers-fraction/src/main/java/org/apache/commons/numbers/fraction/BigFraction.java'],"Ensure ""long"" arithmetics.

Reported by ""sonarcloud.io"".",
5791e5b0ff2c2056b22481ef513ddef86de6ddad,,,1,['commons-numbers-quaternion/src/main/java/org/apache/commons/numbers/quaternion/Quaternion.java'],"Alias should call ""primary"" method.

Reported by ""sonarcloud.io"".",
fc1291e1adb97705d1100cff43f8a8e3a32bad86,,,1,['commons-numbers-fraction/src/main/java/org/apache/commons/numbers/fraction/BigFraction.java'],Javadoc.,
017e03819b61b00ec702ede9264892b849b8b9a9,,,1,['commons-numbers-angle/src/test/java/org/apache/commons/numbers/angle/PlaneAngleRadiansTest.java'],"Order of arguments in Junit assertions.

Reported by ""sonarcloud.io"".",
f473b68f79e34257922b6ee305e7f889b72f847d,,,3,"['commons-numbers-angle/src/main/java/org/apache/commons/numbers/angle/PlaneAngle.java', 'commons-numbers-angle/src/main/java/org/apache/commons/numbers/angle/PlaneAngleRadians.java', 'commons-numbers-angle/src/test/java/org/apache/commons/numbers/angle/PlaneAngleRadiansTest.java']",Common constants for angles in radians.,
e0c7f539db9c77dc044b271a6273b892e07c5434,aherbert,aherbert,16,"['commons-numbers-angle/src/site/xdoc/index.xml', 'commons-numbers-arrays/src/site/xdoc/index.xml', 'commons-numbers-combinatorics/src/site/xdoc/index.xml', 'commons-numbers-complex-streams/src/site/xdoc/index.xml', 'commons-numbers-complex/src/site/xdoc/index.xml', 'commons-numbers-core/src/site/xdoc/index.xml', 'commons-numbers-fraction/src/site/xdoc/index.xml', 'commons-numbers-gamma/src/site/xdoc/index.xml', 'src/changes/changes.xml', 'src/main/resources/checkstyle/checkstyle.xml', 'src/main/resources/pmd/pmd-ruleset.xml', 'src/site/site.xml', 'src/site/xdoc/developers.xml', 'src/site/xdoc/index.xml', 'src/site/xdoc/userguide/core.xml', 'src/site/xdoc/userguide/index.xml']",Remove trailing whitespace from xml.,
45e35999b685656addefb8b7fff4a49c2970e364,aherbert,aherbert,2,"['commons-numbers-complex/src/main/java/org/apache/commons/numbers/complex/Complex.java', 'commons-numbers-complex/src/test/java/org/apache/commons/numbers/complex/ComplexTest.java']","Update Complex equals(Object) and hashCode().

The two methods are now equivalent to using java.util.Arrays to perform
the computation on an array of the real and imaginary components as if
using:

Arrays.equals(
  new double[]{c1.real(), c1.imaginary()},
  new double[]{c2.real(), c2.imaginary()},
  );

Arrays.hashCode(new double[]{real, imaginary});

This change does not alter the code of Complex.equals(Object) but
significantly updates the javadoc and tests for the equals method.

The hashCode() method has been updated to compute a different hash.
Tests have been extended to check the hash is computed as expected.",
01b0e738c4b97ba3b2bd089e9da18d2ae9345ab2,aherbert,aherbert,1,['pom.xml'],"Run checkstyle:check in the default lifecycle phase of 'validate'.

Allows running 'mvn test' with code that contains checkstyle violations,
e.g. using System.out.print.",
3be23775678979d05cf5dc9b94e143af0f12c8f8,aherbert,aherbert,1,['commons-numbers-combinatorics/src/main/java/org/apache/commons/numbers/combinatorics/FactorialDouble.java'],Use final.,
886b6aefbb9dfdcd53214d26777170a91d480c21,aherbert,aherbert,1,['commons-numbers-arrays/src/main/java/org/apache/commons/numbers/arrays/SafeNorm.java'],Use final.,
bd83bb05359fce6c1e427e452884687ab5f7a0ee,aherbert,aherbert,1,['pom.xml'],"checkstyle:check and pmd:check to log violations to console.

Helps in detecting reasons for failure.",
39988044becf83861fa7da485ab1bd217ec31d4c,aherbert,aherbert,1,['commons-numbers-combinatorics/src/main/java/org/apache/commons/numbers/combinatorics/LogFactorial.java'],Avoid integer math to create the double value passed to LogGamma.,
60c4035753957c030294f19c417d577bf25db8ed,aherbert,aherbert,1,['src/main/resources/pmd/pmd-ruleset.xml'],Add note to PMD rules to fix the ShortMethodName rule.,
4a5568e5f1484967d40d727150b835fef2400113,aherbert,aherbert,1,['commons-numbers-quaternion/src/main/java/org/apache/commons/numbers/quaternion/Quaternion.java'],"PMD code clean-up.

Preserve exceptions.
Rearrange field declarations.
Avoid magic numbers.
Renamed 'isUnit' predicate to avoid the naming convention for boolean
fields.",
d753d1910e95fc0f8def1f1509a4dc3962f5aba8,aherbert,aherbert,1,['commons-numbers-quaternion/src/main/java/org/apache/commons/numbers/quaternion/Slerp.java'],Remove implicit constructor.,
2d35bfc0a51741fb6cd825ae8b8e3d25abafcb88,aherbert,aherbert,2,"['commons-numbers-primes/src/main/java/org/apache/commons/numbers/primes/Primes.java', 'commons-numbers-primes/src/main/java/org/apache/commons/numbers/primes/SmallPrimes.java']",Use final.,
496ba7b9524ae76a5bf95c2340a174b3a748f262,aherbert,aherbert,2,"['commons-numbers-complex/src/main/java/org/apache/commons/numbers/complex/Complex.java', 'src/main/resources/pmd/pmd-ruleset.xml']","Fix PMD violations for Complex.

Preserve exception stack trace.
Use final.
Avoid magic numbers.",
7b1b7bf71e6fb819cf74762472dc263d8f2e1f80,aherbert,aherbert,1,['commons-numbers-core/src/main/java/org/apache/commons/numbers/core/ArithmeticUtils.java'],"PMD clean-up for ArithmeticUtils.

Use final.
Avoid reassigning params.",
285d81198fdbeb1946dfcf8ec6207008f0047069,aherbert,aherbert,1,['commons-numbers-complex-streams/src/main/java/org/apache/commons/numbers/complex/streams/ComplexUtils.java'],"PMD code clean-up for ComplexUtils.

Use final.
Use constants for magic numbers.",
8dbb6c7f361098a8b3279c8dc1dd7e97f66e4f5f,aherbert,aherbert,2,"['commons-numbers-fraction/src/main/java/org/apache/commons/numbers/fraction/BigFraction.java', 'commons-numbers-fraction/src/main/java/org/apache/commons/numbers/fraction/Fraction.java']","PMD fixes for BigFraction/Fraction.

Removed unused fields.
Add Overrides.
Don't use if (x != y) else ...",
b7420d0d45e80f9cea4b13614bc1746da6234ac9,aherbert,aherbert,5,"['commons-numbers-gamma/src/main/java/org/apache/commons/numbers/gamma/Erf.java', 'commons-numbers-gamma/src/main/java/org/apache/commons/numbers/gamma/Erfc.java', 'commons-numbers-gamma/src/main/java/org/apache/commons/numbers/gamma/Gamma.java', 'commons-numbers-gamma/src/main/java/org/apache/commons/numbers/gamma/LogBeta.java', 'src/main/resources/pmd/pmd-ruleset.xml']","Use constants for magic numbers.

Allow some gamma classes to use magic numbers in PMD rules.",
b2917ede83fce0aff88615da77a977fbc56153cc,aherbert,aherbert,2,"['commons-numbers-gamma/src/main/java/org/apache/commons/numbers/gamma/InverseErf.java', 'commons-numbers-gamma/src/test/java/org/apache/commons/numbers/gamma/InverseErfTest.java']","Change !Double.isInfinite(w) to w < Infinity and w == Infinity.

Adds explicit edge case for NaN.

This change removes the potential two boolean tests in Double.isInfinite
to two if statements. The number of test is the same but the case for
NaN is handled explicitly.

Change suggested from PMD analysis.",
fd391f48e0ce85ce81f4e39560739b43de7ee3c0,aherbert,aherbert,1,['src/main/resources/pmd/pmd-ruleset.xml'],"PMD rule changes.

- Exclude UseUnderscoresInNumericLiterals
- Exclude ShortClassName
- Allow standard names for utility classes",
4bbadc7c14dde105b231a23ad0a824346db052b7,aherbert,aherbert,1,['commons-numbers-gamma/src/test/java/org/apache/commons/numbers/gamma/LogBetaTest.java'],Reorder test data to remove checkstyle DeclarationOrder violation.,
9e0772fdb0f3d46315d1efec8c9beaeb86e93aea,aherbert,aherbert,1,['commons-numbers-core/src/test/java/org/apache/commons/numbers/core/PrecisionTest.java'],Removed ParenPad checkstyle violations.,
92073bc7c48d07e796f744a407c4a97854667072,aherbert,aherbert,1,['commons-numbers-fraction/src/test/java/org/apache/commons/numbers/fraction/FractionTest.java'],Fix nested blocks in FractionTest.,
1e0970991a952b3c490a434db42bfae90f8f838d,aherbert,aherbert,1,['pom.xml'],"Enable checkstyle failOnViolation in parent pom.

Removed duplicate configuration for plugin from the build plugin
management section.",
b5fedf92a41dbab2940144ce8bd819d06cbb5cd5,aherbert,aherbert,7,"['commons-numbers-arrays/src/main/java/org/apache/commons/numbers/arrays/CosAngle.java', 'commons-numbers-arrays/src/main/java/org/apache/commons/numbers/arrays/LinearCombination.java', 'commons-numbers-arrays/src/main/java/org/apache/commons/numbers/arrays/SafeNorm.java', 'commons-numbers-arrays/src/test/java/org/apache/commons/numbers/arrays/CosAngleTest.java', 'commons-numbers-arrays/src/test/java/org/apache/commons/numbers/arrays/LinearCombinationTest.java', 'commons-numbers-arrays/src/test/java/org/apache/commons/numbers/arrays/SafeNormTest.java', 'src/main/resources/checkstyle/checkstyle-suppressions.xml']",Fixed checkstyle for arrays.,
fa56e252a896d7718656c4cd1e14037719003e6c,aherbert,aherbert,4,"['commons-numbers-angle/src/main/java/org/apache/commons/numbers/angle/PlaneAngle.java', 'commons-numbers-angle/src/main/java/org/apache/commons/numbers/angle/PlaneAngleRadians.java', 'commons-numbers-angle/src/test/java/org/apache/commons/numbers/angle/PlaneAngleRadiansTest.java', 'commons-numbers-angle/src/test/java/org/apache/commons/numbers/angle/PlaneAngleTest.java']",Fixed checkstyle for angle.,
39e6c29936c5160f547e56ecb15b3a936e75cf13,aherbert,aherbert,2,"['commons-numbers-rootfinder/src/test/java/org/apache/commons/numbers/rootfinder/BrentSolverTest.java', 'commons-numbers-rootfinder/src/test/java/org/apache/commons/numbers/rootfinder/MonitoredFunction.java']",Fixed checkstyle for rootfinder.,
0569f2394dd4117c8ad9872befc923e0add2f593,aherbert,aherbert,6,"['commons-numbers-field/src/main/java/org/apache/commons/numbers/field/BigFractionField.java', 'commons-numbers-field/src/main/java/org/apache/commons/numbers/field/FP64.java', 'commons-numbers-field/src/main/java/org/apache/commons/numbers/field/FP64Field.java', 'commons-numbers-field/src/main/java/org/apache/commons/numbers/field/FractionField.java', 'commons-numbers-field/src/test/java/org/apache/commons/numbers/field/FieldTestData.java', 'commons-numbers-field/src/test/java/org/apache/commons/numbers/field/FieldsList.java']",Fixed checkstyle for field.,
7b1b38167c9241462cd08578a37d63d5cd9b7a04,aherbert,aherbert,1,['commons-numbers-complex/src/main/java/org/apache/commons/numbers/complex/Complex.java'],Fix Javadoc using <code> tags.,
e47e31ddcd394372dec26ba8da556b16be1a2bf0,aherbert,aherbert,4,"['commons-numbers-complex-streams/src/test/java/org/apache/commons/numbers/complex/streams/ComplexUtilsTest.java', 'commons-numbers-complex/src/test/java/org/apache/commons/numbers/complex/CStandardTest.java', 'commons-numbers-complex/src/test/java/org/apache/commons/numbers/complex/ComplexTest.java', 'commons-numbers-fraction/src/test/java/org/apache/commons/numbers/fraction/CommonTestCases.java']",Suppression of ConstantName is in the global checkstyle configuration.,
c4bf150ab646328f666754713f1647774a8457b4,aherbert,aherbert,14,"['commons-numbers-combinatorics/src/main/java/org/apache/commons/numbers/combinatorics/BinomialCoefficient.java', 'commons-numbers-combinatorics/src/main/java/org/apache/commons/numbers/combinatorics/BinomialCoefficientDouble.java', 'commons-numbers-combinatorics/src/main/java/org/apache/commons/numbers/combinatorics/Combinations.java', 'commons-numbers-combinatorics/src/main/java/org/apache/commons/numbers/combinatorics/Factorial.java', 'commons-numbers-combinatorics/src/main/java/org/apache/commons/numbers/combinatorics/FactorialDouble.java', 'commons-numbers-combinatorics/src/main/java/org/apache/commons/numbers/combinatorics/LogBinomialCoefficient.java', 'commons-numbers-combinatorics/src/main/java/org/apache/commons/numbers/combinatorics/LogFactorial.java', 'commons-numbers-combinatorics/src/test/java/org/apache/commons/numbers/combinatorics/BinomialCoefficientDoubleTest.java', 'commons-numbers-combinatorics/src/test/java/org/apache/commons/numbers/combinatorics/BinomialCoefficientTest.java', 'commons-numbers-combinatorics/src/test/java/org/apache/commons/numbers/combinatorics/CombinationsTest.java', 'commons-numbers-combinatorics/src/test/java/org/apache/commons/numbers/combinatorics/FactorialDoubleTest.java', 'commons-numbers-combinatorics/src/test/java/org/apache/commons/numbers/combinatorics/LogBinomialCoefficientTest.java', 'commons-numbers-combinatorics/src/test/java/org/apache/commons/numbers/combinatorics/LogFactorialTest.java', 'src/main/resources/checkstyle/checkstyle-suppressions.xml']",Fixed checkstyle in combinatorics.,
6592e777fa5ea084f46252f2ecff71772ac19674,aherbert,aherbert,27,"['commons-numbers-gamma/src/main/java/org/apache/commons/numbers/gamma/Digamma.java', 'commons-numbers-gamma/src/main/java/org/apache/commons/numbers/gamma/Erf.java', 'commons-numbers-gamma/src/main/java/org/apache/commons/numbers/gamma/ErfDifference.java', 'commons-numbers-gamma/src/main/java/org/apache/commons/numbers/gamma/Erfc.java', 'commons-numbers-gamma/src/main/java/org/apache/commons/numbers/gamma/Gamma.java', 'commons-numbers-gamma/src/main/java/org/apache/commons/numbers/gamma/InvGamma1pm1.java', 'commons-numbers-gamma/src/main/java/org/apache/commons/numbers/gamma/InverseErf.java', 'commons-numbers-gamma/src/main/java/org/apache/commons/numbers/gamma/InverseErfc.java', 'commons-numbers-gamma/src/main/java/org/apache/commons/numbers/gamma/LanczosApproximation.java', 'commons-numbers-gamma/src/main/java/org/apache/commons/numbers/gamma/LogBeta.java', 'commons-numbers-gamma/src/main/java/org/apache/commons/numbers/gamma/LogGamma.java', 'commons-numbers-gamma/src/main/java/org/apache/commons/numbers/gamma/LogGamma1p.java', 'commons-numbers-gamma/src/main/java/org/apache/commons/numbers/gamma/LogGammaSum.java', 'commons-numbers-gamma/src/main/java/org/apache/commons/numbers/gamma/RegularizedBeta.java', 'commons-numbers-gamma/src/main/java/org/apache/commons/numbers/gamma/RegularizedGamma.java', 'commons-numbers-gamma/src/main/java/org/apache/commons/numbers/gamma/Trigamma.java', 'commons-numbers-gamma/src/test/java/org/apache/commons/numbers/gamma/DigammaTest.java', 'commons-numbers-gamma/src/test/java/org/apache/commons/numbers/gamma/ErfDifferenceTest.java', 'commons-numbers-gamma/src/test/java/org/apache/commons/numbers/gamma/ErfTest.java', 'commons-numbers-gamma/src/test/java/org/apache/commons/numbers/gamma/GammaTest.java', 'commons-numbers-gamma/src/test/java/org/apache/commons/numbers/gamma/InvGamma1pm1Test.java', 'commons-numbers-gamma/src/test/java/org/apache/commons/numbers/gamma/InverseErfcTest.java', 'commons-numbers-gamma/src/test/java/org/apache/commons/numbers/gamma/LogBetaTest.java', 'commons-numbers-gamma/src/test/java/org/apache/commons/numbers/gamma/LogGamma1pTest.java', 'commons-numbers-gamma/src/test/java/org/apache/commons/numbers/gamma/LogGammaSumTest.java', 'commons-numbers-gamma/src/test/java/org/apache/commons/numbers/gamma/LogGammaTest.java', 'commons-numbers-gamma/src/test/java/org/apache/commons/numbers/gamma/TrigammaTest.java']","Fixed checkstyle in gamma.

Changed all classes with private constructors to final.

Updated whitespace around array initializers in tests.",
59428784a8533c1b05fc430c5c763b25f9ee44f5,aherbert,aherbert,5,"['commons-numbers-fraction/src/main/java/org/apache/commons/numbers/fraction/BigFraction.java', 'commons-numbers-fraction/src/main/java/org/apache/commons/numbers/fraction/Fraction.java', 'commons-numbers-fraction/src/test/java/org/apache/commons/numbers/fraction/BigFractionTest.java', 'commons-numbers-fraction/src/test/java/org/apache/commons/numbers/fraction/CommonTestCases.java', 'commons-numbers-fraction/src/test/java/org/apache/commons/numbers/fraction/FractionTest.java']",Fixed checkstyle in fraction.,
eb10d9f59ec16ea088613a8ffb6f01f2cb650c49,aherbert,aherbert,2,"['commons-numbers-fraction/src/main/java/org/apache/commons/numbers/fraction/BigFraction.java', 'commons-numbers-fraction/src/main/java/org/apache/commons/numbers/fraction/Fraction.java']",Merge branch 'master' of https://gitbox.apache.org/repos/asf/commons-numbers,
5326c6a95c2309a44645b6a185c3b8bafff39726,aherbert,aherbert,3,"['commons-numbers-quaternion/src/main/java/org/apache/commons/numbers/quaternion/Quaternion.java', 'commons-numbers-quaternion/src/test/java/org/apache/commons/numbers/quaternion/QuaternionTest.java', 'commons-numbers-quaternion/src/test/java/org/apache/commons/numbers/quaternion/SlerpTest.java']",Fixed checkstyle in quaternion.,
a7066567b1b11f8ba337ecbe0303659adc13a946,aherbert,aherbert,2,"['commons-numbers-primes/src/test/java/org/apache/commons/numbers/primes/SmallPrimesTest.java', 'src/main/resources/checkstyle/checkstyle-suppressions.xml']",Suppress MethodName rule in checkstyle for tests.,
d803bf596a20bc45e1943e269497e23cd3b47c76,aherbert,aherbert,4,"['commons-numbers-primes/src/main/java/org/apache/commons/numbers/primes/Primes.java', 'commons-numbers-primes/src/main/java/org/apache/commons/numbers/primes/SmallPrimes.java', 'commons-numbers-primes/src/test/java/org/apache/commons/numbers/primes/PrimesTest.java', 'commons-numbers-primes/src/test/java/org/apache/commons/numbers/primes/SmallPrimesTest.java']",Fixed checkstyle in primes.,
2d0ef91daf9fe0509d9f7b68a0debf6d280ad62c,aherbert,aherbert,3,"['commons-numbers-complex-streams/src/main/java/org/apache/commons/numbers/complex/streams/ComplexUtils.java', 'commons-numbers-complex-streams/src/test/java/org/apache/commons/numbers/complex/streams/ComplexUtilsTest.java', 'commons-numbers-complex-streams/src/test/java/org/apache/commons/numbers/complex/streams/TestUtils.java']",Fixed checkstyle in complex-streams.,
90c8689425db98f5a36be803982e51269aa5b5e0,aherbert,aherbert,5,"['commons-numbers-core/src/main/java/org/apache/commons/numbers/core/ArithmeticUtils.java', 'commons-numbers-core/src/main/java/org/apache/commons/numbers/core/Precision.java', 'commons-numbers-core/src/test/java/org/apache/commons/numbers/core/ArithmeticUtilsTest.java', 'commons-numbers-core/src/test/java/org/apache/commons/numbers/core/PrecisionTest.java', 'commons-numbers-core/src/test/java/org/apache/commons/numbers/core/TestUtils.java']",Fixed checkstyle in core.,
ce3b6d5a4cc0de9d406c9337cae95cbad0225735,aherbert,aherbert,1,['commons-numbers-complex/src/main/java/org/apache/commons/numbers/complex/Complex.java'],Code style and javadoc.,
86996be0572bf5de61ae3177b851070d34e1cfb6,aherbert,aherbert,1,['commons-numbers-complex/src/main/java/org/apache/commons/numbers/complex/Complex.java'],"[NUMBERS-78] Optimise the trigonomic identities.

Use a static method that accepts (real, imaginary) and a functional
interface for the Complex constructor.

The identities have the same runtime as the original complex function
that is used by the identity.",NUMBERS-78
594ffaddb28b553558138c2606924b2182b84d91,aherbert,aherbert,2,"['commons-numbers-complex/src/main/java/org/apache/commons/numbers/complex/Complex.java', 'commons-numbers-complex/src/test/java/org/apache/commons/numbers/complex/CStandardTest.java']","[NUMBERS-78] Increase test coverage of divide/multiply.

This involves fixing the edge case correction algorithm.

Multiply has been updated to explicitly detect infinities multiplied by
zero and not correct the NaN,NaN result.

Divide algorithm has been updated to handle overflow in infinite/finite
and finite/infinite correction.",NUMBERS-78
1e9d9787a44f0c58a8d4fa7fbd13244629624f54,,,2,"['commons-numbers-fraction/src/main/java/org/apache/commons/numbers/fraction/BigFraction.java', 'commons-numbers-fraction/src/main/java/org/apache/commons/numbers/fraction/Fraction.java']","Classes are ""final"" (ValJO).",
ddfdbce4ffb6e4cd2cfd8d280f5942639b521d6e,,,2,"['commons-numbers-fraction/src/main/java/org/apache/commons/numbers/fraction/BigFraction.java', 'commons-numbers-fraction/src/main/java/org/apache/commons/numbers/fraction/Fraction.java']",NUMBERS-126: Removed null checks.,NUMBERS-126
7775ba7b3188906c077be853bebaa01274565bd0,aherbert,aherbert,4,"['commons-numbers-complex/src/main/java/org/apache/commons/numbers/complex/Complex.java', 'commons-numbers-complex/src/test/java/org/apache/commons/numbers/complex/CStandardTest.java', 'commons-numbers-complex/src/test/java/org/apache/commons/numbers/complex/ComplexTest.java', 'commons-numbers-complex/src/test/java/org/apache/commons/numbers/complex/TestUtils.java']","[NUMBERS-78] Increase test coverage.

Added more tests using the C.99 standard.

Fixed checkstyle.

Use final.",NUMBERS-78
5caefb152c6705e11539573434425b102b13c45c,aherbert,aherbert,3,"['commons-numbers-arrays/pom.xml', 'commons-numbers-complex/pom.xml', 'pom.xml']","Add commons-rng-simple to dependency management.

This is used in tests.",
fc8e0ae99f822552ce5f51885577d7faf504bf18,aherbert,aherbert,1,['commons-numbers-complex-streams/README.md'],End-of-line normalization,End-
caf92f02891bd6deb2a6675233216e4e1c2b58a5,aherbert,aherbert,1,['.travis.yml'],"Run a custom Travis install to reduce verbosity.

This that hides all the Maven ‘Downloading’ messages.",
f1e79241ef6bc688f0c5dc158ae0ed5098997c5b,aherbert,aherbert,1,['.travis.yml'],Travis to use default maven goal for all checks.,
1bfd5f35da1f1d19db50b163fd4c18f715edb499,aherbert,aherbert,1,['pom.xml'],Added default goal.,
c34dd95b54f8d366da6756884d17d95e477417fc,aherbert,aherbert,1,['.gitattributes'],Added .gitattributes for text file line endings.,
7357e4b9d9ea18e3ad093636d0847c709c410e9c,aherbert,aherbert,1,['pom.xml'],"Upgrade to parent 49. Allows build on Java 11.

Parent 49 adds a <source> tag to the javadoc plugin allowing building
using JDK 11 with older sources.",
9067e4d9d17f5dca0ec7dd73c3ac05e382e462f1,aherbert,aherbert,1,['commons-numbers-fraction/src/test/java/org/apache/commons/numbers/fraction/CommonTestCases.java'],Added license header.,
e9ac506af281402b42a5f9d73822d26b10e575e4,aherbert,aherbert,1,['pom.xml'],Fixed javadoc plugin configuration for default target 1.8.,
1e1e4087854c00740e7b6028bc59309f478390a7,aherbert,aherbert,1,['pom.xml'],Ignore checkstyle failures.,
2b03836a70178585f80c1c0ec01fd6530073a6af,aherbert,aherbert,1,['pom.xml'],"Update PMD version from 3.9.0 to 3.12.0.

Update dependency version to v6.19.0.",
27f71ae31852905feef8ad2a821a65fad911ce78,aherbert,aherbert,2,"['pom.xml', 'src/main/resources/spotbugs/spotbugs-exclude-filter.xml']","Fix spotbugs configuration in build section.

Added an exclusion for the BrentSolver.",
397d1a3e040a99a517aad8f4f57c593f02730edc,aherbert,aherbert,3,"['pom.xml', 'src/main/resources/checkstyle/checkstyle-suppressions.xml', 'src/main/resources/checkstyle/checkstyle.xml']",Update checkstyle configuration.,
a3d48c746d7a8c96bdcd460218ed903d5dfd77c8,aherbert,aherbert,1,['commons-numbers-complex/src/main/java/org/apache/commons/numbers/complex/Complex.java'],Javadoc requires period at end of first line.,
5d289a73786ab4ca10bdbd251bacad62c3f5c52b,aherbert,aherbert,1,['commons-numbers-complex/src/main/java/org/apache/commons/numbers/complex/Complex.java'],"Use Double.hashCode from JDK 1.8.

The JDK implementation matches the removed private method hash(double)
that probably was a backport from Java 8.",
aec4ea5378f577f32d0b9faa58916ad6fd5ca7a8,aherbert,aherbert,1,['commons-numbers-complex/src/main/java/org/apache/commons/numbers/complex/Complex.java'],Reference conjugate from conj method javadoc.,
0f02bbab29b07323970fb24714ea40b49c986684,aherbert,aherbert,1,['commons-numbers-complex/src/test/java/org/apache/commons/numbers/complex/CStandardTest.java'],Use Math.ulp(double) not Math.ulp(float) for Complex test.,
9b22dde78ba82fa4ddbe11768c8067315469afe4,aherbert,aherbert,1,['pom.xml'],Numbers requires Java 8 (not 6).,
97b517df0e6d9cd9289a29eb5dc0a67f5e2181de,aherbert,aherbert,1,['commons-numbers-complex/src/main/java/org/apache/commons/numbers/complex/Complex.java'],Formatting nit.,
28856b1193b0e5bb6b61cdb36a53e7435a420f0a,,,1,['doc/release/release.howto.txt'],Avoid duplicate and outdated info (release howto).,
0df61edad89f27b7ea84c806823a0dc82e4a51ff,,,2,"['pom.xml', 'src/main/resources/pmd/pmd-ruleset.xml']",NUMBERS-82: Upgrade PMD configuration.,NUMBERS-82
74a4d3353600d3099e15ba26257344d7c5296f87,,,1,['commons-numbers-fraction/src/main/java/org/apache/commons/numbers/fraction/Fraction.java'],"Use ""final"".",
2b478e4e315c54b0b68d322579e80e4a4deba40b,,,1,['commons-numbers-fraction/src/main/java/org/apache/commons/numbers/fraction/Fraction.java'],Javadoc.,
3af49d48c34de899e0110990dae7e5bc3a6554e6,,,1,['commons-numbers-fraction/src/main/java/org/apache/commons/numbers/fraction/Fraction.java'],Formatting nits.,
15e2c1aaee86e3a7f7ba1871b0f462aa416359d3,,,1,['pom.xml'],"Also report issues tagged as ""Implemented"".

Thanks to Alex Herbert.",
a643546293b4bd87de03f7e3798dde2372cc4e08,,,2,"['commons-numbers-fraction/src/test/java/org/apache/commons/numbers/fraction/BigFractionTest.java', 'commons-numbers-fraction/src/test/java/org/apache/commons/numbers/fraction/FractionTest.java']",Unit tests.,
bfa6fcc4fa63bc0fb1726bb1aaf851e7894900be,,,2,"['commons-numbers-fraction/src/main/java/org/apache/commons/numbers/fraction/BigFraction.java', 'commons-numbers-fraction/src/test/java/org/apache/commons/numbers/fraction/BigFractionTest.java']","Fixed method ""compareTo(BigFraction)"".

Implementation still assumed that only the numerator can be negative.",
1544a1dbb32a5c161d2fbc08d7135f71eff11683,,,3,"['commons-numbers-fraction/src/test/java/org/apache/commons/numbers/fraction/BigFractionTest.java', 'commons-numbers-fraction/src/test/java/org/apache/commons/numbers/fraction/CommonTestCases.java', 'commons-numbers-fraction/src/test/java/org/apache/commons/numbers/fraction/FractionTest.java']",Unit tests.,
8174f5b27746d4c441e1c91f8c61708128f39775,,,2,"['commons-numbers-complex/src/main/java/org/apache/commons/numbers/complex/Complex.java', 'commons-numbers-quaternion/src/main/java/org/apache/commons/numbers/quaternion/Quaternion.java']",More specific base class.,
97eaea379c9f9b6a4ee752827badadc6cec12f83,,,1,['commons-numbers-fraction/src/test/java/org/apache/commons/numbers/fraction/BigFractionTest.java'],Unit tests.,
3f1b9e48117a1caa81f96c0c661cb92cd8280598,,,1,['commons-numbers-fraction/src/main/java/org/apache/commons/numbers/fraction/BigFraction.java'],Javadoc.,
f27b5da7dea235b2529294fb62ef40589544da52,,,1,['commons-numbers-fraction/src/test/java/org/apache/commons/numbers/fraction/FractionTest.java'],Unit tests.,
b398da34918fa643f8fc8a761eb10c416f05bab3,,,1,['commons-numbers-fraction/src/main/java/org/apache/commons/numbers/fraction/FractionParseException.java'],Unused class.,
4b4bac41d3b2a437763adda4301544309a130370,,,1,['commons-numbers-fraction/src/main/java/org/apache/commons/numbers/fraction/Fraction.java'],Javadoc.,
ebab0bcab8893aa29fa1e82c475d50320b6a147b,,,1,['commons-numbers-fraction/src/test/java/org/apache/commons/numbers/fraction/FractionTest.java'],Nit: Formatting (unit tests).,
1a5d479b1057772420fa4e070fd69640497f1b9f,,,1,['commons-numbers-fraction/src/main/java/org/apache/commons/numbers/fraction/ContinuedFraction.java'],Unused API removed.,
eb7c5c93f70e89e5a034adcdeee8c116d503a0e8,,,3,"['commons-numbers-complex-streams/pom.xml', 'commons-numbers-complex/pom.xml', 'pom.xml']",Nit: Use version declared in <dependencyManagement>.,
4d2129e7a0cd0a0e05177f1d72d16368cd76a3b4,,,4,"['commons-numbers-field/pom.xml', 'commons-numbers-field/src/main/java/org/apache/commons/numbers/field/FieldSquareMatrix.java', 'commons-numbers-field/src/test/java/org/apache/commons/numbers/field/FP64FieldSquareMatrixTest.java', 'pom.xml']","Revert ""NUMBERS-138: Square matrix for ""Field"" elements.""

This reverts commit a8aedea0758d155cee66edd56920acd121281e44.",
add9f220fa2bec1328f44084f6ae43138ad1edab,,,4,"['commons-numbers-fraction/src/main/java/org/apache/commons/numbers/fraction/BigFraction.java', 'commons-numbers-fraction/src/main/java/org/apache/commons/numbers/fraction/Fraction.java', 'commons-numbers-fraction/src/test/java/org/apache/commons/numbers/fraction/BigFractionTest.java', 'commons-numbers-fraction/src/test/java/org/apache/commons/numbers/fraction/FractionTest.java']","Fixed methods ""equals(Object)"".

Implementations still assumed that only the numerator can be negative.",
e0b4295dff2a3412dc9aa6aad0314f13a855b412,,,1,['commons-numbers-fraction/src/test/java/org/apache/commons/numbers/fraction/FractionTest.java'],Assertions with better reporting.,
792fec8a4c156bbcd48e215c3653147759541032,,,1,['commons-numbers-fraction/src/test/java/org/apache/commons/numbers/fraction/FractionTest.java'],Formatting nit.,
32b70981399889d784449bb1510995335ba44de9,,,1,['README.md'],Badge.,
43270ce8f2de0092de45ede7ba20190649978ea5,,,1,['commons-numbers-combinatorics/src/main/java/org/apache/commons/numbers/combinatorics/Combinations.java'],"Reduce risk of overflow.

Reported by ""LGTM"" analysis.",
b8be1b5aa375e665758ab8d42e3995a0b295d88c,,,1,['commons-numbers-core/src/main/java/org/apache/commons/numbers/core/Precision.java'],"Improve readability.

Reported by ""LGTM"" analysis.",
c50d9083bc391ca656a443d0f7205451b817539b,,,1,['commons-numbers-fraction/src/test/java/org/apache/commons/numbers/fraction/BigFractionTest.java'],Unit tests.,
2f5a6581164cd5b4316a7998de654a197ee0e0f2,,,2,"['commons-numbers-fraction/src/main/java/org/apache/commons/numbers/fraction/BigFraction.java', 'commons-numbers-fraction/src/test/java/org/apache/commons/numbers/fraction/BigFractionTest.java']","Fixed method ""doubleValue()"".

Implementation still assumed that only the numerator can be negative.

Closes #69. [Thanks to ""bkrogh"" for reporting failing use-cases.]",
704e3557f1e1d45ee48bcf1f6e6a76e241c59a1c,,,1,['commons-numbers-field/src/main/java/org/apache/commons/numbers/field/FieldSquareMatrix.java'],Javadoc.,
91aacd8fad1612603b325c947733c74f65ba5516,,,2,"['commons-numbers-field/src/main/java/org/apache/commons/numbers/field/FieldSquareMatrix.java', 'commons-numbers-field/src/test/java/org/apache/commons/numbers/field/FP64FieldSquareMatrixTest.java']",Accessor.,
e2e46b1093f25238a0b21dafaf9675ab0e2eb904,,,1,['pom.xml'],"POM file standardization.

Cf. https://markmail.org/message/obiklp3oeuu7y2fc",
a8aedea0758d155cee66edd56920acd121281e44,,,4,"['commons-numbers-field/pom.xml', 'commons-numbers-field/src/main/java/org/apache/commons/numbers/field/FieldSquareMatrix.java', 'commons-numbers-field/src/test/java/org/apache/commons/numbers/field/FP64FieldSquareMatrixTest.java', 'pom.xml']","NUMBERS-138: Square matrix for ""Field"" elements.",NUMBERS-138
5c6b4b02f210724008aa2390315142f9eaa2cdd3,,,3,"['commons-numbers-field/src/main/java/org/apache/commons/numbers/field/BigFractionField.java', 'commons-numbers-field/src/test/java/org/apache/commons/numbers/field/FieldsList.java', 'commons-numbers-fraction/src/main/java/org/apache/commons/numbers/fraction/BigFraction.java']","Allow ""BigFraction"" to be used as a field elements.",
44ea3e26fa7610f3635aa225d24c4573ad5e54f2,,,5,"['commons-numbers-fraction/src/main/java/org/apache/commons/numbers/fraction/BigFraction.java', 'commons-numbers-fraction/src/main/java/org/apache/commons/numbers/fraction/Fraction.java', 'commons-numbers-fraction/src/test/java/org/apache/commons/numbers/fraction/BigFractionTest.java', 'commons-numbers-fraction/src/test/java/org/apache/commons/numbers/fraction/CommonTestCases.java', 'commons-numbers-fraction/src/test/java/org/apache/commons/numbers/fraction/FractionTest.java']","NUMBERS-99: Remove requirement that the sign be held in the numerator.

New ""signum"" method.
Unit tests updated.",NUMBERS-99
450287f3d6967c0148a9b616a5f5667795a3bace,,,3,"['commons-numbers-field/src/main/java/org/apache/commons/numbers/field/FP64Field.java', 'commons-numbers-field/src/main/java/org/apache/commons/numbers/field/FractionField.java', 'commons-numbers-field/src/test/java/org/apache/commons/numbers/field/FieldsList.java']",Class is conceptually a singleton.,
595b12a8aba51435093a5acca336339d239596f4,,,1,['commons-numbers-complex/src/test/java/org/apache/commons/numbers/complex/ComplexTest.java'],"Use consistent spelling for identifiers (except ""camel-case"").",
37e221a79e2a78a99130ae0602c295c45d50ca10,,,1,['commons-numbers-complex/src/test/java/org/apache/commons/numbers/complex/ComplexTest.java'],Unit tests.,
9ad130f4dcec59f5e090f24f7292c81ec2ddd027,,,2,"['commons-numbers-field/src/test/java/org/apache/commons/numbers/field/FP64Test.java', 'commons-numbers-field/src/test/java/org/apache/commons/numbers/field/FieldParametricTest.java']",Unit tests.,
c3c7c1d3a987b0c26bbea38b3970fbf50758b01f,,,1,['commons-numbers-complex/src/main/java/org/apache/commons/numbers/complex/Complex.java'],"Simplify.

Reported by ""SonarQube"".",
dc0de568f22370739cf8e45ad17fa7d3fac3d034,,,2,"['commons-numbers-complex/src/main/java/org/apache/commons/numbers/complex/Complex.java', 'commons-numbers-primes/src/main/java/org/apache/commons/numbers/primes/SmallPrimes.java']","Diamond operator (generics).

Reported by ""SonarQube"".",
80ddc95073a938faf147f59fac97cd60078014cc,,,1,['commons-numbers-fraction/src/main/java/org/apache/commons/numbers/fraction/ContinuedFraction.java'],"Useless assignment.

Reported by ""SonarQube"".",
f0358f4c8a48b7fc21c51686d957a23f35c50e7a,,,1,['commons-numbers-gamma/src/main/java/org/apache/commons/numbers/gamma/RegularizedGamma.java'],"Make default constructor ""private"".

Reported by ""SonarQube"".",
3b0c9883a737f3057494c785d1271956440b0b62,,,1,['commons-numbers-quaternion/src/main/java/org/apache/commons/numbers/quaternion/Quaternion.java'],"Useless use of ""return"" and braces.

Reported by ""SonarQube"".",
eefcd5f64158e7da2764a63be5b9fd7734146af8,,,5,"['commons-numbers-combinatorics/src/main/java/org/apache/commons/numbers/combinatorics/CombinatoricsException.java', 'commons-numbers-core/src/main/java/org/apache/commons/numbers/core/ArithmeticUtils.java', 'commons-numbers-fraction/src/main/java/org/apache/commons/numbers/fraction/FractionException.java', 'commons-numbers-gamma/src/main/java/org/apache/commons/numbers/gamma/GammaException.java', 'commons-numbers-rootfinder/src/main/java/org/apache/commons/numbers/rootfinder/SolverException.java']","Exceptions must be ""Serializable"".

Reported by ""SonarQube"".",
85d79edf87cdbcb355a98a0d768449a62f55025b,,,1,['commons-numbers-complex/src/main/java/org/apache/commons/numbers/complex/Complex.java'],Named constant.,
1112388285df80a39dd2ee781da6c81428642df1,,,1,['commons-numbers-complex/src/main/java/org/apache/commons/numbers/complex/Complex.java'],Named constants.,
05e7ab8c79129f5e2a451438fdc1d49ee652f5d9,,,2,"['commons-numbers-complex/src/main/java/org/apache/commons/numbers/complex/Complex.java', 'commons-numbers-complex/src/test/java/org/apache/commons/numbers/complex/ComplexTest.java']",Javadoc.,
5f066ed62191263420d491b996c5c22d737702cd,,,2,"['commons-numbers-complex/src/main/java/org/apache/commons/numbers/complex/Complex.java', 'commons-numbers-complex/src/test/java/org/apache/commons/numbers/complex/ComplexTest.java']",Removed unused constant.,
3b7ddc8d12f344bb8406fa50ed2d20c2517a58f1,,,1,['commons-numbers-complex/src/main/java/org/apache/commons/numbers/complex/Complex.java'],Links cleanup (Javadoc).,
7045693efc63d9df82461bcb3e1adde2f043b0c1,,,2,"['commons-numbers-combinatorics/src/main/java/org/apache/commons/numbers/combinatorics/Combinations.java', 'commons-numbers-combinatorics/src/test/java/org/apache/commons/numbers/combinatorics/CombinationsTest.java']","NUMBERS-135: Implementation details removed from public API.

""Comparator"" implementation made ""private"".
Factory method (""of"").",NUMBERS-135
5a0d8f5905f4440f7ee0ec5219e8bfeaf7d11300,,,2,"['commons-numbers-fraction/src/main/java/org/apache/commons/numbers/fraction/BigFraction.java', 'commons-numbers-fraction/src/test/java/org/apache/commons/numbers/fraction/BigFractionTest.java']","Merge branch 'NUMBERS-120__heinrich'

Closes #63.",
5d4485d2be5f96bbbb74fa4655152c57ad5a4ccd,,,1,['commons-numbers-fraction/src/main/java/org/apache/commons/numbers/fraction/BigFraction.java'],Javadoc and formatting nits.,
26c9e7f0c9962ffaed9743e8584f5e2809ecabed,,,1,['commons-numbers-fraction/src/main/java/org/apache/commons/numbers/fraction/BigFraction.java'],NUMBERS-120: Report argument values in IllegalArgumentException messages,NUMBERS-120
404ff82de649dfa503dcd9c1de87ee4f31431920,,,1,['commons-numbers-fraction/src/test/java/org/apache/commons/numbers/fraction/BigFractionTest.java'],NUMBERS-120: Add unit test for rounding up from subnormal to normal number,NUMBERS-120
e89aaadec3b431c4e2f979c778d22c929f180803,,,1,['commons-numbers-fraction/src/main/java/org/apache/commons/numbers/fraction/BigFraction.java'],NUMBERS-120: Add comment about previously neglected corner case that was luckily already handled correctly,NUMBERS-120
e6de6fc654b0fba45e838b35787a8fa46a8b9f4f,,,1,['commons-numbers-fraction/src/main/java/org/apache/commons/numbers/fraction/BigFraction.java'],"NUMBERS-120: Simplify roundAndRightShift(BigInteger, int, boolean)",NUMBERS-120
6ebd56951f4736b3cb5cf4b87d5ed3a6df5a496c,,,1,['commons-numbers-fraction/src/test/java/org/apache/commons/numbers/fraction/BigFractionTest.java'],NUMBERS-120: Create assertion helper methods for readability,NUMBERS-120
1abb1d8c1d57ce497b30e7145eb3499143f0f79e,,,1,['commons-numbers-fraction/src/main/java/org/apache/commons/numbers/fraction/BigFraction.java'],NUMBERS-120: Satisfy checkstyle requirements,NUMBERS-120
504f82b68c2bb597f11985a0599969139e117f2b,,,1,['commons-numbers-fraction/src/main/java/org/apache/commons/numbers/fraction/BigFraction.java'],NUMBERS-120: Remove redundant conditional branch,NUMBERS-120
f6a2e09df40f8d93f808e6072e48c2c144b70b8c,,,1,['commons-numbers-fraction/src/test/java/org/apache/commons/numbers/fraction/BigFractionTest.java'],NUMBERS-120: Add unit tests,NUMBERS-120
167f004f167c5177c7944e4c1f5e9d72dcbd1843,,,1,['commons-numbers-fraction/src/main/java/org/apache/commons/numbers/fraction/BigFraction.java'],"NUMBERS-120: Don't calculate more bits than necessary in toFloatingPointBits(int, int)",NUMBERS-120
0c070c16f9271022ab09c8267b672987aa2c9d6e,,,1,['commons-numbers-fraction/src/test/java/org/apache/commons/numbers/fraction/BigFractionTest.java'],NUMBERS-120: Make doubleValue() tests independent of double constructor,NUMBERS-120
fd1292e588bfbd0b0b63ae56cf316faf2df00537,,,1,['commons-numbers-fraction/src/main/java/org/apache/commons/numbers/fraction/BigFraction.java'],NUMBERS-120: Repair BigFraction.floatValue(),NUMBERS-120
1712ee65ed09d1813aebde55b2d96c6aa05a2c9f,,,1,['commons-numbers-fraction/src/main/java/org/apache/commons/numbers/fraction/BigFraction.java'],NUMBERS-120: Extract functionality of doubleValue() to helper method for reuse in floatValue(),NUMBERS-120
28fa56dcb3d1f41bdc84809cd00e710d43993a01,,,1,['commons-numbers-fraction/src/test/java/org/apache/commons/numbers/fraction/BigFractionTest.java'],NUMBERS-120: Add mad corner case to unit tests to enforce maximum precision in doubleValue(),NUMBERS-120
7c20513b8cf82e0e485c1a953f9cb95f0f277908,,,2,"['commons-numbers-fraction/src/main/java/org/apache/commons/numbers/fraction/BigFraction.java', 'commons-numbers-fraction/src/test/java/org/apache/commons/numbers/fraction/BigFractionTest.java']",NUMBERS-120: Repair BigFraction.doubleValue() to produce correctly rounded result with maximum precision,NUMBERS-120
f1f4ddca43eb67573a356e052fdd7cd70daedf7d,,,1,['commons-numbers-core/src/main/java/org/apache/commons/numbers/core/ArithmeticUtils.java'],"Merge branch 'NUMBERS-132__heinrich'

Closes #67.",
89ce65de33085f345e72b1f34473e1386f96a923,,,1,['commons-numbers-core/src/main/java/org/apache/commons/numbers/core/ArithmeticUtils.java'],"NUMBERS-132: Perform gcd algorithm on negative numbers in ArithmeticUtils.gcd(int, int)",NUMBERS-132
08962e853b9843d0ad98e66241fef6cc7d69faeb,,,1,['src/site/xdoc/mail-lists.xml'],Fix the site's source repository link.,
3eb540507a559b4c37a802c489b8c9218cf6bc9c,,,1,['src/site/xdoc/mail-lists.xml'],Use HTTPS to access Apache resources.,
f2cf56fbf969b027ab1d5f1832b6dc9b5803dd3d,,,1,['siteMods/pom.xml'],Replace SVN with GitBox URL.,
881697339ee05383dccb0e86df5572fe37a05566,,,1,['siteMods/pom.xml'],Replace SVN with GitBox URL.,
3c990b13dd4f2c6081239c4ead951b9063d330a4,,,3,"['pom.xml', 'siteMods/pom.xml', 'src/site/xdoc/developers.xml']",Use HTTPS to access Apache resources.,
005cf7b44491f3539ff4847983e50edc5478c5b0,,,2,"['commons-numbers-fraction/src/main/java/org/apache/commons/numbers/fraction/Fraction.java', 'commons-numbers-fraction/src/test/java/org/apache/commons/numbers/fraction/CommonTestCases.java']","Merge branch 'NUMBERS-129__heinrich'

Closes #64.",
af75e48e234d66bcd5e9f66f092d119c79345b21,,,1,['commons-numbers-fraction/src/main/java/org/apache/commons/numbers/fraction/Fraction.java'],Merge branch 'master' into NUMBERS-129__heinrich,
dd229ecf627cf1ca57e8492e61ba4980d7c392a6,,,1,['commons-numbers-fraction/src/main/java/org/apache/commons/numbers/fraction/Fraction.java'],Javadoc and formatting.,
510e23218f51e4391827b8121ba7c4c0cc9c52f9,,,2,"['commons-numbers-fraction/src/main/java/org/apache/commons/numbers/fraction/Fraction.java', 'commons-numbers-fraction/src/test/java/org/apache/commons/numbers/fraction/CommonTestCases.java']","NUMBERS-129: Use long instead of int for intermediate results in Fraction.addSub(Fraction, boolean)",NUMBERS-129
e44b91e461c730873c4e4e7c4e4c3dc84c73ec53,,,1,['commons-numbers-fraction/src/main/java/org/apache/commons/numbers/fraction/Fraction.java'],Formatting.,
14b3591b914d21bfd7bc8f948c3ad783789adf81,,,2,"['commons-numbers-fraction/src/main/java/org/apache/commons/numbers/fraction/BigFraction.java', 'commons-numbers-fraction/src/main/java/org/apache/commons/numbers/fraction/Fraction.java']",Convention for serial version identifier: Use date of last incompatible change.,
f8e93c2e8b04b10cb76136746e828a2dfe2f4c36,,,2,"['commons-numbers-fraction/src/main/java/org/apache/commons/numbers/fraction/Fraction.java', 'commons-numbers-fraction/src/test/java/org/apache/commons/numbers/fraction/CommonTestCases.java']","Merge branch 'NUMBERS-127__heinrich'

Closes #62.",
ac1b27356853d98acfab98db2b9f535325adacf8,,,2,"['commons-numbers-fraction/src/main/java/org/apache/commons/numbers/fraction/Fraction.java', 'commons-numbers-fraction/src/test/java/org/apache/commons/numbers/fraction/CommonTestCases.java']","NUMBERS-127: Fraction(int, int): Negate numerator and denominator only after reduction to lowest terms",NUMBERS-127
a556dd78eb978045f064ba57fec6545c3f62de93,,,3,"['commons-numbers-fraction/src/main/java/org/apache/commons/numbers/fraction/BigFraction.java', 'commons-numbers-fraction/src/main/java/org/apache/commons/numbers/fraction/Fraction.java', 'commons-numbers-fraction/src/test/java/org/apache/commons/numbers/fraction/FractionTest.java']","Merge branch 'NUMBERS-125__heinrich'

Closes #61.",
8d42ef4ca161546b6e71f8d0e7340b3412c4edb8,,,1,['commons-numbers-fraction/src/main/java/org/apache/commons/numbers/fraction/Fraction.java'],Formatting.,
3fd195422205fd454c1e644f40c96c45e7a4ed9c,,,1,['commons-numbers-fraction/src/main/java/org/apache/commons/numbers/fraction/BigFraction.java'],NUMBERS-125: Clarify numerator Javadoc,NUMBERS-125
fbe05a1b79fb9b872666678d8d455cd1be7a0232,,,1,['commons-numbers-fraction/src/main/java/org/apache/commons/numbers/fraction/BigFraction.java'],NUMBERS-125: Delete BigFraction.reduce(),NUMBERS-125
4858d9bfdb617412ae6fba99bf551cb36db2757d,,,2,"['commons-numbers-fraction/src/main/java/org/apache/commons/numbers/fraction/Fraction.java', 'commons-numbers-fraction/src/test/java/org/apache/commons/numbers/fraction/FractionTest.java']","NUMBERS-125: Delete Fraction.getReducedFraction(int, int)",NUMBERS-125
39c83ad03e4cfb4c8d4cf5e855e14eb1c6a62667,,,1,['commons-numbers-fraction/src/main/java/org/apache/commons/numbers/fraction/BigFraction.java'],NUMBERS-123: Javadoc,NUMBERS-123
a796401f4a695738ed72512dd2a3920c71d7bb23,,,1,['commons-numbers-fraction/src/main/java/org/apache/commons/numbers/fraction/BigFraction.java'],Javadoc.,
efc9ec3705ece9a295744dfd2be927b211768d67,,,1,['commons-numbers-fraction/src/main/java/org/apache/commons/numbers/fraction/BigFraction.java'],NUMBERS-124: Constructor was actually a conversion method.,NUMBERS-124
29f0745308fae2eb557565b6e1ee20b79b795a73,,,1,['commons-numbers-fraction/src/main/java/org/apache/commons/numbers/fraction/BigFraction.java'],NUMBERS-123: Move code from constructor to conversion method.,NUMBERS-123
a24f63878db7be901372dbfb026ab16b4f97ab2e,,,3,"['commons-numbers-fraction/src/main/java/org/apache/commons/numbers/fraction/BigFraction.java', 'commons-numbers-fraction/src/main/java/org/apache/commons/numbers/fraction/FractionException.java', 'commons-numbers-fraction/src/test/java/org/apache/commons/numbers/fraction/BigFractionTest.java']","Merge branch 'NUMBERS-119__heinrich'

Closes #56.",
3591266cf7574f121c8d4efef343923b34a8336c,,,1,['commons-numbers-fraction/src/main/java/org/apache/commons/numbers/fraction/FractionException.java'],Uppercase (error message).,
dad57d5eba8bfdec17214890123f9f1a5862bb1b,,,1,['commons-numbers-fraction/src/main/java/org/apache/commons/numbers/fraction/BigFraction.java'],NUMBERS-119: Slight refactoring.,NUMBERS-119
e96c11880a95376de925829fae9f7153940e8bd3,,,1,['commons-numbers-fraction/src/main/java/org/apache/commons/numbers/fraction/BigFraction.java'],"NUMBERS-119: Simplify assignment of local variable

The variable exponent is explicitly known to be zero at this point, because the conditional branch depends on this property, so no need to refer to the variable",NUMBERS-119
5e212186d510d61b7238df45ef551b736b669c9b,,,1,['commons-numbers-fraction/src/test/java/org/apache/commons/numbers/fraction/BigFractionTest.java'],NUMBERS-119: Improve relevant unit test to also check denominator,NUMBERS-119
57bef6afd3fcb5891904debf9884d271ad9d430a,,,1,['commons-numbers-fraction/src/main/java/org/apache/commons/numbers/fraction/BigFraction.java'],NUMBERS-119: Take care of special exponent bias with subnormal numbers,NUMBERS-119
b3890a0e5568f554cafff270b19c99dd932a4346,,,1,['commons-numbers-fraction/src/test/java/org/apache/commons/numbers/fraction/BigFractionTest.java'],"Merge branch 'NUMBERS-122__heinrich'

Closes #59.",
be7af9c7357f69ce46a59f80783d45e14ea471da,,,1,['commons-numbers-fraction/src/test/java/org/apache/commons/numbers/fraction/BigFractionTest.java'],"NUMBERS-122: Make assertFraction(long, long, BigFraction) compare the full numerator and denominator",NUMBERS-122
a10fded9668ef94d3d400acec2d3400dc2aa20e0,,,1,['commons-numbers-fraction/src/main/java/org/apache/commons/numbers/fraction/BigFraction.java'],"Merge branch 'NUMBERS-121__heinrich'

Closes #58.",
ada53f58bc6153e6f1ddc3b94beee30499a48d69,,,1,['commons-numbers-fraction/src/main/java/org/apache/commons/numbers/fraction/BigFraction.java'],NUMBERS-121: Replace usages of deprecated HTML tag <tt> with MathJax,NUMBERS-121
860adcdb865842f673ba5010ebcbfd501abcff8b,,,3,"['commons-numbers-fraction/src/test/java/org/apache/commons/numbers/fraction/BigFractionTest.java', 'commons-numbers-fraction/src/test/java/org/apache/commons/numbers/fraction/CommonTestCases.java', 'commons-numbers-fraction/src/test/java/org/apache/commons/numbers/fraction/FractionTest.java']","Merge branch 'NUMBERS-118__heinrich'

Closes #55.",
625361b58b878aec5cddc2e23b2435ddc633854a,,,1,['commons-numbers-fraction/src/test/java/org/apache/commons/numbers/fraction/CommonTestCases.java'],NUMBERS-118: Format Javadoc and update comment not relevant for BigFraction,NUMBERS-118
c45802dc9c202c50e014e64522e98e5dbba08e23,,,3,"['commons-numbers-fraction/src/test/java/org/apache/commons/numbers/fraction/BigFractionTest.java', 'commons-numbers-fraction/src/test/java/org/apache/commons/numbers/fraction/CommonTestCases.java', 'commons-numbers-fraction/src/test/java/org/apache/commons/numbers/fraction/FractionTest.java']",NUMBERS-118: Extract common subtract-fraction test cases,NUMBERS-118
2e41297bccccf685e84e56783afeab11e59a114b,,,3,"['commons-numbers-fraction/src/test/java/org/apache/commons/numbers/fraction/BigFractionTest.java', 'commons-numbers-fraction/src/test/java/org/apache/commons/numbers/fraction/CommonTestCases.java', 'commons-numbers-fraction/src/test/java/org/apache/commons/numbers/fraction/FractionTest.java']",NUMBERS-118: Extract common multiply-by-fraction test cases,NUMBERS-118
7427fd0639557f25a2d7274597be70882527ffd0,,,3,"['commons-numbers-fraction/src/test/java/org/apache/commons/numbers/fraction/BigFractionTest.java', 'commons-numbers-fraction/src/test/java/org/apache/commons/numbers/fraction/CommonTestCases.java', 'commons-numbers-fraction/src/test/java/org/apache/commons/numbers/fraction/FractionTest.java']",NUMBERS-118: Extract common divide-by-fraction test cases,NUMBERS-118
19ef2b25df3ef263159df7203df6ef32c190a400,,,3,"['commons-numbers-fraction/src/test/java/org/apache/commons/numbers/fraction/BigFractionTest.java', 'commons-numbers-fraction/src/test/java/org/apache/commons/numbers/fraction/CommonTestCases.java', 'commons-numbers-fraction/src/test/java/org/apache/commons/numbers/fraction/FractionTest.java']","NUMBERS-118: Extract one more common add-fraction test case

In the process, remove a duplicate test case in FractionTest",NUMBERS-118
2d5783cb8a911fca8e886be57e74536e50eaf95c,,,3,"['commons-numbers-fraction/src/test/java/org/apache/commons/numbers/fraction/BigFractionTest.java', 'commons-numbers-fraction/src/test/java/org/apache/commons/numbers/fraction/CommonTestCases.java', 'commons-numbers-fraction/src/test/java/org/apache/commons/numbers/fraction/FractionTest.java']",NUMBERS-118: Extract common add-fraction test cases,NUMBERS-118
f15ac5b1906a4fe3c76d94986538d8916cb9cb5f,,,1,['commons-numbers-fraction/src/test/java/org/apache/commons/numbers/fraction/CommonTestCases.java'],NUMBERS-118: Make class CommonTestCases package-private and correct Javadoc mistake,NUMBERS-118
27a4aa18af2f5c27e82a2e93a8f67d4ea35f5162,,,3,"['commons-numbers-fraction/src/test/java/org/apache/commons/numbers/fraction/BigFractionTest.java', 'commons-numbers-fraction/src/test/java/org/apache/commons/numbers/fraction/CommonTestCases.java', 'commons-numbers-fraction/src/test/java/org/apache/commons/numbers/fraction/FractionTest.java']",NUMBERS-118: Extract common negate test cases,NUMBERS-118
9f6615301679650cb0ec23a1549c0ea7dc8f6e87,,,3,"['commons-numbers-fraction/src/test/java/org/apache/commons/numbers/fraction/BigFractionTest.java', 'commons-numbers-fraction/src/test/java/org/apache/commons/numbers/fraction/CommonTestCases.java', 'commons-numbers-fraction/src/test/java/org/apache/commons/numbers/fraction/FractionTest.java']",NUMBERS-118: Extract common reciprocal test cases and clarify Javadoc,NUMBERS-118
8b2ab21d8bc4e08ae6291339418487d9424da88f,,,3,"['commons-numbers-fraction/src/test/java/org/apache/commons/numbers/fraction/BigFractionTest.java', 'commons-numbers-fraction/src/test/java/org/apache/commons/numbers/fraction/CommonTestCases.java', 'commons-numbers-fraction/src/test/java/org/apache/commons/numbers/fraction/FractionTest.java']",NUMBERS-118: Extract common abs test cases and add some overall Javadoc,NUMBERS-118
12a73b0eebd7ddade7e2370a40e219d8d9d0dca0,,,3,"['commons-numbers-fraction/src/test/java/org/apache/commons/numbers/fraction/BigFractionTest.java', 'commons-numbers-fraction/src/test/java/org/apache/commons/numbers/fraction/CommonTestCases.java', 'commons-numbers-fraction/src/test/java/org/apache/commons/numbers/fraction/FractionTest.java']",NUMBERS-118: Collect stray test cases for double constructor,NUMBERS-118
b7d3c7f7c428bcdfc68273e3eff0e17de15bdef3,,,1,['commons-numbers-fraction/src/test/java/org/apache/commons/numbers/fraction/CommonTestCases.java'],NUMBERS-118: Organize population of test case lists into methods,NUMBERS-118
86f4b8946109d75b243443f1117203fa87d9c020,,,3,"['commons-numbers-fraction/src/test/java/org/apache/commons/numbers/fraction/BigFractionTest.java', 'commons-numbers-fraction/src/test/java/org/apache/commons/numbers/fraction/CommonTestCases.java', 'commons-numbers-fraction/src/test/java/org/apache/commons/numbers/fraction/FractionTest.java']",NUMBERS-118: Generalize test case types,NUMBERS-118
55e1ab819ad098b4b26ae750db498f3e2ec0820e,,,3,"['commons-numbers-fraction/src/test/java/org/apache/commons/numbers/fraction/BigFractionTest.java', 'commons-numbers-fraction/src/test/java/org/apache/commons/numbers/fraction/CommonTestCases.java', 'commons-numbers-fraction/src/test/java/org/apache/commons/numbers/fraction/FractionTest.java']",NUMBERS-118: Extract common num-den-constructor and double-constructor test cases,NUMBERS-118
7b36cbf23bf5c9cfa9ad29832ae57b99093a55ac,,,5,"['commons-numbers-combinatorics/src/main/java/org/apache/commons/numbers/combinatorics/BinomialCoefficient.java', 'commons-numbers-combinatorics/src/test/java/org/apache/commons/numbers/combinatorics/BinomialCoefficientTest.java', 'commons-numbers-core/src/main/java/org/apache/commons/numbers/core/ArithmeticUtils.java', 'commons-numbers-core/src/test/java/org/apache/commons/numbers/core/ArithmeticUtilsTest.java', 'commons-numbers-fraction/src/main/java/org/apache/commons/numbers/fraction/Fraction.java']","Merge branch 'NUMBERS-116__heinrich'

Closes #52.",
1512d65dfa987b34e31582ba4b6ce52cdbcc3b7a,,,4,"['commons-numbers-combinatorics/src/main/java/org/apache/commons/numbers/combinatorics/BinomialCoefficient.java', 'commons-numbers-core/src/main/java/org/apache/commons/numbers/core/ArithmeticUtils.java', 'commons-numbers-core/src/test/java/org/apache/commons/numbers/core/ArithmeticUtilsTest.java', 'commons-numbers-fraction/src/main/java/org/apache/commons/numbers/fraction/Fraction.java']",NUMBERS-116: Remove mulAndCheck methods,NUMBERS-116
7fd2bfe11f396bb761b20e2153b46c5cc189d521,,,3,"['commons-numbers-core/src/main/java/org/apache/commons/numbers/core/ArithmeticUtils.java', 'commons-numbers-core/src/test/java/org/apache/commons/numbers/core/ArithmeticUtilsTest.java', 'commons-numbers-fraction/src/main/java/org/apache/commons/numbers/fraction/Fraction.java']",NUMBERS-116: Remove subAndCheck methods,NUMBERS-116
5c9d177a09f16d35d8db3b39b82c4bc577f853f3,,,4,"['commons-numbers-combinatorics/src/test/java/org/apache/commons/numbers/combinatorics/BinomialCoefficientTest.java', 'commons-numbers-core/src/main/java/org/apache/commons/numbers/core/ArithmeticUtils.java', 'commons-numbers-core/src/test/java/org/apache/commons/numbers/core/ArithmeticUtilsTest.java', 'commons-numbers-fraction/src/main/java/org/apache/commons/numbers/fraction/Fraction.java']",NUMBERS-116: Remove addAndCheck methods,NUMBERS-116
b1daf7ba9b474c2bc480c006cca1816fa401d1a1,,,1,['commons-numbers-fraction/src/test/java/org/apache/commons/numbers/fraction/FractionTest.java'],"Merge branch 'NUMBERS-100__heinrich'

Closes #54.",
8359d0af38ae1384e1c7276c82389f2106e0333f,,,1,['commons-numbers-fraction/src/test/java/org/apache/commons/numbers/fraction/FractionTest.java'],NUMBERS-100: class FractionTest: replace try-catch with assertThrows where appropriate,NUMBERS-100
44cdefe8ca22cc3151e32eb956324ed535f5a2e7,,,5,"['commons-numbers-complex-streams/src/test/java/org/apache/commons/numbers/complex/streams/ComplexUtilsTest.java', 'commons-numbers-complex-streams/src/test/java/org/apache/commons/numbers/complex/streams/TestUtils.java', 'commons-numbers-complex/src/test/java/org/apache/commons/numbers/complex/TestUtils.java', 'commons-numbers-core/src/test/java/org/apache/commons/numbers/core/PrecisionTest.java', 'commons-numbers-core/src/test/java/org/apache/commons/numbers/core/TestUtils.java']","Merge branch 'NUMBERS-117__heinrich'

Closes #53.",
18135b9d149de8b81d8f81a5586864f586b1f501,,,1,['commons-numbers-complex/src/test/java/org/apache/commons/numbers/complex/TestUtils.java'],"NUMBERS-117: Remove redundant methods in org.apache.commons.numbers.complex.TestUtils

Remove the following methods:

assertEquals(double, double, double)
assertEquals(String, double, double, double)
assertSame(double, double)
assertEquals(double[], double[], double)
assertEquals(String, double[], double[], double)
assertEquals(String, float[], float[], float)
equalsIncludingNaN(double, double, double)

Remove the following private method that became unused after the removal of the above methods:

equalsIncludingNaN(double, double)",NUMBERS-117
19c13db6bd1b5ca7ddcf6e5a86252bae5c30ec08,,,2,"['commons-numbers-complex-streams/src/test/java/org/apache/commons/numbers/complex/streams/ComplexUtilsTest.java', 'commons-numbers-complex-streams/src/test/java/org/apache/commons/numbers/complex/streams/TestUtils.java']","NUMBERS-117: Remove redundant methods in org.apache.commons.numbers.complex.streams.TestUtils

Remove the following methods:

assertEquals(double, double, double)
assertEquals(String, double, double, double)
assertSame(double[], double[])
assertSame(float[], float[])
assertSame(double, double)
assertEquals(String, double[], double[], double)
assertEquals(String, float[], float[], float)
equalsIncludingNaN(double, double, double)

Remove the following private method that became unused after the removal of the above methods:

equalsIncludingNaN(double, double)",NUMBERS-117
0c90ec596064c0c25f23cd351006ad0d22647887,,,2,"['commons-numbers-core/src/test/java/org/apache/commons/numbers/core/PrecisionTest.java', 'commons-numbers-core/src/test/java/org/apache/commons/numbers/core/TestUtils.java']","NUMBERS-117: Remove redundant methods in org.apache.commons.numbers.core.TestUtils

Remove the following methods:

assertEquals(double, double, double)
assertEquals(String, double, double, double)
assertSame(double, double)
assertEquals(double[], double[], double)
assertEquals(String, double[], double[], double)
assertEquals(String, float[], float[], float)

Remove the following private methods that became unused after the removal of the above methods:

equalsIncludingNaN(double, double, double)
equalsIncludingNaN(double, double)",NUMBERS-117
5d6e5414cb0a44719e1bb6de4a8b03cb2686eb59,,,1,['pom.xml'],"Merge branch 'NUMBERS-115__heinrich'

Closes #51.",
f36f1650b20fa4d0e9da8c6aaeaf88c056d9f9d4,,,1,['pom.xml'],"NUMBERS-115: Remove obsolete JUnit 4 dependencies

Remove the following dependencies:

org.junit.platform:junit-platform-runner
org.junit.vintage:junit-vintage-engine",NUMBERS-115
c3586cf3df16b08c0b1fbd0e3275d07ae3eb3a8d,,,50,"['commons-numbers-angle/src/test/java/org/apache/commons/numbers/angle/PlaneAngleRadiansTest.java', 'commons-numbers-angle/src/test/java/org/apache/commons/numbers/angle/PlaneAngleTest.java', 'commons-numbers-arrays/src/test/java/org/apache/commons/numbers/arrays/CosAngleTest.java', 'commons-numbers-arrays/src/test/java/org/apache/commons/numbers/arrays/LinearCombinationTest.java', 'commons-numbers-arrays/src/test/java/org/apache/commons/numbers/arrays/SafeNormTest.java', 'commons-numbers-combinatorics/src/test/java/org/apache/commons/numbers/combinatorics/BinomialCoefficientDoubleTest.java', 'commons-numbers-combinatorics/src/test/java/org/apache/commons/numbers/combinatorics/BinomialCoefficientTest.java', 'commons-numbers-combinatorics/src/test/java/org/apache/commons/numbers/combinatorics/CombinationsTest.java', 'commons-numbers-combinatorics/src/test/java/org/apache/commons/numbers/combinatorics/FactorialDoubleTest.java', 'commons-numbers-combinatorics/src/test/java/org/apache/commons/numbers/combinatorics/FactorialTest.java', 'commons-numbers-combinatorics/src/test/java/org/apache/commons/numbers/combinatorics/LogBinomialCoefficientTest.java', 'commons-numbers-combinatorics/src/test/java/org/apache/commons/numbers/combinatorics/LogFactorialTest.java', 'commons-numbers-complex-streams/src/test/java/org/apache/commons/numbers/complex/streams/ComplexUtilsTest.java', 'commons-numbers-complex-streams/src/test/java/org/apache/commons/numbers/complex/streams/TestUtils.java', 'commons-numbers-complex/src/test/java/org/apache/commons/numbers/complex/CStandardTest.java', 'commons-numbers-complex/src/test/java/org/apache/commons/numbers/complex/ComplexTest.java', 'commons-numbers-complex/src/test/java/org/apache/commons/numbers/complex/TestUtils.java', 'commons-numbers-core/src/test/java/org/apache/commons/numbers/core/ArithmeticUtilsTest.java', 'commons-numbers-core/src/test/java/org/apache/commons/numbers/core/PrecisionTest.java', 'commons-numbers-core/src/test/java/org/apache/commons/numbers/core/TestUtils.java', 'commons-numbers-field/src/test/java/org/apache/commons/numbers/field/FieldParametricTest.java', 'commons-numbers-field/src/test/java/org/apache/commons/numbers/field/FieldTestData.java', 'commons-numbers-field/src/test/java/org/apache/commons/numbers/field/FieldsList.java', 'commons-numbers-fraction/src/main/java/org/apache/commons/numbers/fraction/BigFraction.java', 'commons-numbers-fraction/src/main/java/org/apache/commons/numbers/fraction/Fraction.java', 'commons-numbers-fraction/src/test/java/org/apache/commons/numbers/fraction/BigFractionTest.java', 'commons-numbers-fraction/src/test/java/org/apache/commons/numbers/fraction/ContinuedFractionTest.java', 'commons-numbers-fraction/src/test/java/org/apache/commons/numbers/fraction/FractionTest.java', 'commons-numbers-gamma/src/test/java/org/apache/commons/numbers/gamma/DigammaTest.java', 'commons-numbers-gamma/src/test/java/org/apache/commons/numbers/gamma/ErfDifferenceTest.java', 'commons-numbers-gamma/src/test/java/org/apache/commons/numbers/gamma/ErfTest.java', 'commons-numbers-gamma/src/test/java/org/apache/commons/numbers/gamma/ErfcTest.java', 'commons-numbers-gamma/src/test/java/org/apache/commons/numbers/gamma/GammaTest.java', 'commons-numbers-gamma/src/test/java/org/apache/commons/numbers/gamma/InvGamma1pm1Test.java', 'commons-numbers-gamma/src/test/java/org/apache/commons/numbers/gamma/InverseErfTest.java', 'commons-numbers-gamma/src/test/java/org/apache/commons/numbers/gamma/InverseErfcTest.java', 'commons-numbers-gamma/src/test/java/org/apache/commons/numbers/gamma/LanczosApproximationTest.java', 'commons-numbers-gamma/src/test/java/org/apache/commons/numbers/gamma/LogBetaTest.java', 'commons-numbers-gamma/src/test/java/org/apache/commons/numbers/gamma/LogGamma1pTest.java', 'commons-numbers-gamma/src/test/java/org/apache/commons/numbers/gamma/LogGammaSumTest.java', 'commons-numbers-gamma/src/test/java/org/apache/commons/numbers/gamma/LogGammaTest.java', 'commons-numbers-gamma/src/test/java/org/apache/commons/numbers/gamma/RegularizedBetaTest.java', 'commons-numbers-gamma/src/test/java/org/apache/commons/numbers/gamma/RegularizedGammaTest.java', 'commons-numbers-gamma/src/test/java/org/apache/commons/numbers/gamma/TrigammaTest.java', 'commons-numbers-primes/src/test/java/org/apache/commons/numbers/primes/PrimesTest.java', 'commons-numbers-primes/src/test/java/org/apache/commons/numbers/primes/SmallPrimesTest.java', 'commons-numbers-quaternion/src/test/java/org/apache/commons/numbers/quaternion/QuaternionTest.java', 'commons-numbers-quaternion/src/test/java/org/apache/commons/numbers/quaternion/SlerpTest.java', 'commons-numbers-rootfinder/src/test/java/org/apache/commons/numbers/rootfinder/BrentSolverTest.java', 'pom.xml']","Merge branch 'NUMBERS-115__heinrich'

Completes issue NUMBERS-115.

Closes #48.",
b1a114f406e90b2432b6e925cfcc2497477ce339,,,3,"['commons-numbers-field/src/test/java/org/apache/commons/numbers/field/FieldParametricTest.java', 'commons-numbers-field/src/test/java/org/apache/commons/numbers/field/FieldTestData.java', 'commons-numbers-field/src/test/java/org/apache/commons/numbers/field/FieldsList.java']","Add Generics in test classes of commons-numbers-field

Improve type safety by imposing equality constraints with type parameters",
fe63782a789e31f2ffb5f93c5696a009f138a85a,,,1,['commons-numbers-angle/src/test/java/org/apache/commons/numbers/angle/PlaneAngleTest.java'],Revert inappropriate replacement of assertFalse with assertNotEquals,
af0d00f2c8eb67361c90b34cae88e7c832397dfb,,,3,"['commons-numbers-combinatorics/src/test/java/org/apache/commons/numbers/combinatorics/FactorialDoubleTest.java', 'commons-numbers-combinatorics/src/test/java/org/apache/commons/numbers/combinatorics/FactorialTest.java', 'commons-numbers-combinatorics/src/test/java/org/apache/commons/numbers/combinatorics/LogBinomialCoefficientTest.java']",Remove unnecessary parentheses in Test annotations,
4fd2f595dcfa188e23ea52cdcee3f8b44a181bc5,,,12,"['commons-numbers-angle/src/test/java/org/apache/commons/numbers/angle/PlaneAngleRadiansTest.java', 'commons-numbers-angle/src/test/java/org/apache/commons/numbers/angle/PlaneAngleTest.java', 'commons-numbers-arrays/src/test/java/org/apache/commons/numbers/arrays/CosAngleTest.java', 'commons-numbers-arrays/src/test/java/org/apache/commons/numbers/arrays/LinearCombinationTest.java', 'commons-numbers-arrays/src/test/java/org/apache/commons/numbers/arrays/SafeNormTest.java', 'commons-numbers-combinatorics/src/test/java/org/apache/commons/numbers/combinatorics/FactorialDoubleTest.java', 'commons-numbers-combinatorics/src/test/java/org/apache/commons/numbers/combinatorics/FactorialTest.java', 'commons-numbers-combinatorics/src/test/java/org/apache/commons/numbers/combinatorics/LogBinomialCoefficientTest.java', 'commons-numbers-combinatorics/src/test/java/org/apache/commons/numbers/combinatorics/LogFactorialTest.java', 'commons-numbers-field/src/test/java/org/apache/commons/numbers/field/FieldParametricTest.java', 'commons-numbers-fraction/src/test/java/org/apache/commons/numbers/fraction/BigFractionTest.java', 'commons-numbers-fraction/src/test/java/org/apache/commons/numbers/fraction/ContinuedFractionTest.java']",Remove unused JUnit 4 imports,
44461dd6b4c0fbf7c38d80b40399b8b5b2ac1c4c,,,1,['commons-numbers-fraction/src/test/java/org/apache/commons/numbers/fraction/FractionTest.java'],Migrate commons-numbers-fraction to JUnit 5: class FractionTest,
9aa77a9492d6acb1d655d4b73b2390b9290716db,,,1,['commons-numbers-fraction/src/test/java/org/apache/commons/numbers/fraction/FractionTest.java'],"Merge branch 'master' into eax/simple-migrate-map

# Conflicts:
#	commons-numbers-fraction/src/test/java/org/apache/commons/numbers/fraction/FractionTest.java",
934be57412ff6ab9fd67f0eeeddba49895afff06,,,1,['commons-numbers-fraction/src/test/java/org/apache/commons/numbers/fraction/FractionTest.java'],"Merge branch 'NUMBERS-100__heinrich'

Closes #36.",
e12bf62531bb1edb7c2d8fcd5c85cab486c631ca,,,2,"['commons-numbers-core/src/test/java/org/apache/commons/numbers/core/ArithmeticUtilsTest.java', 'commons-numbers-primes/src/test/java/org/apache/commons/numbers/primes/SmallPrimesTest.java']",Correct parameter order in assertEquals,
c76f3e73400d53b41f248c28219afd59717c9cbe,,,3,"['commons-numbers-complex/src/test/java/org/apache/commons/numbers/complex/ComplexTest.java', 'commons-numbers-fraction/src/test/java/org/apache/commons/numbers/fraction/BigFractionTest.java', 'commons-numbers-quaternion/src/test/java/org/apache/commons/numbers/quaternion/QuaternionTest.java']","Replace assertNotEquals with assertFalse where necessary

Don't make assumptions about which parameter's equals(Object) method is called in assertNotEquals(Object, Object)",
b888cbc6e25a519f90bd8c2ef1de99bc06029bf9,grimreaper,grimreaper,1,['commons-numbers-combinatorics/src/test/java/org/apache/commons/numbers/combinatorics/FactorialDoubleTest.java'],Assert does not throw,
74c8a9c753fc531c96eb6a9263adc4e3aa9aef96,grimreaper,grimreaper,4,"['commons-numbers-angle/src/test/java/org/apache/commons/numbers/angle/PlaneAngleTest.java', 'commons-numbers-fraction/src/main/java/org/apache/commons/numbers/fraction/Fraction.java', 'commons-numbers-quaternion/src/test/java/org/apache/commons/numbers/quaternion/QuaternionTest.java', 'commons-numbers-rootfinder/src/test/java/org/apache/commons/numbers/rootfinder/BrentSolverTest.java']",One more step,
bf6de4fc369986130ac6f77d3d3c41dfe39a23cc,grimreaper,grimreaper,2,"['commons-numbers-fraction/src/test/java/org/apache/commons/numbers/fraction/BigFractionTest.java', 'commons-numbers-fraction/src/test/java/org/apache/commons/numbers/fraction/FractionTest.java']",Fix stragglers,
d6b008c96bc3e999cdbdfdde00389be47ef2fe87,grimreaper,grimreaper,12,"['commons-numbers-angle/src/test/java/org/apache/commons/numbers/angle/PlaneAngleRadiansTest.java', 'commons-numbers-angle/src/test/java/org/apache/commons/numbers/angle/PlaneAngleTest.java', 'commons-numbers-arrays/src/test/java/org/apache/commons/numbers/arrays/CosAngleTest.java', 'commons-numbers-arrays/src/test/java/org/apache/commons/numbers/arrays/LinearCombinationTest.java', 'commons-numbers-arrays/src/test/java/org/apache/commons/numbers/arrays/SafeNormTest.java', 'commons-numbers-combinatorics/src/test/java/org/apache/commons/numbers/combinatorics/FactorialDoubleTest.java', 'commons-numbers-combinatorics/src/test/java/org/apache/commons/numbers/combinatorics/FactorialTest.java', 'commons-numbers-combinatorics/src/test/java/org/apache/commons/numbers/combinatorics/LogBinomialCoefficientTest.java', 'commons-numbers-combinatorics/src/test/java/org/apache/commons/numbers/combinatorics/LogFactorialTest.java', 'commons-numbers-fraction/src/test/java/org/apache/commons/numbers/fraction/BigFractionTest.java', 'commons-numbers-fraction/src/test/java/org/apache/commons/numbers/fraction/ContinuedFractionTest.java', 'commons-numbers-fraction/src/test/java/org/apache/commons/numbers/fraction/FractionTest.java']",use JUnit 5 assertions,
de949a139839afd9be005c4fcbba47d323dea7ac,grimreaper,grimreaper,9,"['commons-numbers-angle/src/test/java/org/apache/commons/numbers/angle/PlaneAngleTest.java', 'commons-numbers-combinatorics/src/test/java/org/apache/commons/numbers/combinatorics/CombinationsTest.java', 'commons-numbers-complex/src/test/java/org/apache/commons/numbers/complex/ComplexTest.java', 'commons-numbers-core/src/test/java/org/apache/commons/numbers/core/ArithmeticUtilsTest.java', 'commons-numbers-core/src/test/java/org/apache/commons/numbers/core/PrecisionTest.java', 'commons-numbers-fraction/src/test/java/org/apache/commons/numbers/fraction/BigFractionTest.java', 'commons-numbers-fraction/src/test/java/org/apache/commons/numbers/fraction/FractionTest.java', 'commons-numbers-quaternion/src/test/java/org/apache/commons/numbers/quaternion/QuaternionTest.java', 'commons-numbers-rootfinder/src/test/java/org/apache/commons/numbers/rootfinder/BrentSolverTest.java']",Simplify junit,
e8a071ee1f664e3b855c734e528d1dcda25472ee,grimreaper,grimreaper,7,"['commons-numbers-combinatorics/src/test/java/org/apache/commons/numbers/combinatorics/BinomialCoefficientTest.java', 'commons-numbers-combinatorics/src/test/java/org/apache/commons/numbers/combinatorics/LogBinomialCoefficientTest.java', 'commons-numbers-complex/src/test/java/org/apache/commons/numbers/complex/ComplexTest.java', 'commons-numbers-fraction/src/test/java/org/apache/commons/numbers/fraction/BigFractionTest.java', 'commons-numbers-fraction/src/test/java/org/apache/commons/numbers/fraction/FractionTest.java', 'commons-numbers-primes/src/test/java/org/apache/commons/numbers/primes/SmallPrimesTest.java', 'commons-numbers-rootfinder/src/test/java/org/apache/commons/numbers/rootfinder/BrentSolverTest.java']",Order of arguments,
6ee85788f7c2e8eaf38dc4c5ed4d17e1590351a6,grimreaper,grimreaper,1,['commons-numbers-rootfinder/src/test/java/org/apache/commons/numbers/rootfinder/BrentSolverTest.java'],BrentSolverTest: do JUnit 5,
f5837b75a81704ed32262eb94e57407d73cee210,,,3,"['commons-numbers-combinatorics/src/test/java/org/apache/commons/numbers/combinatorics/BinomialCoefficientDoubleTest.java', 'commons-numbers-combinatorics/src/test/java/org/apache/commons/numbers/combinatorics/BinomialCoefficientTest.java', 'commons-numbers-combinatorics/src/test/java/org/apache/commons/numbers/combinatorics/CombinationsTest.java']","Migrate commons-numbers-combinatorics to JUnit 5: 3 classes

Migrate the following classes:

BinomialCoefficientDoubleTest
BinomialCoefficientTest
CombinationsTest",
e83a7adbf88ea6fd7b910b82a76493831d3c8762,,,1,['commons-numbers-fraction/src/test/java/org/apache/commons/numbers/fraction/FractionTest.java'],"NUMBERS-100: Make use of assertFraction(int, int, Fraction)

Use the helper method assertFraction(int, int, Fraction) in the class org.apache.commons.numbers.fraction.FractionTest where appropriate so as to reduce code duplication.",NUMBERS-100
22d9b339f0ab039d5e2beb2db4acd773afffa37e,,,1,['commons-numbers-fraction/src/test/java/org/apache/commons/numbers/fraction/FractionTest.java'],"NUMBERS-100: Reduce scope of local variables

Several methods in the class org.apache.commons.numbers.fraction.FractionTest contain a number of tests that use shared local variables but are completely independent of each other because these local variables get assigned new values at the beginning of a test. Instead of using the same local variable throughout the method, the scope of these local variables is now reduced only to the test for which they are relevant.",NUMBERS-100
c23a3c5b54d23c911563e8e5e0d068d6bc1953af,,,1,['commons-numbers-fraction/src/test/java/org/apache/commons/numbers/fraction/FractionTest.java'],"NUMBERS-100: Swap parameters in Assert.assertEquals(long, long) invocation

Swap parameters in an invocation of Assert.assertEquals(long, long) from the method org.apache.commons.numbers.fraction.FractionTest.testGetReducedFraction(). The first parameter should be the expected value, the second parameter the actual value.",NUMBERS-100
7c1f0fd5c4f145ca9ae13c3ec0505988785b57d2,,,1,['commons-numbers-fraction/src/test/java/org/apache/commons/numbers/fraction/FractionTest.java'],"NUMBERS-100: Correct presumable typo

Correct a presumable typo in the method org.apache.commons.numbers.fraction.FractionTest.testPow() (the expected results are the same for a and b, so the test should pass in both cases, but the case of a has already been tested)",NUMBERS-100
3e6277cb9c077a0ed0ac54fea84fb1219c3c4ae1,,,1,['commons-numbers-fraction/src/test/java/org/apache/commons/numbers/fraction/FractionTest.java'],"NUMBERS-100: Remove duplicate test

Remove a duplicate test in the method org.apache.commons.numbers.fraction.FractionTest.testAdd()",NUMBERS-100
296dd8df443c8aca8118203b4acad8b9f384fd46,,,3,"['commons-numbers-complex/src/test/java/org/apache/commons/numbers/complex/CStandardTest.java', 'commons-numbers-complex/src/test/java/org/apache/commons/numbers/complex/ComplexTest.java', 'commons-numbers-complex/src/test/java/org/apache/commons/numbers/complex/TestUtils.java']","Migrate commons-numbers-complex to JUnit 5

Migrate the following classes:

ComplexTest
CStandardTest
TestUtils",
4718fc226064c90e4abcc7713635a588130e291b,,,1,['commons-numbers-complex-streams/src/test/java/org/apache/commons/numbers/complex/streams/ComplexUtilsTest.java'],Remove unneeded parentheses in class ComplexUtilsTest,
773f4d7975d99bd230c0338c9d84b0d18e293886,,,2,"['commons-numbers-complex-streams/src/test/java/org/apache/commons/numbers/complex/streams/ComplexUtilsTest.java', 'commons-numbers-complex-streams/src/test/java/org/apache/commons/numbers/complex/streams/TestUtils.java']","Migrate commons-numbers-complex-streams to JUnit 5

Migrate the following classes:

ComplexUtilsTest
TestUtils",
fe4d700c02f7560a6940740f8cad4ec09efb5f83,grimreaper,grimreaper,1,['pom.xml'],Add the dep,
a11713ee1cb3c0a6bc59d18b65f6d05c1866b8fe,grimreaper,grimreaper,3,"['commons-numbers-core/src/test/java/org/apache/commons/numbers/core/ArithmeticUtilsTest.java', 'commons-numbers-core/src/test/java/org/apache/commons/numbers/core/PrecisionTest.java', 'commons-numbers-core/src/test/java/org/apache/commons/numbers/core/TestUtils.java']",Merge branch 'eax/simple-migrate-map' of github.com:grimreaper/commons-numbers into eax/simple-migrate-map,
526d93ff6d0efe245e2f4d7ba73e553181469cf3,grimreaper,grimreaper,2,"['commons-numbers-field/src/test/java/org/apache/commons/numbers/field/FieldParametricTest.java', 'commons-numbers-field/src/test/java/org/apache/commons/numbers/field/FieldsList.java']",fix FieldParametricTest,
ab5d960ee0fd2f03bf516699793f687d7c309047,grimreaper,grimreaper,16,"['commons-numbers-fraction/src/main/java/org/apache/commons/numbers/fraction/BigFraction.java', 'commons-numbers-rootfinder/LICENSE.txt', 'commons-numbers-rootfinder/NOTICE.txt', 'commons-numbers-rootfinder/README.md', 'commons-numbers-rootfinder/pom.xml', 'commons-numbers-rootfinder/src/main/java/org/apache/commons/numbers/rootfinder/BrentSolver.java', 'commons-numbers-rootfinder/src/main/java/org/apache/commons/numbers/rootfinder/SolverException.java', 'commons-numbers-rootfinder/src/main/java/org/apache/commons/numbers/rootfinder/package-info.java', 'commons-numbers-rootfinder/src/site/resources/profile.jacoco', 'commons-numbers-rootfinder/src/site/site.xml', 'commons-numbers-rootfinder/src/site/xdoc/index.xml', 'commons-numbers-rootfinder/src/test/java/org/apache/commons/numbers/rootfinder/BrentSolverTest.java', 'commons-numbers-rootfinder/src/test/java/org/apache/commons/numbers/rootfinder/MonitoredFunction.java', 'commons-numbers-rootfinder/src/test/java/org/apache/commons/numbers/rootfinder/QuinticFunction.java', 'commons-numbers-rootfinder/src/test/java/org/apache/commons/numbers/rootfinder/Sin.java', 'pom.xml']",Merge branch 'master' of http://gitbox.apache.org/repos/asf/commons-numbers into eax/simple-migrate-map,
280563c00a118ceb6d7dcea87f6de6141d838a68,,,1,['commons-numbers-core/src/test/java/org/apache/commons/numbers/core/TestUtils.java'],Migrate commons-numbers-core to JUnit 5: class TestUtils (previously overlooked),
924314078a5b76587f766bf711f9efae795c3a15,,,1,['commons-numbers-rootfinder/pom.xml'],Typo in maven artefact identifier.,
d952ad52c5ed69377d4df3565d2c861c9992f150,,,2,"['commons-numbers-core/src/test/java/org/apache/commons/numbers/core/ArithmeticUtilsTest.java', 'commons-numbers-core/src/test/java/org/apache/commons/numbers/core/PrecisionTest.java']","Migrate commons-numbers-core to JUnit 5

Migrate the following classes:

ArithmeticUtilsTest
PrecisionTest",
557dd7c49ecc62a62a65f9974cb478860c92a4b5,,,1,['commons-numbers-rootfinder/src/main/java/org/apache/commons/numbers/rootfinder/BrentSolver.java'],Javadoc.,
8a16447e9fe5fd7b34cb5a6ca39d71bfc943c347,,,1,['commons-numbers-fraction/src/main/java/org/apache/commons/numbers/fraction/BigFraction.java'],Javadoc.,
d3ce7dbc90e72c2e6a00f063971cf48fca8a85fe,,,1,['commons-numbers-fraction/src/main/java/org/apache/commons/numbers/fraction/BigFraction.java'],Javadoc.,
46824d7542acec33034eb6c6869a3b7d854a7cfb,,,15,"['commons-numbers-rootfinder/LICENSE.txt', 'commons-numbers-rootfinder/NOTICE.txt', 'commons-numbers-rootfinder/README.md', 'commons-numbers-rootfinder/pom.xml', 'commons-numbers-rootfinder/src/main/java/org/apache/commons/numbers/rootfinder/BrentSolver.java', 'commons-numbers-rootfinder/src/main/java/org/apache/commons/numbers/rootfinder/SolverException.java', 'commons-numbers-rootfinder/src/main/java/org/apache/commons/numbers/rootfinder/package-info.java', 'commons-numbers-rootfinder/src/site/resources/profile.jacoco', 'commons-numbers-rootfinder/src/site/site.xml', 'commons-numbers-rootfinder/src/site/xdoc/index.xml', 'commons-numbers-rootfinder/src/test/java/org/apache/commons/numbers/rootfinder/BrentSolverTest.java', 'commons-numbers-rootfinder/src/test/java/org/apache/commons/numbers/rootfinder/MonitoredFunction.java', 'commons-numbers-rootfinder/src/test/java/org/apache/commons/numbers/rootfinder/QuinticFunction.java', 'commons-numbers-rootfinder/src/test/java/org/apache/commons/numbers/rootfinder/Sin.java', 'pom.xml']","Merge branch 'feature_root-solver'

Completes NUMBERS-112.",
487c86a06f7be120d6fd20652210a32049b08614,,,1,['commons-numbers-rootfinder/src/test/java/org/apache/commons/numbers/rootfinder/BrentSolverTest.java'],Trailing spaces.,
4bb21d5846c31f7706810de4aa205bb354f96e4f,,,1,['commons-numbers-rootfinder/src/site/xdoc/index.xml'],Trailing spaces.,
151ea6bbbd9ecbaf5948213adfda77977cae8400,,,15,"['commons-numbers-rootfinder/LICENSE.txt', 'commons-numbers-rootfinder/NOTICE.txt', 'commons-numbers-rootfinder/README.md', 'commons-numbers-rootfinder/pom.xml', 'commons-numbers-rootfinder/src/main/java/org/apache/commons/numbers/rootfinder/BrentSolver.java', 'commons-numbers-rootfinder/src/main/java/org/apache/commons/numbers/rootfinder/SolverException.java', 'commons-numbers-rootfinder/src/main/java/org/apache/commons/numbers/rootfinder/package-info.java', 'commons-numbers-rootfinder/src/site/resources/profile.jacoco', 'commons-numbers-rootfinder/src/site/site.xml', 'commons-numbers-rootfinder/src/site/xdoc/index.xml', 'commons-numbers-rootfinder/src/test/java/org/apache/commons/numbers/rootfinder/BrentSolverTest.java', 'commons-numbers-rootfinder/src/test/java/org/apache/commons/numbers/rootfinder/MonitoredFunction.java', 'commons-numbers-rootfinder/src/test/java/org/apache/commons/numbers/rootfinder/QuinticFunction.java', 'commons-numbers-rootfinder/src/test/java/org/apache/commons/numbers/rootfinder/Sin.java', 'pom.xml']","NUMBERS-112: Implement Brent's algorithm for finding the zero of a function.

New maven module created.
Code copied and adapted from ""Commons Statistics"" (where it was ported from ""Commons Math"").",NUMBERS-112
ad2d9284f24fdb68ab7158cc2529fcab14719f57,grimreaper,grimreaper,2,"['commons-numbers-field/src/test/java/org/apache/commons/numbers/field/FieldParametricTest.java', 'commons-numbers-fraction/src/main/java/org/apache/commons/numbers/fraction/Fraction.java']",re-add one and zero,re-
a26ba7a61d13ac1ccbf6e19d912f2c1793d26dbe,grimreaper,grimreaper,1,['commons-numbers-fraction/src/main/java/org/apache/commons/numbers/fraction/Fraction.java'],re-add one and zero,re-
62e6c9d6c371a7fdf4a8658187974b91a5d7f7f1,grimreaper,grimreaper,5,"['commons-numbers-arrays/src/test/java/org/apache/commons/numbers/arrays/LinearCombinationTest.java', 'commons-numbers-field/src/main/java/org/apache/commons/numbers/field/FP64.java', 'commons-numbers-field/src/main/java/org/apache/commons/numbers/field/FP64Field.java', 'commons-numbers-field/src/test/java/org/apache/commons/numbers/field/FieldsList.java', 'commons-numbers-fraction/src/main/java/org/apache/commons/numbers/fraction/Fraction.java']",Merge remote-tracking branch 'origin/master' into eax/simple-migrate-map,
888e00e5c12d814670a6bd0ef4fd3bafd9cff780,grimreaper,grimreaper,1,['commons-numbers-arrays/src/test/java/org/apache/commons/numbers/arrays/LinearCombinationTest.java'],"Revert ""BigFraction: use factory method""

This reverts commit 3d5fab4fefecd75a672f0e316231d26b66bcdf98.",
b4356bd53bdab7cb73ba7594a6594310c233d08d,,,3,"['commons-numbers-field/src/main/java/org/apache/commons/numbers/field/FP64.java', 'commons-numbers-field/src/main/java/org/apache/commons/numbers/field/FP64Field.java', 'commons-numbers-field/src/test/java/org/apache/commons/numbers/field/FieldsList.java']",Implement ValJO convention.,
c97fc79f4dbebc15128c5bc77afde4c2319ca3c4,,,3,"['commons-numbers-arrays/src/test/java/org/apache/commons/numbers/arrays/LinearCombinationTest.java', 'commons-numbers-field/src/test/java/org/apache/commons/numbers/field/FieldsList.java', 'commons-numbers-fraction/src/main/java/org/apache/commons/numbers/fraction/Fraction.java']","Fix issues (compilation failure) introduced by the merge of ""fraction-dev"" branch.",
3d5fab4fefecd75a672f0e316231d26b66bcdf98,grimreaper,grimreaper,1,['commons-numbers-arrays/src/test/java/org/apache/commons/numbers/arrays/LinearCombinationTest.java'],BigFraction: use factory method,
5f7f230895b985231267abb88727cbd622a5665d,,,2,"['commons-numbers-fraction/src/test/java/org/apache/commons/numbers/fraction/BigFractionTest.java', 'commons-numbers-fraction/src/test/java/org/apache/commons/numbers/fraction/FractionTest.java']",Restore relevant changes overwritten in the merge of the master branch,
560f15cfac37a22ee5a0ed7af1bb9c48c552427b,,,13,"['commons-numbers-gamma/src/test/java/org/apache/commons/numbers/gamma/ErfTest.java', 'commons-numbers-gamma/src/test/java/org/apache/commons/numbers/gamma/GammaTest.java', 'commons-numbers-gamma/src/test/java/org/apache/commons/numbers/gamma/InvGamma1pm1Test.java', 'commons-numbers-gamma/src/test/java/org/apache/commons/numbers/gamma/InverseErfTest.java', 'commons-numbers-gamma/src/test/java/org/apache/commons/numbers/gamma/InverseErfcTest.java', 'commons-numbers-gamma/src/test/java/org/apache/commons/numbers/gamma/LanczosApproximationTest.java', 'commons-numbers-gamma/src/test/java/org/apache/commons/numbers/gamma/LogBetaTest.java', 'commons-numbers-gamma/src/test/java/org/apache/commons/numbers/gamma/LogGamma1pTest.java', 'commons-numbers-gamma/src/test/java/org/apache/commons/numbers/gamma/LogGammaSumTest.java', 'commons-numbers-gamma/src/test/java/org/apache/commons/numbers/gamma/LogGammaTest.java', 'commons-numbers-gamma/src/test/java/org/apache/commons/numbers/gamma/RegularizedBetaTest.java', 'commons-numbers-gamma/src/test/java/org/apache/commons/numbers/gamma/RegularizedGammaTest.java', 'commons-numbers-gamma/src/test/java/org/apache/commons/numbers/gamma/TrigammaTest.java']","Migrate commons-numbers-gamma to JUnit 5: all remaining classes

Migrate the following classes:

ErfTest
GammaTest
InverseErfcTest
InverseErfTest
InvGamma1pm1Test
LanczosApproximationTest
LogBetaTest
LogGamma1pTest
LogGammaSumTest
LogGammaTest
RegularizedBetaTest
RegularizedGammaTest
TrigammaTest",
fd3fd3caf395e6cf09800c58197fe1ac9462329c,grimreaper,grimreaper,1,['pom.xml'],Merge branch 'master' into eax/simple-migrate-map,
6bcc6d9a16bea265243f68b298713d10abb09224,grimreaper,grimreaper,1,['pom.xml'],[numbers] support JUnit 5 tests,
01f2e0eac182e67a2bc38be875e303fbb231f1ac,grimreaper,grimreaper,1,['pom.xml'],"Revert ""[numbers] support JUnit 5 tests""

This reverts commit 999935b53cff1a9fc8c9a5b4a44bd33d22c959c4.",
8508164a4135167a41be3f9645db8f9cf3448007,grimreaper,grimreaper,11,"['commons-numbers-fraction/src/main/java/org/apache/commons/numbers/fraction/AbstractFormat.java', 'commons-numbers-fraction/src/main/java/org/apache/commons/numbers/fraction/BigFraction.java', 'commons-numbers-fraction/src/main/java/org/apache/commons/numbers/fraction/BigFractionFormat.java', 'commons-numbers-fraction/src/main/java/org/apache/commons/numbers/fraction/Fraction.java', 'commons-numbers-fraction/src/main/java/org/apache/commons/numbers/fraction/FractionFormat.java', 'commons-numbers-fraction/src/main/java/org/apache/commons/numbers/fraction/ProperBigFractionFormat.java', 'commons-numbers-fraction/src/main/java/org/apache/commons/numbers/fraction/ProperFractionFormat.java', 'commons-numbers-fraction/src/test/java/org/apache/commons/numbers/fraction/BigFractionFormatTest.java', 'commons-numbers-fraction/src/test/java/org/apache/commons/numbers/fraction/BigFractionTest.java', 'commons-numbers-fraction/src/test/java/org/apache/commons/numbers/fraction/FractionFormatTest.java', 'commons-numbers-fraction/src/test/java/org/apache/commons/numbers/fraction/FractionTest.java']",Merge branch 'master' of http://gitbox.apache.org/repos/asf/commons-numbers into eax/simple-migrate-map,
7a3f962a75749afac3bb42cc73f5631079263254,ebarnhill,ebarnhill,11,"['commons-numbers-fraction/src/main/java/org/apache/commons/numbers/fraction/AbstractFormat.java', 'commons-numbers-fraction/src/main/java/org/apache/commons/numbers/fraction/BigFraction.java', 'commons-numbers-fraction/src/main/java/org/apache/commons/numbers/fraction/BigFractionFormat.java', 'commons-numbers-fraction/src/main/java/org/apache/commons/numbers/fraction/Fraction.java', 'commons-numbers-fraction/src/main/java/org/apache/commons/numbers/fraction/FractionFormat.java', 'commons-numbers-fraction/src/main/java/org/apache/commons/numbers/fraction/ProperBigFractionFormat.java', 'commons-numbers-fraction/src/main/java/org/apache/commons/numbers/fraction/ProperFractionFormat.java', 'commons-numbers-fraction/src/test/java/org/apache/commons/numbers/fraction/BigFractionFormatTest.java', 'commons-numbers-fraction/src/test/java/org/apache/commons/numbers/fraction/BigFractionTest.java', 'commons-numbers-fraction/src/test/java/org/apache/commons/numbers/fraction/FractionFormatTest.java', 'commons-numbers-fraction/src/test/java/org/apache/commons/numbers/fraction/FractionTest.java']",NUMBERS-77: merged fraction-dev,NUMBERS-77
0a8323369bd6f0da6f8f6f594a073286f9daf59a,ebarnhill,ebarnhill,2,"['commons-numbers-fraction/src/main/java/org/apache/commons/numbers/fraction/BigFraction.java', 'commons-numbers-fraction/src/main/java/org/apache/commons/numbers/fraction/Fraction.java']",NUMBERS-77: final checkstyle edits,NUMBERS-77
a28928fbc96030249c844ddb321899395f660f28,,grimreaper,1,['commons-numbers-gamma/src/test/java/org/apache/commons/numbers/gamma/ErfDifferenceTest.java'],Migrate commons-numbers-gamma to JUnit 5: class ErfDifferenceTest,
af6e7a353390af5508f46d8191624aecb983db51,,grimreaper,1,['commons-numbers-gamma/src/test/java/org/apache/commons/numbers/gamma/ErfcTest.java'],Migrate commons-numbers-gamma to JUnit 5: class ErfcTest,
205fa8f40e3e68fdf982271d20dd0d6751693da1,,grimreaper,1,['commons-numbers-gamma/src/test/java/org/apache/commons/numbers/gamma/DigammaTest.java'],Migrate commons-numbers-gamma to JUnit 5: class DigammaTest,
6d64caf2b6f7569801045693996a0f7509c18823,,grimreaper,1,['commons-numbers-quaternion/src/test/java/org/apache/commons/numbers/quaternion/SlerpTest.java'],Migrate commons-numbers-quaternion to JUnit 5: class SlerpTest,
32ab41b86f546b626005d58c1a3c312e69a4cde7,,grimreaper,1,['commons-numbers-quaternion/src/test/java/org/apache/commons/numbers/quaternion/QuaternionTest.java'],Migrate commons-numbers-quaternion to JUnit 5: class QuaternionTest,
56928489a0e5d25844fa8c10a2d561c074714060,,grimreaper,1,['commons-numbers-primes/src/test/java/org/apache/commons/numbers/primes/PrimesTest.java'],Migrate commons-numbers-primes to JUnit 5: class PrimesTest,
a309a08ab65b28fa4bef5ac87f280af653b11a8e,,grimreaper,1,['commons-numbers-primes/src/test/java/org/apache/commons/numbers/primes/SmallPrimesTest.java'],Migrate commons-numbers-primes to JUnit 5: class SmallPrimesTest,
7ed19c02bd1c6a93f693b53edefc73fc128e0bc4,grimreaper,grimreaper,43,"['commons-numbers-angle/src/test/java/org/apache/commons/numbers/angle/PlaneAngleRadiansTest.java', 'commons-numbers-angle/src/test/java/org/apache/commons/numbers/angle/PlaneAngleTest.java', 'commons-numbers-arrays/src/test/java/org/apache/commons/numbers/arrays/CosAngleTest.java', 'commons-numbers-arrays/src/test/java/org/apache/commons/numbers/arrays/LinearCombinationTest.java', 'commons-numbers-arrays/src/test/java/org/apache/commons/numbers/arrays/SafeNormTest.java', 'commons-numbers-combinatorics/src/test/java/org/apache/commons/numbers/combinatorics/BinomialCoefficientDoubleTest.java', 'commons-numbers-combinatorics/src/test/java/org/apache/commons/numbers/combinatorics/BinomialCoefficientTest.java', 'commons-numbers-combinatorics/src/test/java/org/apache/commons/numbers/combinatorics/CombinationsTest.java', 'commons-numbers-combinatorics/src/test/java/org/apache/commons/numbers/combinatorics/FactorialDoubleTest.java', 'commons-numbers-combinatorics/src/test/java/org/apache/commons/numbers/combinatorics/FactorialTest.java', 'commons-numbers-combinatorics/src/test/java/org/apache/commons/numbers/combinatorics/LogBinomialCoefficientTest.java', 'commons-numbers-combinatorics/src/test/java/org/apache/commons/numbers/combinatorics/LogFactorialTest.java', 'commons-numbers-complex-streams/src/test/java/org/apache/commons/numbers/complex/streams/ComplexUtilsTest.java', 'commons-numbers-complex/src/test/java/org/apache/commons/numbers/complex/CStandardTest.java', 'commons-numbers-complex/src/test/java/org/apache/commons/numbers/complex/ComplexTest.java', 'commons-numbers-core/src/test/java/org/apache/commons/numbers/core/ArithmeticUtilsTest.java', 'commons-numbers-core/src/test/java/org/apache/commons/numbers/core/PrecisionTest.java', 'commons-numbers-field/src/test/java/org/apache/commons/numbers/field/FieldParametricTest.java', 'commons-numbers-fraction/src/test/java/org/apache/commons/numbers/fraction/BigFractionFormatTest.java', 'commons-numbers-fraction/src/test/java/org/apache/commons/numbers/fraction/BigFractionTest.java', 'commons-numbers-fraction/src/test/java/org/apache/commons/numbers/fraction/ContinuedFractionTest.java', 'commons-numbers-fraction/src/test/java/org/apache/commons/numbers/fraction/FractionFormatTest.java', 'commons-numbers-fraction/src/test/java/org/apache/commons/numbers/fraction/FractionTest.java', 'commons-numbers-gamma/src/test/java/org/apache/commons/numbers/gamma/DigammaTest.java', 'commons-numbers-gamma/src/test/java/org/apache/commons/numbers/gamma/ErfDifferenceTest.java', 'commons-numbers-gamma/src/test/java/org/apache/commons/numbers/gamma/ErfTest.java', 'commons-numbers-gamma/src/test/java/org/apache/commons/numbers/gamma/ErfcTest.java', 'commons-numbers-gamma/src/test/java/org/apache/commons/numbers/gamma/GammaTest.java', 'commons-numbers-gamma/src/test/java/org/apache/commons/numbers/gamma/InvGamma1pm1Test.java', 'commons-numbers-gamma/src/test/java/org/apache/commons/numbers/gamma/InverseErfTest.java', 'commons-numbers-gamma/src/test/java/org/apache/commons/numbers/gamma/InverseErfcTest.java', 'commons-numbers-gamma/src/test/java/org/apache/commons/numbers/gamma/LanczosApproximationTest.java', 'commons-numbers-gamma/src/test/java/org/apache/commons/numbers/gamma/LogBetaTest.java', 'commons-numbers-gamma/src/test/java/org/apache/commons/numbers/gamma/LogGamma1pTest.java', 'commons-numbers-gamma/src/test/java/org/apache/commons/numbers/gamma/LogGammaSumTest.java', 'commons-numbers-gamma/src/test/java/org/apache/commons/numbers/gamma/LogGammaTest.java', 'commons-numbers-gamma/src/test/java/org/apache/commons/numbers/gamma/RegularizedBetaTest.java', 'commons-numbers-gamma/src/test/java/org/apache/commons/numbers/gamma/RegularizedGammaTest.java', 'commons-numbers-gamma/src/test/java/org/apache/commons/numbers/gamma/TrigammaTest.java', 'commons-numbers-primes/src/test/java/org/apache/commons/numbers/primes/PrimesTest.java', 'commons-numbers-primes/src/test/java/org/apache/commons/numbers/primes/SmallPrimesTest.java', 'commons-numbers-quaternion/src/test/java/org/apache/commons/numbers/quaternion/QuaternionTest.java', 'commons-numbers-quaternion/src/test/java/org/apache/commons/numbers/quaternion/SlerpTest.java']",Migrate to JUnit 5,
999935b53cff1a9fc8c9a5b4a44bd33d22c959c4,grimreaper,grimreaper,1,['pom.xml'],[numbers] support JUnit 5 tests,
d01c9e71ab1e2eb843951af641ee712ab9178a12,,,1,['commons-numbers-primes/src/main/java/org/apache/commons/numbers/primes/SmallPrimes.java'],"Merge branch 'NUMBERS-104__heinrich'

Closes #46.",
7b15fad6c3eeece124f635b7a5c2fd72443f2017,Schamschi,Schamschi,1,['commons-numbers-primes/src/main/java/org/apache/commons/numbers/primes/SmallPrimes.java'],"NUMBERS-104: Speed up trial division (continued)

Remove unreachable lines of code to increase test coverage as requested.",NUMBERS-104
7af2d5014748c1a18c5c632f64aa32c298a36b3c,Schamschi,Schamschi,1,['commons-numbers-primes/src/main/java/org/apache/commons/numbers/primes/SmallPrimes.java'],"NUMBERS-104: Speed up trial division (continued)

The number of coprime equivalence classes can be easily calculated in advance, eliminating the need to create an intermediate List from which to populate the final array.",NUMBERS-104
da7b9201672c502c5ecbc164e48d36e420703f33,Schamschi,Schamschi,1,['commons-numbers-primes/src/main/java/org/apache/commons/numbers/primes/SmallPrimes.java'],"NUMBERS-104: Speed up trial division

Expand the set of prime numbers whose multiples are to be skipped as trial candidates in org.apache.commons.numbers.primes.SmallPrimes.boundedTrialDivision(int, int, List<Integer>) from {2,3} to {2,3,5,7,11}, and change the way the code achieves this from code duplication to a more explicit style.",NUMBERS-104
daac9ac15f6161b32fa4c1374c2d6b563c90af87,,,24,"['commons-numbers-arrays/src/main/java/org/apache/commons/numbers/arrays/CosAngle.java', 'commons-numbers-arrays/src/main/java/org/apache/commons/numbers/arrays/LinearCombination.java', 'commons-numbers-arrays/src/main/java/org/apache/commons/numbers/arrays/SafeNorm.java', 'commons-numbers-combinatorics/src/main/java/org/apache/commons/numbers/combinatorics/BinomialCoefficient.java', 'commons-numbers-combinatorics/src/main/java/org/apache/commons/numbers/combinatorics/BinomialCoefficientDouble.java', 'commons-numbers-combinatorics/src/main/java/org/apache/commons/numbers/combinatorics/Factorial.java', 'commons-numbers-combinatorics/src/main/java/org/apache/commons/numbers/combinatorics/LogBinomialCoefficient.java', 'commons-numbers-core/src/main/java/org/apache/commons/numbers/core/ArithmeticUtils.java', 'commons-numbers-gamma/src/main/java/org/apache/commons/numbers/gamma/Digamma.java', 'commons-numbers-gamma/src/main/java/org/apache/commons/numbers/gamma/Erf.java', 'commons-numbers-gamma/src/main/java/org/apache/commons/numbers/gamma/ErfDifference.java', 'commons-numbers-gamma/src/main/java/org/apache/commons/numbers/gamma/Erfc.java', 'commons-numbers-gamma/src/main/java/org/apache/commons/numbers/gamma/Gamma.java', 'commons-numbers-gamma/src/main/java/org/apache/commons/numbers/gamma/InvGamma1pm1.java', 'commons-numbers-gamma/src/main/java/org/apache/commons/numbers/gamma/InverseErf.java', 'commons-numbers-gamma/src/main/java/org/apache/commons/numbers/gamma/InverseErfc.java', 'commons-numbers-gamma/src/main/java/org/apache/commons/numbers/gamma/LanczosApproximation.java', 'commons-numbers-gamma/src/main/java/org/apache/commons/numbers/gamma/LogBeta.java', 'commons-numbers-gamma/src/main/java/org/apache/commons/numbers/gamma/LogGamma.java', 'commons-numbers-gamma/src/main/java/org/apache/commons/numbers/gamma/LogGamma1p.java', 'commons-numbers-gamma/src/main/java/org/apache/commons/numbers/gamma/LogGammaSum.java', 'commons-numbers-gamma/src/main/java/org/apache/commons/numbers/gamma/RegularizedBeta.java', 'commons-numbers-gamma/src/main/java/org/apache/commons/numbers/gamma/RegularizedGamma.java', 'commons-numbers-gamma/src/main/java/org/apache/commons/numbers/gamma/Trigamma.java']","Merge branch 'NUMBERS-108__karl'

Closes #45.",
5411cdc693e8f48c59448e378ea050e3633209c6,khmarbaise,,24,"['commons-numbers-arrays/src/main/java/org/apache/commons/numbers/arrays/CosAngle.java', 'commons-numbers-arrays/src/main/java/org/apache/commons/numbers/arrays/LinearCombination.java', 'commons-numbers-arrays/src/main/java/org/apache/commons/numbers/arrays/SafeNorm.java', 'commons-numbers-combinatorics/src/main/java/org/apache/commons/numbers/combinatorics/BinomialCoefficient.java', 'commons-numbers-combinatorics/src/main/java/org/apache/commons/numbers/combinatorics/BinomialCoefficientDouble.java', 'commons-numbers-combinatorics/src/main/java/org/apache/commons/numbers/combinatorics/Factorial.java', 'commons-numbers-combinatorics/src/main/java/org/apache/commons/numbers/combinatorics/LogBinomialCoefficient.java', 'commons-numbers-core/src/main/java/org/apache/commons/numbers/core/ArithmeticUtils.java', 'commons-numbers-gamma/src/main/java/org/apache/commons/numbers/gamma/Digamma.java', 'commons-numbers-gamma/src/main/java/org/apache/commons/numbers/gamma/Erf.java', 'commons-numbers-gamma/src/main/java/org/apache/commons/numbers/gamma/ErfDifference.java', 'commons-numbers-gamma/src/main/java/org/apache/commons/numbers/gamma/Erfc.java', 'commons-numbers-gamma/src/main/java/org/apache/commons/numbers/gamma/Gamma.java', 'commons-numbers-gamma/src/main/java/org/apache/commons/numbers/gamma/InvGamma1pm1.java', 'commons-numbers-gamma/src/main/java/org/apache/commons/numbers/gamma/InverseErf.java', 'commons-numbers-gamma/src/main/java/org/apache/commons/numbers/gamma/InverseErfc.java', 'commons-numbers-gamma/src/main/java/org/apache/commons/numbers/gamma/LanczosApproximation.java', 'commons-numbers-gamma/src/main/java/org/apache/commons/numbers/gamma/LogBeta.java', 'commons-numbers-gamma/src/main/java/org/apache/commons/numbers/gamma/LogGamma.java', 'commons-numbers-gamma/src/main/java/org/apache/commons/numbers/gamma/LogGamma1p.java', 'commons-numbers-gamma/src/main/java/org/apache/commons/numbers/gamma/LogGammaSum.java', 'commons-numbers-gamma/src/main/java/org/apache/commons/numbers/gamma/RegularizedBeta.java', 'commons-numbers-gamma/src/main/java/org/apache/commons/numbers/gamma/RegularizedGamma.java', 'commons-numbers-gamma/src/main/java/org/apache/commons/numbers/gamma/Trigamma.java']","[NUMBERS-108] - Cleaning up Checkstyle reported issues
 - followup cleaning up JavaDoc, Method order etc.",NUMBERS-108
3150ea0e7e282453a5a715eabf4fd55f6b9c1c89,,,12,"['commons-numbers-angle/pom.xml', 'commons-numbers-arrays/pom.xml', 'commons-numbers-combinatorics/pom.xml', 'commons-numbers-complex-streams/pom.xml', 'commons-numbers-complex/pom.xml', 'commons-numbers-core/pom.xml', 'commons-numbers-field/pom.xml', 'commons-numbers-fraction/pom.xml', 'commons-numbers-gamma/pom.xml', 'commons-numbers-primes/pom.xml', 'commons-numbers-quaternion/pom.xml', 'pom.xml']","Merge branch 'NUMBERS-110__karl'

Closes #44.",
e378c7a265a765cea4b1dcfb8fbc93153075acc0,khmarbaise,khmarbaise,12,"['commons-numbers-angle/pom.xml', 'commons-numbers-arrays/pom.xml', 'commons-numbers-combinatorics/pom.xml', 'commons-numbers-complex-streams/pom.xml', 'commons-numbers-complex/pom.xml', 'commons-numbers-core/pom.xml', 'commons-numbers-field/pom.xml', 'commons-numbers-fraction/pom.xml', 'commons-numbers-gamma/pom.xml', 'commons-numbers-primes/pom.xml', 'commons-numbers-quaternion/pom.xml', 'pom.xml']",[NUMBERS-110] - Define Java Module Names for all modules,NUMBERS-110
582664ba98df0ff4f69dae4ae95765bd569e9156,,,1,['.travis.yml'],"Merge branch 'NUMBERS-105__karl'

Closes #40.",
327d3ded7205578cc699fe0cc6b4ee55c6c39e63,,,1,['.travis.yml'],NUMBERS-105: Document potentially confusing statement (Travis).,NUMBERS-105
61496013f022ad847e68ba463a3e1cf0f46bad5a,,,12,"['commons-numbers-angle/pom.xml', 'commons-numbers-arrays/pom.xml', 'commons-numbers-combinatorics/pom.xml', 'commons-numbers-complex-streams/pom.xml', 'commons-numbers-complex/pom.xml', 'commons-numbers-core/pom.xml', 'commons-numbers-field/pom.xml', 'commons-numbers-fraction/pom.xml', 'commons-numbers-gamma/pom.xml', 'commons-numbers-primes/pom.xml', 'commons-numbers-quaternion/pom.xml', 'dist-archive/pom.xml']","Merge branch 'NUMBERS-109__karl'

Closes #43.",
7e37485db5f9731ed2988011e9b9debb0ec73367,,,22,"['commons-numbers-arrays/src/main/java/org/apache/commons/numbers/arrays/CosAngle.java', 'commons-numbers-combinatorics/src/main/java/org/apache/commons/numbers/combinatorics/BinomialCoefficient.java', 'commons-numbers-combinatorics/src/main/java/org/apache/commons/numbers/combinatorics/BinomialCoefficientDouble.java', 'commons-numbers-combinatorics/src/main/java/org/apache/commons/numbers/combinatorics/Factorial.java', 'commons-numbers-combinatorics/src/main/java/org/apache/commons/numbers/combinatorics/LogBinomialCoefficient.java', 'commons-numbers-core/src/main/java/org/apache/commons/numbers/core/ArithmeticUtils.java', 'commons-numbers-gamma/src/main/java/org/apache/commons/numbers/gamma/Digamma.java', 'commons-numbers-gamma/src/main/java/org/apache/commons/numbers/gamma/Erf.java', 'commons-numbers-gamma/src/main/java/org/apache/commons/numbers/gamma/ErfDifference.java', 'commons-numbers-gamma/src/main/java/org/apache/commons/numbers/gamma/Erfc.java', 'commons-numbers-gamma/src/main/java/org/apache/commons/numbers/gamma/Gamma.java', 'commons-numbers-gamma/src/main/java/org/apache/commons/numbers/gamma/InvGamma1pm1.java', 'commons-numbers-gamma/src/main/java/org/apache/commons/numbers/gamma/InverseErf.java', 'commons-numbers-gamma/src/main/java/org/apache/commons/numbers/gamma/InverseErfc.java', 'commons-numbers-gamma/src/main/java/org/apache/commons/numbers/gamma/LanczosApproximation.java', 'commons-numbers-gamma/src/main/java/org/apache/commons/numbers/gamma/LogBeta.java', 'commons-numbers-gamma/src/main/java/org/apache/commons/numbers/gamma/LogGamma.java', 'commons-numbers-gamma/src/main/java/org/apache/commons/numbers/gamma/LogGamma1p.java', 'commons-numbers-gamma/src/main/java/org/apache/commons/numbers/gamma/LogGammaSum.java', 'commons-numbers-gamma/src/main/java/org/apache/commons/numbers/gamma/RegularizedBeta.java', 'commons-numbers-gamma/src/main/java/org/apache/commons/numbers/gamma/RegularizedGamma.java', 'commons-numbers-gamma/src/main/java/org/apache/commons/numbers/gamma/Trigamma.java']","Merge branch 'NUMBERS-108__karl'

Closes #42.",
4544f88c82831d948509e32eb453b7e83ca54ebe,khmarbaise,khmarbaise,12,"['commons-numbers-angle/pom.xml', 'commons-numbers-arrays/pom.xml', 'commons-numbers-combinatorics/pom.xml', 'commons-numbers-complex-streams/pom.xml', 'commons-numbers-complex/pom.xml', 'commons-numbers-core/pom.xml', 'commons-numbers-field/pom.xml', 'commons-numbers-fraction/pom.xml', 'commons-numbers-gamma/pom.xml', 'commons-numbers-primes/pom.xml', 'commons-numbers-quaternion/pom.xml', 'dist-archive/pom.xml']",[NUMBERS-109] - Cleanup pom files,NUMBERS-109
9b7a1cb34645e041341efa03e96f2f29d62bb4f4,khmarbaise,khmarbaise,22,"['commons-numbers-arrays/src/main/java/org/apache/commons/numbers/arrays/CosAngle.java', 'commons-numbers-combinatorics/src/main/java/org/apache/commons/numbers/combinatorics/BinomialCoefficient.java', 'commons-numbers-combinatorics/src/main/java/org/apache/commons/numbers/combinatorics/BinomialCoefficientDouble.java', 'commons-numbers-combinatorics/src/main/java/org/apache/commons/numbers/combinatorics/Factorial.java', 'commons-numbers-combinatorics/src/main/java/org/apache/commons/numbers/combinatorics/LogBinomialCoefficient.java', 'commons-numbers-core/src/main/java/org/apache/commons/numbers/core/ArithmeticUtils.java', 'commons-numbers-gamma/src/main/java/org/apache/commons/numbers/gamma/Digamma.java', 'commons-numbers-gamma/src/main/java/org/apache/commons/numbers/gamma/Erf.java', 'commons-numbers-gamma/src/main/java/org/apache/commons/numbers/gamma/ErfDifference.java', 'commons-numbers-gamma/src/main/java/org/apache/commons/numbers/gamma/Erfc.java', 'commons-numbers-gamma/src/main/java/org/apache/commons/numbers/gamma/Gamma.java', 'commons-numbers-gamma/src/main/java/org/apache/commons/numbers/gamma/InvGamma1pm1.java', 'commons-numbers-gamma/src/main/java/org/apache/commons/numbers/gamma/InverseErf.java', 'commons-numbers-gamma/src/main/java/org/apache/commons/numbers/gamma/InverseErfc.java', 'commons-numbers-gamma/src/main/java/org/apache/commons/numbers/gamma/LanczosApproximation.java', 'commons-numbers-gamma/src/main/java/org/apache/commons/numbers/gamma/LogBeta.java', 'commons-numbers-gamma/src/main/java/org/apache/commons/numbers/gamma/LogGamma.java', 'commons-numbers-gamma/src/main/java/org/apache/commons/numbers/gamma/LogGamma1p.java', 'commons-numbers-gamma/src/main/java/org/apache/commons/numbers/gamma/LogGammaSum.java', 'commons-numbers-gamma/src/main/java/org/apache/commons/numbers/gamma/RegularizedBeta.java', 'commons-numbers-gamma/src/main/java/org/apache/commons/numbers/gamma/RegularizedGamma.java', 'commons-numbers-gamma/src/main/java/org/apache/commons/numbers/gamma/Trigamma.java']",[NUMBERS-108] - Cleaning up Checkstyle reported issues,NUMBERS-108
c42953742ae6a7c858af8569200942a367047856,khmarbaise,khmarbaise,1,['.travis.yml'],[NUMBERS-105] - Build Configuration for Travis executes build twice,NUMBERS-105
7e5a4b9c83363ee5f9caddd2dc19f11d25ffd560,,,0,[],"Merge branch 'NUMBERS-103__karl'

Closes #39.",
438147b78c3333c5a0d4ab2aa44f3a0160da978f,,,1,['pom.xml'],"Merge branch 'NUMBERS-102__karl'

Closes #38.",
9d7b39a2b65e253c21910d9f32cf7f2e88de0359,,,2,"['.travis.yml', 'pom.xml']","Merge branch 'NUMBERS-101__karl'

Closes #37.",
cb107fc2d7876e484d35e07ac27c72b755bc643f,khmarbaise,khmarbaise,1,['.travis.yml'],[NUMBERS-103] - Travis build fails every time based on usage of oraclejdk8,NUMBERS-103
c97c21b6d094f1ceaf3d883570c7a84743ee3228,khmarbaise,khmarbaise,2,"['.travis.yml', 'pom.xml']",[NUMBERS-101] - Cleanup build configuration for maven-surefire-plugin,NUMBERS-101
7b2619a68892002d9c621f34c13ec9262c2c1b77,khmarbaise,khmarbaise,1,['pom.xml'],[NUMBERS-102] - Upgrade maven-compiler-plugin to 3.8.1,NUMBERS-102
92de0b4d31ce534948c316125606565be9517354,ebarnhill,ebarnhill,1,['commons-numbers-fraction/src/test/java/org/apache/commons/numbers/fraction/BigFractionTest.java'],minor: login credentials test,
346084171c7e4ef3a0706378c7c0fda5d684bdf8,ebarnhill,ebarnhill,1,['commons-numbers-fraction/src/test/java/org/apache/commons/numbers/fraction/BigFractionTest.java'],"NUMBERS-97: Added test of parse method in BigFractionTest, and updated outdated use of RoundingMode",NUMBERS-97
97683d53ed0b05241c7da1e92fa820664fd29258,ebarnhill,ebarnhill,1,['commons-numbers-fraction/src/test/java/org/apache/commons/numbers/fraction/FractionTest.java'],NUMBERS-97: test for Fraction parse method,NUMBERS-97
092e816b4e0bf369ff08c7d8b4e640b15ebeb47d,ebarnhill,ebarnhill,1,['commons-numbers-fraction/src/main/java/org/apache/commons/numbers/fraction/BigFraction.java'],NUMBERS-97: replacing pow method,NUMBERS-97
9001f8cbc7e1fd6f73a550b49ed53f6229c82771,,,11,"['NOTICE.txt', 'commons-numbers-angle/NOTICE.txt', 'commons-numbers-arrays/NOTICE.txt', 'commons-numbers-combinatorics/NOTICE.txt', 'commons-numbers-complex-streams/NOTICE.txt', 'commons-numbers-complex/NOTICE.txt', 'commons-numbers-core/NOTICE.txt', 'commons-numbers-field/NOTICE.txt', 'commons-numbers-fraction/NOTICE.txt', 'commons-numbers-gamma/NOTICE.txt', 'commons-numbers-quaternion/NOTICE.txt']",Update NOTICE file for 2019.,
44f275ad7e8c562a9d613a8d29cb8f5d3366e152,,,2,"['commons-numbers-primes/src/main/java/org/apache/commons/numbers/primes/Primes.java', 'commons-numbers-primes/src/main/java/org/apache/commons/numbers/primes/SmallPrimes.java']","Use ""final"".",
1a217c3e156a057ec3c308107f41c8f661c24cfb,,,1,['commons-numbers-primes/src/main/java/org/apache/commons/numbers/primes/SmallPrimes.java'],Set to package-private visibility.,
6bf24b5169ea1c641f756d19e7bfda5249da671b,,,2,"['commons-numbers-primes/src/main/java/org/apache/commons/numbers/primes/Primes.java', 'commons-numbers-primes/src/main/java/org/apache/commons/numbers/primes/SmallPrimes.java']",Formatting and Javadoc cleanup.,
3b21325a4d013fc8fe2a5c6d6db0923d22768e59,ebarnhill,ebarnhill,1,['commons-numbers-fraction/src/main/java/org/apache/commons/numbers/fraction/Fraction.java'],"NUMBERS-97: restoring pow() method, lost in rebase",NUMBERS-97
d60d404b0de097fdc3cf1f063bd3b21d7bd8a684,ebarnhill,ebarnhill,7,"['commons-numbers-fraction/src/main/java/org/apache/commons/numbers/fraction/AbstractFractionFormat.java', 'commons-numbers-fraction/src/main/java/org/apache/commons/numbers/fraction/BigFractionFormat.java', 'commons-numbers-fraction/src/main/java/org/apache/commons/numbers/fraction/FractionFormat.java', 'commons-numbers-fraction/src/main/java/org/apache/commons/numbers/fraction/ProperBigFractionFormat.java', 'commons-numbers-fraction/src/main/java/org/apache/commons/numbers/fraction/ProperFractionFormat.java', 'commons-numbers-fraction/src/test/java/org/apache/commons/numbers/fraction/BigFractionFormatTest.java', 'commons-numbers-fraction/src/test/java/org/apache/commons/numbers/fraction/FractionFormatTest.java']",NUMBERS-97: removing standalone Format classes,NUMBERS-97
e4be380ea9b8896883eceded795a067e646c3beb,ebarnhill,ebarnhill,1,['commons-numbers-fraction/src/test/java/org/apache/commons/numbers/fraction/FractionTest.java'],NUMBERS-77: tests: added testParse class and negative entries to testToString,NUMBERS-77
f5cd0a2ecb7181ba9b473bd806e8733b61dfd890,ebarnhill,ebarnhill,1,['commons-numbers-fraction/src/main/java/org/apache/commons/numbers/fraction/Fraction.java'],NUMBERS-77: tabs to spaces,NUMBERS-77
5c9c5bc9a905bed9084d9878625dac46a9eb579b,ericbarnhill,ebarnhill,1,['commons-numbers-fraction/src/main/java/org/apache/commons/numbers/fraction/Fraction.java'],NUMBERS-74: Convert new Fraction factory methods to static,NUMBERS-74
bd98e81a52d90cbb57ada10f91b765b0a11476ec,ericbarnhill,ebarnhill,1,['commons-numbers-fraction/src/main/java/org/apache/commons/numbers/fraction/Fraction.java'],"NUMBERS-79: Fraction.add() and .subtract() are long-based

Converted add() and subtract() methods of Fraction class to long-based
operations with recommendation to use BigFraction for very large
numerators and denominators. Updated corresponding documentation.",NUMBERS-79
7672acea193df8dec70cd70b745557c3591c0caf,ebarnhill,ebarnhill,1,['commons-numbers-fraction/src/main/java/org/apache/commons/numbers/fraction/Fraction.java'],NUMBERS-75: Removal of private constructors and replacement with of* factory methods,NUMBERS-75
64e9b722c2768eb162f7c5b7edddc28364d77fb3,ericbarnhill,ebarnhill,1,['commons-numbers-fraction/src/main/java/org/apache/commons/numbers/fraction/Fraction.java'],NUMBERS-74: minor: removed unneeded variable,NUMBERS-74
43c7b775e98f46720ba9f8b4e9da97aef424be98,ericbarnhill,ebarnhill,1,['commons-numbers-fraction/src/main/java/org/apache/commons/numbers/fraction/Fraction.java'],NUMBERS-74: minor: changed exception listed in doc,NUMBERS-74
9ebced7883724633bb1aa2c45b702824ade079e0,ericbarnhill,ebarnhill,1,['commons-numbers-fraction/src/main/java/org/apache/commons/numbers/fraction/Fraction.java'],NUMBERS_74: minor: added a trim method to parsing single integer,
6acf1617cc911901f5a9e0a6cbb1cc33d5822b0e,ericbarnhill,ebarnhill,1,['commons-numbers-fraction/src/main/java/org/apache/commons/numbers/fraction/Fraction.java'],NUMBERS-74: added parse() method to Fraction,NUMBERS-74
b4e0bb1fcf663c4ca766a09b3f611ae90fbcf73f,,ebarnhill,1,['commons-numbers-angle/src/main/java/org/apache/commons/numbers/angle/PlaneAngle.java'],"Use ""final"".",
600de664a3e112c2e81390d51f7b30c2e5145bd9,darkma773r,ebarnhill,2,"['commons-numbers-angle/src/main/java/org/apache/commons/numbers/angle/PlaneAngle.java', 'commons-numbers-angle/src/test/java/org/apache/commons/numbers/angle/PlaneAngleTest.java']",NUMBERS-94: adding extra check to PlaneAngle.normalize() to handle very small numbers,NUMBERS-94
69be5e9bfa527b9c39c55085787ab3e07fe7f69e,ericbarnhill,ebarnhill,3,"['commons-numbers-fraction/src/main/java/org/apache/commons/numbers/fraction/AbstractFractionFormat.java', 'commons-numbers-fraction/src/main/java/org/apache/commons/numbers/fraction/BigFractionFormat.java', 'commons-numbers-fraction/src/main/java/org/apache/commons/numbers/fraction/FractionFormat.java']",NUMBERS-92: Some missed unstaged changes,NUMBERS-92
d810878b24cf53266a35f54cbf76a05cac5a5901,ericbarnhill,ebarnhill,1,['commons-numbers-fraction/src/main/java/org/apache/commons/numbers/fraction/AbstractFractionFormat.java'],NUMBERS-92: Rename AbstractFormat to AbstractFractionFormat,NUMBERS-92
2f5ca43223750222903f63670303fc8ed2fb6bc5,darkma773r,ebarnhill,4,"['commons-numbers-angle/src/main/java/org/apache/commons/numbers/angle/PlaneAngle.java', 'commons-numbers-angle/src/main/java/org/apache/commons/numbers/angle/PlaneAngleRadians.java', 'commons-numbers-angle/src/test/java/org/apache/commons/numbers/angle/PlaneAngleRadiansTest.java', 'commons-numbers-angle/src/test/java/org/apache/commons/numbers/angle/PlaneAngleTest.java']",NUMBERS-93: Updating documentation for PlaneAngle#normalize() to specify that the upper bound is exclusive; adding unit tests for these cases,NUMBERS-93
862334bc02d35266d5a244e84ef7540410b64f7d,ericbarnhill,ebarnhill,2,"['commons-numbers-fraction/src/test/java/org/apache/commons/numbers/fraction/BigFractionFormatTest.java', 'commons-numbers-fraction/src/test/java/org/apache/commons/numbers/fraction/BigFractionTest.java']",NUMBERS-91: Conforming Big Fraction related Test classes,NUMBERS-91
f6f19e17d8e5271eb1a1ddd7770d186e8572552c,ericbarnhill,ebarnhill,3,"['commons-numbers-fraction/src/main/java/org/apache/commons/numbers/fraction/BigFraction.java', 'commons-numbers-fraction/src/main/java/org/apache/commons/numbers/fraction/BigFractionFormat.java', 'commons-numbers-fraction/src/main/java/org/apache/commons/numbers/fraction/ProperBigFractionFormat.java']",NUMBERS-91: Fixes to BigFraction related Formatting classes,NUMBERS-91
072a2923516dd0f1c02b445b0c49ba9f333529d1,ericbarnhill,ebarnhill,1,['commons-numbers-fraction/src/main/java/org/apache/commons/numbers/fraction/BigFraction.java'],NUMBERS-91: Conform BigFraction constructors to Fraction consts,NUMBERS-91
a675d8b524f9da2b132942ac96b778269f1a549e,ericbarnhill,ebarnhill,5,"['commons-numbers-fraction/src/main/java/org/apache/commons/numbers/fraction/Fraction.java', 'commons-numbers-fraction/src/main/java/org/apache/commons/numbers/fraction/FractionFormat.java', 'commons-numbers-fraction/src/main/java/org/apache/commons/numbers/fraction/ProperFractionFormat.java', 'commons-numbers-fraction/src/test/java/org/apache/commons/numbers/fraction/FractionFormatTest.java', 'commons-numbers-fraction/src/test/java/org/apache/commons/numbers/fraction/FractionTest.java']","NUMBERS-74: Changed factory methods to ""of"" and ""from""",NUMBERS-74
193e7b07d73192cbb39bd06f876760140c469d33,,ebarnhill,1,['commons-numbers-quaternion/src/main/java/org/apache/commons/numbers/quaternion/Quaternion.java'],Nit.,
1187730364908d2a3704da5f30361259a9abacb7,darkma773r,ebarnhill,1,['commons-numbers-quaternion/src/main/java/org/apache/commons/numbers/quaternion/Quaternion.java'],updating docs to specify the order of quaternion components; renaming parameters to match component names,
3dcba61a247ca8a3a71143002baa5fd782356072,darkma773r,ebarnhill,4,"['commons-numbers-quaternion/src/main/java/org/apache/commons/numbers/quaternion/Quaternion.java', 'commons-numbers-quaternion/src/main/java/org/apache/commons/numbers/quaternion/Slerp.java', 'commons-numbers-quaternion/src/test/java/org/apache/commons/numbers/quaternion/QuaternionTest.java', 'commons-numbers-quaternion/src/test/java/org/apache/commons/numbers/quaternion/SlerpTest.java']",NUMBERS-89: changing dotProduct() to dot() to match convention in commons-geometry,NUMBERS-89
a7cefbf63d3c548d359c7ed55ae373429491adc5,ericbarnhill,ebarnhill,1,['commons-numbers-fraction/src/main/java/org/apache/commons/numbers/fraction/BigFraction.java'],NUMBERS-91: Removal of percentageValue method,NUMBERS-91
74a4601e38b6f392766b7320b3343f86cc73aee4,ericbarnhill,ebarnhill,1,['commons-numbers-fraction/src/main/java/org/apache/commons/numbers/fraction/BigFraction.java'],"NUMBERS-91: Added ofInt() factory methods and made BigInteger-based
constructor private",NUMBERS-91
b660a28ef035366c95496df62428c39ddac86f63,ericbarnhill,ebarnhill,1,['commons-numbers-fraction/src/main/java/org/apache/commons/numbers/fraction/Fraction.java'],NUMBERS-75: Removal of unused BigInteger import,NUMBERS-75
f9b82131f6e1be74a952ad2b49d1037c40db9bcc,ericbarnhill,ebarnhill,2,"['commons-numbers-fraction/src/main/java/org/apache/commons/numbers/fraction/Fraction.java', 'commons-numbers-fraction/src/test/java/org/apache/commons/numbers/fraction/FractionTest.java']","NUMBERS-75: Fraction passes all FractionTests after updating

FractionTest methods to factory methods.",NUMBERS-75
0f39a123294337e946d6a3c858b83ed7f9f59e70,leventov,ebarnhill,5,"['commons-numbers-angle/src/main/java/org/apache/commons/numbers/angle/PlaneAngle.java', 'commons-numbers-complex/src/main/java/org/apache/commons/numbers/complex/Complex.java', 'commons-numbers-field/src/main/java/org/apache/commons/numbers/field/FP64.java', 'commons-numbers-field/src/main/java/org/apache/commons/numbers/field/FP64Field.java', 'commons-numbers-gamma/src/main/java/org/apache/commons/numbers/gamma/RegularizedGamma.java']",[NUMBERS-87] Avoid unnecessary allocations in production code,NUMBERS-87
eb3f6a421d933a18247707bdcc231ebf2312e2dc,darkma773r,ebarnhill,1,['commons-numbers-quaternion/src/main/java/org/apache/commons/numbers/quaternion/Slerp.java'],NUMBERS-86: updating Slerp javadocs to specify that the output quaternions are in positive polar form,NUMBERS-86
e83eb90a8cd975c41185b3e0fbdef25d3147197d,darkma773r,ebarnhill,1,['commons-numbers-quaternion/src/main/java/org/apache/commons/numbers/quaternion/Slerp.java'],NUMBERS-86: fixing issue with Slerp.apply() returning end quaternion that is not in positive polar format,NUMBERS-86
f22102a7238f1f9bc83bb9162dd55eacf36fb1af,darkma773r,ebarnhill,1,['commons-numbers-quaternion/src/test/java/org/apache/commons/numbers/quaternion/SlerpTest.java'],NUMBERS-86: adding Slerp unit tests; tests currently fail,NUMBERS-86
0dcb855f269bd668ef0cdfb38e503ca3cdb203c3,,ebarnhill,1,['pom.xml'],"Upgrade dependencies.

Build now passes on JDK 10.  Thanks to Stefan Bodewig.",
88dded0ae6fc621d52fe27a335ff9be45e32d726,,ebarnhill,1,['commons-numbers-quaternion/src/main/java/org/apache/commons/numbers/quaternion/Quaternion.java'],"Make class final (""ValJO"" requirement).",
d2983952a66921e719fbbbb134137fec8c9e65a6,,ebarnhill,4,"['commons-numbers-angle/src/test/java/org/apache/commons/numbers/angle/PlaneAngleTest.java', 'commons-numbers-fraction/src/main/java/org/apache/commons/numbers/fraction/BigFraction.java', 'commons-numbers-fraction/src/test/java/org/apache/commons/numbers/fraction/BigFractionFormatTest.java', 'commons-numbers-fraction/src/test/java/org/apache/commons/numbers/fraction/BigFractionTest.java']",NUMBERS-83: Replace calls to JDK deprecated API.,NUMBERS-83
28f7cdd76ab7140770c290a37eeb461177b76280,,ebarnhill,2,"['commons-numbers-core/src/main/java/org/apache/commons/numbers/core/Precision.java', 'commons-numbers-core/src/test/java/org/apache/commons/numbers/core/PrecisionTest.java']",NUMBERS-83: Replace calls to JDK deprecated API.,NUMBERS-83
76aa507ea1018a995512285c630a8dcd0aa26ee8,,ebarnhill,4,"['commons-numbers-complex-streams/src/main/java/org/apache/commons/numbers/complex/streams/ComplexUtils.java', 'commons-numbers-core/src/test/java/org/apache/commons/numbers/core/TestUtils.java', 'commons-numbers-primes/src/main/java/org/apache/commons/numbers/primes/Primes.java', 'commons-numbers-primes/src/main/java/org/apache/commons/numbers/primes/SmallPrimes.java']",Javadoc (remove spurious lines).,
d398d1b4b464dec065cc9ca58d702c7284db8617,NGimhana,ebarnhill,6,"['commons-numbers-complex-streams/src/main/java/org/apache/commons/numbers/complex/streams/ComplexUtils.java', 'commons-numbers-complex-streams/src/test/java/org/apache/commons/numbers/complex/streams/TestUtils.java', 'commons-numbers-complex/src/test/java/org/apache/commons/numbers/complex/TestUtils.java', 'commons-numbers-core/src/test/java/org/apache/commons/numbers/core/TestUtils.java', 'commons-numbers-primes/src/main/java/org/apache/commons/numbers/primes/Primes.java', 'commons-numbers-primes/src/main/java/org/apache/commons/numbers/primes/SmallPrimes.java']",NUMBERS-25: Remove @since javadoc tags,NUMBERS-25
ffd76e2f9c7c017c5176cfedd0b17061dfb7d2e3,,ebarnhill,2,"['commons-numbers-quaternion/src/main/java/org/apache/commons/numbers/quaternion/Slerp.java', 'commons-numbers-quaternion/src/test/java/org/apache/commons/numbers/quaternion/SlerpTest.java']","NUMBERS-85: Implement the ""slerp"" algorithm.

Unit tests are missing; they must be adapted from the test suite in ""Commons Geometry"".",NUMBERS-85
47eb84dbad5ce41a20a90e0360d74588f83a99bd,,ebarnhill,1,['commons-numbers-quaternion/src/test/java/org/apache/commons/numbers/quaternion/QuaternionTest.java'],Nit (less verbose unit tests).,
f45f0a173509110db7c292f512315f8450e2956c,,ebarnhill,1,['commons-numbers-quaternion/src/main/java/org/apache/commons/numbers/quaternion/Quaternion.java'],Ordering of the preconditions.,
c7dd20664fceee9cd4fca5512f075ab3503f2b49,darkma773r,ebarnhill,2,"['commons-numbers-quaternion/src/main/java/org/apache/commons/numbers/quaternion/Quaternion.java', 'commons-numbers-quaternion/src/test/java/org/apache/commons/numbers/quaternion/QuaternionTest.java']",NUMBERS-84: Adding NaN and infinite checks to Quaternion normalize() and inverse(),NUMBERS-84
176d0c878701ad888357c3acdaf3f699faec9222,,ebarnhill,1,['commons-numbers-quaternion/src/test/java/org/apache/commons/numbers/quaternion/QuaternionTest.java'],Unit tests.,
bd3112450a97ea4acb591b37c414023af58c4a85,,ebarnhill,1,['commons-numbers-quaternion/src/main/java/org/apache/commons/numbers/quaternion/Quaternion.java'],CheckStyle.,
a509de5db07210462645f768b01ce1e19b5c8b18,,ebarnhill,2,"['commons-numbers-quaternion/src/main/java/org/apache/commons/numbers/quaternion/Quaternion.java', 'commons-numbers-quaternion/src/test/java/org/apache/commons/numbers/quaternion/QuaternionTest.java']","NUMBERS-76: Refactoring so class can be final (ValJO criterion).

Instead of overriding methods, specialized implementations are triggered according to a ""type"" instance field.

A couple of methods and a constant were renamed.",NUMBERS-76
5e9c61f0f5b39c16b1050ddc474e91681336c873,,ebarnhill,1,['.travis.yml'],NUMBERS-21: Target Java 8.,NUMBERS-21
3c0f0be094d6e0fbb3642178e84205c4274abf6c,,ebarnhill,1,['pom.xml'],NUMBERS-21: Target Java 8.,NUMBERS-21
407765170e7d9f019b033044e45345e73a75629e,ericbarnhill,ebarnhill,2,"['commons-numbers-fraction/src/test/java/org/apache/commons/numbers/fraction/FractionFormatTest.java', 'commons-numbers-fraction/src/test/java/org/apache/commons/numbers/fraction/FractionTest.java']",NUMBERS-74: Conformed unit tests to new factory methods,NUMBERS-74
41ca540bee293928dac0cfde74d958938d7baac8,ericbarnhill,ebarnhill,2,"['commons-numbers-fraction/src/main/java/org/apache/commons/numbers/fraction/FractionFormat.java', 'commons-numbers-fraction/src/main/java/org/apache/commons/numbers/fraction/ProperFractionFormat.java']",NUMBERS-74: Format classes use new Fraction factory methods,NUMBERS-74
d766bac7f0c17728f82ce4b30f3e5079de555d35,ericbarnhill,ebarnhill,1,['commons-numbers-fraction/src/main/java/org/apache/commons/numbers/fraction/Fraction.java'],NUMBERS-74: ofInt() methods now static,NUMBERS-74
78bf4b87c816f04484adfeda7311a1b06752b230,ericbarnhill,ebarnhill,1,['commons-numbers-fraction/src/main/java/org/apache/commons/numbers/fraction/Fraction.java'],NUMBERS-74: Convert new Fraction factory methods to static,NUMBERS-74
7c2486362b64201fd8dc19b2df12aefba2a4165a,ericbarnhill,ebarnhill,1,['commons-numbers-fraction/src/main/java/org/apache/commons/numbers/fraction/Fraction.java'],"NUMBERS-79: Fraction.add() and .subtract() are long-based

Converted add() and subtract() methods of Fraction class to long-based
operations with recommendation to use BigFraction for very large
numerators and denominators. Updated corresponding documentation.",NUMBERS-79
4ab6e3e37805552cb41f71946439d2e1373c3357,ebarnhill,ebarnhill,1,['commons-numbers-fraction/src/main/java/org/apache/commons/numbers/fraction/Fraction.java'],NUMBERS-75: Removal of private constructors and replacement with of* factory methods,NUMBERS-75
cfad08c08b18bec5cde044aa547e8c060e9bfac4,aherbert,web-flow,2,"['commons-numbers-arrays/src/main/java/org/apache/commons/numbers/arrays/LinearCombination.java', 'pom.xml']","Merge pull request #32 from aherbert/fix-NUMBERS-58

NUMBERS-58: Fix MathJax for mvn javadoc plugin v3",
95c49d3f0150b6b73e04cdfc9192d4d31bef70d9,aherbert,aherbert,2,"['commons-numbers-arrays/src/main/java/org/apache/commons/numbers/arrays/LinearCombination.java', 'pom.xml']",NUMBERS-58: Fix MathJax for mvn javadoc plugin v3,NUMBERS-58
55e07ae99581327c278abc955c7bb3413c285dac,,,2,"['commons-numbers-angle/src/main/java/org/apache/commons/numbers/angle/PlaneAngle.java', 'commons-numbers-angle/src/test/java/org/apache/commons/numbers/angle/PlaneAngleTest.java']","Merge branch 'NUMBERS-94__matt'

Closes #30.",
56cde56fdf5d5661cc8ccfd1d3928e9ca9b52b7d,,,1,['commons-numbers-angle/src/main/java/org/apache/commons/numbers/angle/PlaneAngle.java'],"Use ""final"".",
00b2b5621ed39141d81b92b3fa3ba96a4e54c1c1,darkma773r,darkma773r,2,"['commons-numbers-angle/src/main/java/org/apache/commons/numbers/angle/PlaneAngle.java', 'commons-numbers-angle/src/test/java/org/apache/commons/numbers/angle/PlaneAngleTest.java']",NUMBERS-94: adding extra check to PlaneAngle.normalize() to handle very small numbers,NUMBERS-94
463183281c06a2398a70a00651fbb5feab5b0413,,,4,"['commons-numbers-angle/src/main/java/org/apache/commons/numbers/angle/PlaneAngle.java', 'commons-numbers-angle/src/main/java/org/apache/commons/numbers/angle/PlaneAngleRadians.java', 'commons-numbers-angle/src/test/java/org/apache/commons/numbers/angle/PlaneAngleRadiansTest.java', 'commons-numbers-angle/src/test/java/org/apache/commons/numbers/angle/PlaneAngleTest.java']","Merge branch 'fix_NUMBERS-93__matt'

Closes #29.",
3d8301fecc030e19436e4f7289b1e01192f660dc,darkma773r,darkma773r,4,"['commons-numbers-angle/src/main/java/org/apache/commons/numbers/angle/PlaneAngle.java', 'commons-numbers-angle/src/main/java/org/apache/commons/numbers/angle/PlaneAngleRadians.java', 'commons-numbers-angle/src/test/java/org/apache/commons/numbers/angle/PlaneAngleRadiansTest.java', 'commons-numbers-angle/src/test/java/org/apache/commons/numbers/angle/PlaneAngleTest.java']",NUMBERS-93: Updating documentation for PlaneAngle#normalize() to specify that the upper bound is exclusive; adding unit tests for these cases,NUMBERS-93
2db8cdfdc65326a4a7e86c004c7c147a645944b0,,,4,"['commons-numbers-quaternion/src/main/java/org/apache/commons/numbers/quaternion/Quaternion.java', 'commons-numbers-quaternion/src/main/java/org/apache/commons/numbers/quaternion/Slerp.java', 'commons-numbers-quaternion/src/test/java/org/apache/commons/numbers/quaternion/QuaternionTest.java', 'commons-numbers-quaternion/src/test/java/org/apache/commons/numbers/quaternion/SlerpTest.java']","Merge branch 'task__NUMBERS-89__matt'

Closes #27.",
ea36bda6c34ede15cc8b352a20ffbb9875f40890,,,1,['commons-numbers-quaternion/src/main/java/org/apache/commons/numbers/quaternion/Quaternion.java'],Nit.,
b18117ec0725d6087097e33fd3a8ef0f18347e28,darkma773r,,1,['commons-numbers-quaternion/src/main/java/org/apache/commons/numbers/quaternion/Quaternion.java'],updating docs to specify the order of quaternion components; renaming parameters to match component names,
b67f72e30d651304c4669122039770f88f814868,darkma773r,,4,"['commons-numbers-quaternion/src/main/java/org/apache/commons/numbers/quaternion/Quaternion.java', 'commons-numbers-quaternion/src/main/java/org/apache/commons/numbers/quaternion/Slerp.java', 'commons-numbers-quaternion/src/test/java/org/apache/commons/numbers/quaternion/QuaternionTest.java', 'commons-numbers-quaternion/src/test/java/org/apache/commons/numbers/quaternion/SlerpTest.java']",NUMBERS-89: changing dotProduct() to dot() to match convention in commons-geometry,NUMBERS-89
d6d7b047cd45530986c34a3e66a1251940d6f7e9,,,5,"['commons-numbers-angle/src/main/java/org/apache/commons/numbers/angle/PlaneAngle.java', 'commons-numbers-complex/src/main/java/org/apache/commons/numbers/complex/Complex.java', 'commons-numbers-field/src/main/java/org/apache/commons/numbers/field/FP64.java', 'commons-numbers-field/src/main/java/org/apache/commons/numbers/field/FP64Field.java', 'commons-numbers-gamma/src/main/java/org/apache/commons/numbers/gamma/RegularizedGamma.java']","Merge branch 'fix_NUMBERS-87__roman'

Closes #25.",
e29dff1e3adbab30d4041636de9d9e59649ec2b2,leventov,leventov,5,"['commons-numbers-angle/src/main/java/org/apache/commons/numbers/angle/PlaneAngle.java', 'commons-numbers-complex/src/main/java/org/apache/commons/numbers/complex/Complex.java', 'commons-numbers-field/src/main/java/org/apache/commons/numbers/field/FP64.java', 'commons-numbers-field/src/main/java/org/apache/commons/numbers/field/FP64Field.java', 'commons-numbers-gamma/src/main/java/org/apache/commons/numbers/gamma/RegularizedGamma.java']",[NUMBERS-87] Avoid unnecessary allocations in production code,NUMBERS-87
c64fa8ae373cb8c71e3754788529d298a4d051a5,,,2,"['commons-numbers-quaternion/src/main/java/org/apache/commons/numbers/quaternion/Slerp.java', 'commons-numbers-quaternion/src/test/java/org/apache/commons/numbers/quaternion/SlerpTest.java']","Merge branch 'task_NUMBERS-86__matt'

Closes #24.",
7fce9120288013e979c959fa173c273af418a073,darkma773r,darkma773r,1,['commons-numbers-quaternion/src/main/java/org/apache/commons/numbers/quaternion/Slerp.java'],NUMBERS-86: updating Slerp javadocs to specify that the output quaternions are in positive polar form,NUMBERS-86
e072c34ab57e1095c5e828e78f6305bc5dc787fe,darkma773r,darkma773r,1,['commons-numbers-quaternion/src/main/java/org/apache/commons/numbers/quaternion/Slerp.java'],NUMBERS-86: fixing issue with Slerp.apply() returning end quaternion that is not in positive polar format,NUMBERS-86
866561ea714cdc1c13158a0233127b5efa210741,darkma773r,darkma773r,1,['commons-numbers-quaternion/src/test/java/org/apache/commons/numbers/quaternion/SlerpTest.java'],NUMBERS-86: adding Slerp unit tests; tests currently fail,NUMBERS-86
acbe5add1095e753dd176c9fd60c3cdc7fea0e43,,,1,['pom.xml'],"Upgrade dependencies.

Build now passes on JDK 10.  Thanks to Stefan Bodewig.",
e08f7b5e5d89d2020a9740ec53f5e743db7a6877,,,1,['commons-numbers-quaternion/src/main/java/org/apache/commons/numbers/quaternion/Quaternion.java'],"Make class final (""ValJO"" requirement).",
d0cff0d8f2a249e6c87df323fe635386749f62f4,,,4,"['commons-numbers-angle/src/test/java/org/apache/commons/numbers/angle/PlaneAngleTest.java', 'commons-numbers-fraction/src/main/java/org/apache/commons/numbers/fraction/BigFraction.java', 'commons-numbers-fraction/src/test/java/org/apache/commons/numbers/fraction/BigFractionFormatTest.java', 'commons-numbers-fraction/src/test/java/org/apache/commons/numbers/fraction/BigFractionTest.java']",NUMBERS-83: Replace calls to JDK deprecated API.,NUMBERS-83
6d2675bc4e8908c52a5447d63f7e3719c2cfebae,,,2,"['commons-numbers-core/src/main/java/org/apache/commons/numbers/core/Precision.java', 'commons-numbers-core/src/test/java/org/apache/commons/numbers/core/PrecisionTest.java']",NUMBERS-83: Replace calls to JDK deprecated API.,NUMBERS-83
2b89e648c79caa217f9ebec3da76ebf9aa53f443,,,6,"['commons-numbers-complex-streams/src/main/java/org/apache/commons/numbers/complex/streams/ComplexUtils.java', 'commons-numbers-complex-streams/src/test/java/org/apache/commons/numbers/complex/streams/TestUtils.java', 'commons-numbers-complex/src/test/java/org/apache/commons/numbers/complex/TestUtils.java', 'commons-numbers-core/src/test/java/org/apache/commons/numbers/core/TestUtils.java', 'commons-numbers-primes/src/main/java/org/apache/commons/numbers/primes/Primes.java', 'commons-numbers-primes/src/main/java/org/apache/commons/numbers/primes/SmallPrimes.java']","Merge branch 'task_NUMBERS-25__gimo'

Closes #22.",
392abe9c304ba08f45be37ab718ae6eb1b712ce5,,,4,"['commons-numbers-complex-streams/src/main/java/org/apache/commons/numbers/complex/streams/ComplexUtils.java', 'commons-numbers-core/src/test/java/org/apache/commons/numbers/core/TestUtils.java', 'commons-numbers-primes/src/main/java/org/apache/commons/numbers/primes/Primes.java', 'commons-numbers-primes/src/main/java/org/apache/commons/numbers/primes/SmallPrimes.java']",Javadoc (remove spurious lines).,
cfaba895122f78ffc6cf6640c258589d9a6da14f,NGimhana,,6,"['commons-numbers-complex-streams/src/main/java/org/apache/commons/numbers/complex/streams/ComplexUtils.java', 'commons-numbers-complex-streams/src/test/java/org/apache/commons/numbers/complex/streams/TestUtils.java', 'commons-numbers-complex/src/test/java/org/apache/commons/numbers/complex/TestUtils.java', 'commons-numbers-core/src/test/java/org/apache/commons/numbers/core/TestUtils.java', 'commons-numbers-primes/src/main/java/org/apache/commons/numbers/primes/Primes.java', 'commons-numbers-primes/src/main/java/org/apache/commons/numbers/primes/SmallPrimes.java']",NUMBERS-25: Remove @since javadoc tags,NUMBERS-25
fd2fb49e14832ee28f361d558305a8886b15ad76,,,2,"['commons-numbers-quaternion/src/main/java/org/apache/commons/numbers/quaternion/Slerp.java', 'commons-numbers-quaternion/src/test/java/org/apache/commons/numbers/quaternion/SlerpTest.java']","NUMBERS-85: Implement the ""slerp"" algorithm.

Unit tests are missing; they must be adapted from the test suite in ""Commons Geometry"".",NUMBERS-85
a9cd5d9c510a4323bb05f822be440526e3b5d068,,,1,['commons-numbers-quaternion/src/test/java/org/apache/commons/numbers/quaternion/QuaternionTest.java'],Nit (less verbose unit tests).,
d7fe20e5d71fe6b473d9491f4a09beafe52633f0,,,2,"['commons-numbers-quaternion/src/main/java/org/apache/commons/numbers/quaternion/Quaternion.java', 'commons-numbers-quaternion/src/test/java/org/apache/commons/numbers/quaternion/QuaternionTest.java']","Merge branch 'fix_NUMBERS-84__matt'

Closes #21.",
3eedf4c2b0654f55d8cf02ca0a16124db4e9aef3,,,1,['commons-numbers-quaternion/src/main/java/org/apache/commons/numbers/quaternion/Quaternion.java'],Ordering of the preconditions.,
9076074737bfc5bcbc64d675a084bea981261715,darkma773r,,2,"['commons-numbers-quaternion/src/main/java/org/apache/commons/numbers/quaternion/Quaternion.java', 'commons-numbers-quaternion/src/test/java/org/apache/commons/numbers/quaternion/QuaternionTest.java']",NUMBERS-84: Adding NaN and infinite checks to Quaternion normalize() and inverse(),NUMBERS-84
59af118b192a2d97939baacb56236684f5a0b7c7,,,1,['commons-numbers-quaternion/src/test/java/org/apache/commons/numbers/quaternion/QuaternionTest.java'],Unit tests.,
bf1d61e51a1dc77cdf3b3e5ec855f70055a66ea6,,,1,['commons-numbers-quaternion/src/main/java/org/apache/commons/numbers/quaternion/Quaternion.java'],CheckStyle.,
c0bf9f7d93c9f5fd09bd123a089614727ee1ad6e,,,2,"['commons-numbers-quaternion/src/main/java/org/apache/commons/numbers/quaternion/Quaternion.java', 'commons-numbers-quaternion/src/test/java/org/apache/commons/numbers/quaternion/QuaternionTest.java']","NUMBERS-76: Refactoring so class can be final (ValJO criterion).

Instead of overriding methods, specialized implementations are triggered according to a ""type"" instance field.

A couple of methods and a constant were renamed.",NUMBERS-76
1ba991825d3e62d6350d238f78b46d09d545077f,,,1,['.travis.yml'],NUMBERS-21: Target Java 8.,NUMBERS-21
317076df3dc11d9ea9ad0baaea1a26073adf052b,,,1,['pom.xml'],NUMBERS-21: Target Java 8.,NUMBERS-21
9186804d0fcc4b21d1ba4b974aa4275232df1bec,,,2,"['commons-numbers-quaternion/src/main/java/org/apache/commons/numbers/quaternion/Quaternion.java', 'commons-numbers-quaternion/src/test/java/org/apache/commons/numbers/quaternion/QuaternionTest.java']",NUMBERS-80: Rename method.,NUMBERS-80
11f5f1add25d6113e0888b2d1ea225d2d18d9588,,,2,"['commons-numbers-angle/src/main/java/org/apache/commons/numbers/angle/PlaneAngle.java', 'commons-numbers-complex/src/main/java/org/apache/commons/numbers/complex/Complex.java']",NUMBERS-83: Replace calls to JDK deprecated API.,NUMBERS-83
d216fe76769afcd8d271ba39038251bb5b9a4659,,,2,"['commons-numbers-quaternion/src/main/java/org/apache/commons/numbers/quaternion/Quaternion.java', 'commons-numbers-quaternion/src/test/java/org/apache/commons/numbers/quaternion/QuaternionTest.java']",NUMBERS-80: Specialized implementations for normalized and positive polar form quaternions.,NUMBERS-80
50cf08d973fcf5956467a4936d3c25598d6576ce,,,1,['commons-numbers-quaternion/src/main/java/org/apache/commons/numbers/quaternion/Quaternion.java'],NUMBERS-80: Method rename.,NUMBERS-80
1d872c64a5a410f07cd81e638002092704ff5af6,,,2,"['commons-numbers-quaternion/src/main/java/org/apache/commons/numbers/quaternion/Quaternion.java', 'commons-numbers-quaternion/src/test/java/org/apache/commons/numbers/quaternion/QuaternionTest.java']",NUMBERS-80: Renamed instance fields.,NUMBERS-80
51aa18f2572bbc88d17abe255ed35028873abf22,,,3,"['pom.xml', 'src/site/site.xml', 'src/site/xdoc/developers.xml']","INFRA-17379: Repository moved to ""gitbox"".",INFRA-17379
8b47349cef1ee4e3c5f8037ed5aad5b1d494cb1e,,,1,['pom.xml'],Avoid crash of the surefire plugin.,
9de66c2f50de858ba49fea816c3abed8168180cd,,,6,"['commons-numbers-complex-streams/src/main/java/org/apache/commons/numbers/complex/streams/ComplexUtils.java', 'commons-numbers-complex-streams/src/site/site.xml', 'commons-numbers-complex-streams/src/test/java/org/apache/commons/numbers/complex/streams/ComplexUtilsTest.java', 'commons-numbers-complex-streams/src/test/java/org/apache/commons/numbers/complex/streams/TestUtils.java', 'commons-numbers-complex/src/site/site.xml', 'pom.xml']","Merge branch 'fix_NUMBERS-56__steve'

Closes #18",
2a1989a919a0f3ccd0fb706f73649a3cd6c47d29,,,2,"['commons-numbers-complex-streams/src/site/site.xml', 'commons-numbers-complex/src/site/site.xml']",Add files (web site).,
63f80b19cf1f12d4a1fa31bcbe183c55d22d77a5,,,1,['pom.xml'],"Update POM.

Upgrade to CP 47.
Remove redundant configurations.",
bd8d91cfe0cc15e0b695b00fcfc43d5d8b627aa4,stevebosman,stevebosman,1,['commons-numbers-complex-streams/src/test/java/org/apache/commons/numbers/complex/streams/ComplexUtilsTest.java'],NUMBERS-56 Add missing unit tests and fix a couple of bugs in ComplexUtils (tidy up test array creation),NUMBERS-56
cfa71fc12f6a48d1d37e7e389a025dc8cea971b6,stevebosman,stevebosman,3,"['commons-numbers-complex-streams/src/main/java/org/apache/commons/numbers/complex/streams/ComplexUtils.java', 'commons-numbers-complex-streams/src/test/java/org/apache/commons/numbers/complex/streams/ComplexUtilsTest.java', 'commons-numbers-complex-streams/src/test/java/org/apache/commons/numbers/complex/streams/TestUtils.java']",[NUMBERS-56] Fix dimension check; improve test coverage and fix other bugs found.,NUMBERS-56
44e5614893a17a90d66095ba4dff1a742bba8884,,,1,['commons-numbers-quaternion/src/main/java/org/apache/commons/numbers/quaternion/Quaternion.java'],Nit (code formatting).,
851f85cc92868acef7a892215554c235d8c46ac7,,,3,"['commons-numbers-complex/src/main/java/org/apache/commons/numbers/complex/Complex.java', 'commons-numbers-quaternion/src/main/java/org/apache/commons/numbers/quaternion/Quaternion.java', 'commons-numbers-quaternion/src/test/java/org/apache/commons/numbers/quaternion/QuaternionTest.java']","Merge branch 'NUMBERS-76__steve'

Closes #17.",
f4bafc24f3267340e00e39ee4983e349361bb4c0,,,1,['commons-numbers-quaternion/src/test/java/org/apache/commons/numbers/quaternion/QuaternionTest.java'],Simplify unit tests.,
daa6a0616ac85869a2e078eb276438380643398a,,,2,"['commons-numbers-complex/src/main/java/org/apache/commons/numbers/complex/Complex.java', 'commons-numbers-quaternion/src/main/java/org/apache/commons/numbers/quaternion/Quaternion.java']",Use named constants.,
a058f4127604e745cf44661ad6f23a33557ea89d,,,1,['commons-numbers-quaternion/src/main/java/org/apache/commons/numbers/quaternion/Quaternion.java'],Restrict visibility.,
2d454318eae9686192d4eb6b1fd4b330088b03be,,,1,['commons-numbers-quaternion/src/main/java/org/apache/commons/numbers/quaternion/Quaternion.java'],"Javadoc.

Actual exception type is not part of the public API.",
e9e0164fbb9676034a6c3597d2e63d2505295346,stevebosman,stevebosman,1,['commons-numbers-quaternion/src/main/java/org/apache/commons/numbers/quaternion/Quaternion.java'],"NUMBERS-76 Make ""Quaternion"" a VALJO - Fix Checkstyle issues",NUMBERS-76
2f33d38d6ec5513ebbad44ffad237ebbc1ae9199,stevebosman,stevebosman,1,['commons-numbers-quaternion/src/main/java/org/apache/commons/numbers/quaternion/Quaternion.java'],"NUMBERS-76 Make ""Quaternion"" a VALJO - correct Javadoc",NUMBERS-76
9c6f77801265abe079b4054c3c90d55e956ee7cd,stevebosman,stevebosman,2,"['commons-numbers-quaternion/src/main/java/org/apache/commons/numbers/quaternion/Quaternion.java', 'commons-numbers-quaternion/src/test/java/org/apache/commons/numbers/quaternion/QuaternionTest.java']","NUMBERS-76 Make ""Quaternion"" a VALJO",NUMBERS-76
447ced4cc9f53ed3dbf02588599c9797aabb1ea7,,,3,"['commons-numbers-complex-streams/src/site/xdoc/index.xml', 'commons-numbers-complex/src/site/xdoc/index.xml', 'commons-numbers-fraction/src/site/xdoc/index.xml']",Web site files.,
b36e21d9ad3f89aa4d75eca52158ec9c7196a511,,,21,"['src/site/xdoc/userguide/analysis.xml', 'src/site/xdoc/userguide/complex.xml', 'src/site/xdoc/userguide/core.xml', 'src/site/xdoc/userguide/distribution.xml', 'src/site/xdoc/userguide/exceptions.xml', 'src/site/xdoc/userguide/filter.xml', 'src/site/xdoc/userguide/fitting.xml', 'src/site/xdoc/userguide/fraction.xml', 'src/site/xdoc/userguide/genetics.xml', 'src/site/xdoc/userguide/geometry.xml', 'src/site/xdoc/userguide/index.xml', 'src/site/xdoc/userguide/leastsquares.xml', 'src/site/xdoc/userguide/linear.xml', 'src/site/xdoc/userguide/ml.xml', 'src/site/xdoc/userguide/ode.xml', 'src/site/xdoc/userguide/optimization.xml', 'src/site/xdoc/userguide/overview.xml', 'src/site/xdoc/userguide/random.xml', 'src/site/xdoc/userguide/stat.xml', 'src/site/xdoc/userguide/transform.xml', 'src/site/xdoc/userguide/utilities.xml']","NUMBERS-70: Delete files describing ""Commons Math"" (userguide).",NUMBERS-70
fff24948c7f89fd9f00e721c0c5e06cbe75dc92b,,,21,"['commons-numbers-core/src/main/java/org/apache/commons/numbers/core/Addition.java', 'commons-numbers-core/src/main/java/org/apache/commons/numbers/core/Multiplication.java', 'commons-numbers-core/src/main/java/org/apache/commons/numbers/core/NativeOperators.java', 'commons-numbers-field/LICENSE.txt', 'commons-numbers-field/NOTICE.txt', 'commons-numbers-field/README.md', 'commons-numbers-field/pom.xml', 'commons-numbers-field/src/main/java/org/apache/commons/numbers/field/AbstractField.java', 'commons-numbers-field/src/main/java/org/apache/commons/numbers/field/FP64.java', 'commons-numbers-field/src/main/java/org/apache/commons/numbers/field/FP64Field.java', 'commons-numbers-field/src/main/java/org/apache/commons/numbers/field/Field.java', 'commons-numbers-field/src/main/java/org/apache/commons/numbers/field/FractionField.java', 'commons-numbers-field/src/main/java/org/apache/commons/numbers/field/package-info.java', 'commons-numbers-field/src/site/resources/profile.jacoco', 'commons-numbers-field/src/site/site.xml', 'commons-numbers-field/src/site/xdoc/index.xml', 'commons-numbers-field/src/test/java/org/apache/commons/numbers/field/FieldParametricTest.java', 'commons-numbers-field/src/test/java/org/apache/commons/numbers/field/FieldTestData.java', 'commons-numbers-field/src/test/java/org/apache/commons/numbers/field/FieldsList.java', 'commons-numbers-fraction/src/main/java/org/apache/commons/numbers/fraction/Fraction.java', 'pom.xml']",Merge branch 'feature__NUMBERS-51',
3b3c9b33a2e42223405053a624e09ef06e6a724f,,,1,['commons-numbers-field/src/main/java/org/apache/commons/numbers/field/FP64.java'],Javadoc.,
e5755c38ae0ee467d04a287c6e729ff6e0931eb2,,,1,['commons-numbers-field/src/site/resources/profile.jacoco'],Jacoco trigger file.,
7c8dc8ff351c76dd88231387c6db069cb4b9d000,,,1,['commons-numbers-field/src/main/java/org/apache/commons/numbers/field/FP64.java'],Add methods.,
27115fd062937cfa166e5d58fb0a21198ef38f0b,,,1,['commons-numbers-fraction/src/main/java/org/apache/commons/numbers/fraction/Fraction.java'],Trailing spaces.,
0dc4b0b6239329263a0c51e7662adcb1e00fb1db,,,20,"['commons-numbers-core/src/main/java/org/apache/commons/numbers/core/Addition.java', 'commons-numbers-core/src/main/java/org/apache/commons/numbers/core/Multiplication.java', 'commons-numbers-core/src/main/java/org/apache/commons/numbers/core/NativeOperators.java', 'commons-numbers-field/LICENSE.txt', 'commons-numbers-field/NOTICE.txt', 'commons-numbers-field/README.md', 'commons-numbers-field/pom.xml', 'commons-numbers-field/src/main/java/org/apache/commons/numbers/field/AbstractField.java', 'commons-numbers-field/src/main/java/org/apache/commons/numbers/field/FP64.java', 'commons-numbers-field/src/main/java/org/apache/commons/numbers/field/FP64Field.java', 'commons-numbers-field/src/main/java/org/apache/commons/numbers/field/Field.java', 'commons-numbers-field/src/main/java/org/apache/commons/numbers/field/FractionField.java', 'commons-numbers-field/src/main/java/org/apache/commons/numbers/field/package-info.java', 'commons-numbers-field/src/site/site.xml', 'commons-numbers-field/src/site/xdoc/index.xml', 'commons-numbers-field/src/test/java/org/apache/commons/numbers/field/FieldParametricTest.java', 'commons-numbers-field/src/test/java/org/apache/commons/numbers/field/FieldTestData.java', 'commons-numbers-field/src/test/java/org/apache/commons/numbers/field/FieldsList.java', 'commons-numbers-fraction/src/main/java/org/apache/commons/numbers/fraction/Fraction.java', 'pom.xml']",Merge branch 'feature__NUMBERS-51__field' into feature__NUMBERS-51,
40418955926ced67c155cf03009a0f4b54c8440b,,,11,"['commons-numbers-complex-streams/LICENSE.txt', 'commons-numbers-complex-streams/NOTICE.txt', 'commons-numbers-complex-streams/README.md', 'commons-numbers-complex-streams/pom.xml', 'commons-numbers-complex-streams/src/main/java/org/apache/commons/numbers/complex/streams/ComplexUtils.java', 'commons-numbers-complex-streams/src/main/java/org/apache/commons/numbers/complex/streams/package-info.java', 'commons-numbers-complex-streams/src/site/resources/profile.jacoco', 'commons-numbers-complex-streams/src/test/java/org/apache/commons/numbers/complex/streams/ComplexUtilsTest.java', 'commons-numbers-complex-streams/src/test/java/org/apache/commons/numbers/complex/streams/TestUtils.java', 'commons-numbers-complex/src/test/java/org/apache/commons/numbers/complex/ComplexTest.java', 'pom.xml']","NUMBERS-54: Create module ""commons-numbers-complex-streams"".

Class ""ComplexUtils"" moved over to the new module.",NUMBERS-54
8e0af85b674c00c777d5233e5cd8c4214e756e99,,,1,['commons-numbers-complex/src/main/java/org/apache/commons/numbers/complex/Complex.java.orig'],Removed spurious file.,
65b5d844c4f1258dfac41fb595906854ca83a9be,,,1,['commons-numbers-complex/src/main/java/org/apache/commons/numbers/complex/Complex.java'],Add serial version identifier.,
fcccb0ecfa5a855de8909c6644f19262845e8587,,,1,['commons-numbers-complex/src/main/java/org/apache/commons/numbers/complex/Complex.java'],Fixed wrong operator.,
03384e60dab8c6ac9a44c5bd9e9397b342b140fb,,,2,"['commons-numbers-complex/src/main/java/org/apache/commons/numbers/complex/Complex.java', 'commons-numbers-complex/src/test/java/org/apache/commons/numbers/complex/ComplexTest.java']","NUMBERS-68: Implement ""parse"" as the inverse function of ""toString"".

The string representation handled by both methods is fixed (as is the case
for the JDK number classes).",NUMBERS-68
d22b6d86356096afe8d5681c1035a68791470342,ericbarnhill,ericbarnhill,1,['commons-numbers-complex/src/main/java/org/apache/commons/numbers/complex/Complex.java'],NUMBERS-68: Added parse() method to Complex(). TODO: Add testing.,NUMBERS-68
c2fadea8bb865290b782d8a845588741c82806df,ericbarnhill,ericbarnhill,2,"['commons-numbers-complex/src/main/java/org/apache/commons/numbers/complex/RootsOfUnity.java', 'commons-numbers-complex/src/test/java/org/apache/commons/numbers/complex/RootsOfUnityTest.java']",NUMBERS-65: Deleted RootsOfUnity and RootsOfUnityTest.,NUMBERS-65
fa5da2ab49420b3475d615b4ea14ae3dd04af854,ericbarnhill,ericbarnhill,2,"['commons-numbers-complex/src/main/java/org/apache/commons/numbers/complex/Complex.java', 'commons-numbers-complex/src/test/java/org/apache/commons/numbers/complex/ComplexTest.java']",NUMBERS-65: Did not commit all changes in previous commit.,NUMBERS-65
a57399c7ae6e2e1c6919e34014f602a1eeccfd87,ericbarnhill,ericbarnhill,1,['commons-numbers-complex/src/test/java/org/apache/commons/numbers/complex/ComplexTest.java'],"NUMBERS-65: Test added to nthRoot that proceeds around the unit circle
in both directions using pos and neg args.",NUMBERS-65
d3d9c455ecdfd0ac1d8e9c7f7739b8bde782942a,ericbarnhill,ericbarnhill,1,['commons-numbers-complex/src/test/java/org/apache/commons/numbers/complex/ComplexTest.java'],"NUMBERS-65: Changed Nth Root test classes to use camel case (underscores
were used in some tests before)",NUMBERS-65
588a8ddb52ed158fe26eefbeb81b2c7f76197c24,ericbarnhill,ericbarnhill,4,"['commons-numbers-complex/src/main/java/org/apache/commons/numbers/complex/Complex.java', 'pom.xml', 'src/main/resources/spotbugs/spotbugs-exclude-filter.xml', 'src/site/site.xml']",Merge branch 'master' of https://git-wip-us.apache.org/repos/asf/commons-numbers,
b2c947bb831898e6c0340f2e7e98361e7558ac8a,ericbarnhill,ericbarnhill,4,"['commons-numbers-complex/src/main/java/org/apache/commons/numbers/complex/ComplexUtils.java', 'commons-numbers-complex/src/test/java/org/apache/commons/numbers/complex/CStandardTest.java', 'commons-numbers-complex/src/test/java/org/apache/commons/numbers/complex/ComplexTest.java', 'commons-numbers-complex/src/test/java/org/apache/commons/numbers/complex/ComplexUtilsTest.java']",NUMBERS-53: Fixed broken constructors in Utils and Test methods to accommodate ofReal(),NUMBERS-53
4924902d753c639940acc7ca72da38f23cf4e122,ericbarnhill,ericbarnhill,1,['commons-numbers-complex/src/main/java/org/apache/commons/numbers/complex/Complex.java'],NUMBERS-53: Changed factory method for real numbers to ofReal(),NUMBERS-53
3d97283d7acf5f3049761fcb38ac766aa378bd80,,,1,['src/site/site.xml'],Links (web site).,
b2deeb1b338045ed76fbd2b36efc77c56d57ee3b,,,1,['src/main/resources/spotbugs/spotbugs-exclude-filter.xml'],"""SpotBugs"" config file.",
b769356edd2a31bef5475ec9df76c260a2c9155c,,,1,['commons-numbers-complex/src/main/java/org/apache/commons/numbers/complex/Complex.java'],Wrong operator.,
03ce0492ea297d8c420b233aec82e3fb8715a35a,,,1,['pom.xml'],"Replace ""FindBugs"" with ""SpotBugs"".",
39f364a14e5a10727d182b1f15b0d52e0257075c,,,1,['commons-numbers-complex/src/main/java/org/apache/commons/numbers/complex/Complex.java'],Declaration order.,
f872b872a8308fc5569d061a9755755c5654fc96,,,1,['commons-numbers-complex/src/main/java/org/apache/commons/numbers/complex/Complex.java'],"Removed ""readResolve"" method.",
ef955b5f1e533fa7ea42b710039af63c735a928d,,,1,['commons-numbers-complex/src/main/java/org/apache/commons/numbers/complex/Complex.java'],Misalignment.,
670fd1e8a3982540a6695d99cfd9badd6c945a90,,,1,['commons-numbers-complex/src/main/java/org/apache/commons/numbers/complex/Complex.java'],Declaration order (CheckStyle).,
95729d67673dbfaa4a6452339c8a4fb38881623a,ericbarnhill,ericbarnhill,1,['commons-numbers-complex/src/main/java/org/apache/commons/numbers/complex/Complex.java'],NUMBERS-68: made Complex class final.,NUMBERS-68
405f40f232faa1e248704f797e647f789958bfbb,ericbarnhill,ericbarnhill,1,['commons-numbers-complex/src/test/java/org/apache/commons/numbers/complex/ComplexTest.java'],NUMBERS-63: removed sqrt1z() tests as method is now private.,NUMBERS-63
553e49dd33f630339f6b37ad5800c8f8e8d425ed,ericbarnhill,ericbarnhill,1,['commons-numbers-complex/src/main/java/org/apache/commons/numbers/complex/Complex.java'],Changed sqrt1z() method to private,
ad5e98f8b6d11a23ac8aede34ef302d654021b7b,ericbarnhill,ericbarnhill,1,['commons-numbers-complex/src/main/java/org/apache/commons/numbers/complex/Complex.java'],"NUMBERS-64: Removed ""norm"" method",NUMBERS-64
f9076f094ac705cacd4ee6bd8465a2f42e255e0e,ericbarnhill,ericbarnhill,1,['commons-numbers-complex/src/test/java/org/apache/commons/numbers/complex/ComplexTest.java'],NUMBERS-53: Commented-out serial test eliminated,NUMBERS-53
8a1f45e1b7582c04b6296958cf191c59eedbc721,ericbarnhill,ericbarnhill,2,"['commons-numbers-complex/src/main/java/org/apache/commons/numbers/complex/Complex.java', 'commons-numbers-complex/src/main/java/org/apache/commons/numbers/complex/RootsOfUnity.java']",Clean checkstyle for Complex,
84821835de201e2fc90c5a362a9bd8fdfcb15079,ericbarnhill,ericbarnhill,2,"['commons-numbers-complex/src/main/java/org/apache/commons/numbers/complex/Complex.java', 'commons-numbers-complex/src/test/java/org/apache/commons/numbers/complex/ComplexTest.java']","NUMBERS-71: Complex multiplication and division methods have implemented
C++11 standards.",NUMBERS-71
2f23f3e17e0d1c0af516f0147de85d5c01cba45b,ericbarnhill,ericbarnhill,1,['commons-numbers-complex/src/test/java/org/apache/commons/numbers/complex/ComplexTest.java'],NUMBERS-53: Removal of ComplexTest method extending Complex objects,NUMBERS-53
5dd63435ba5d5f470f8d7e59c0f0bdf517d05756,ericbarnhill,ericbarnhill,1,['commons-numbers-complex/src/main/java/org/apache/commons/numbers/complex/ComplexUtils.java'],bugfix in 4d complex2Interleaved,
b867022591eb365476d0df3dce3e1d559369d011,ericbarnhill,ericbarnhill,3,"['commons-numbers-complex/src/test/java/org/apache/commons/numbers/complex/CStandardTest.java', 'commons-numbers-complex/src/test/java/org/apache/commons/numbers/complex/ComplexTest.java', 'commons-numbers-complex/src/test/java/org/apache/commons/numbers/complex/ComplexUtilsTest.java']","NUMBERS-53: Fixes to test classes. Waiting on decision about TestComplex
class.",NUMBERS-53
5166d4beb42c1a71314312197d247ede015c2050,ericbarnhill,ericbarnhill,3,"['commons-numbers-complex/src/main/java/org/apache/commons/numbers/complex/Complex.java', 'commons-numbers-complex/src/main/java/org/apache/commons/numbers/complex/ComplexUtils.java', 'commons-numbers-complex/src/main/java/org/apache/commons/numbers/complex/RootsOfUnity.java']",merge of complex-constructor branch,
abec5ad87eeb1c4b176305348d601aff41db7572,ericbarnhill,ericbarnhill,4,"['commons-numbers-complex/src/main/java/org/apache/commons/numbers/complex/Complex.java', 'commons-numbers-complex/src/test/java/org/apache/commons/numbers/complex/CStandardTest.java', 'commons-numbers-complex/src/test/java/org/apache/commons/numbers/complex/ComplexTest.java', 'commons-numbers-complex/src/test/java/org/apache/commons/numbers/complex/ComplexUtilsTest.java']",Merge branch 'master' of https://git-wip-us.apache.org/repos/asf/commons-numbers,
3c184d14a9433ba18d7aa15b7b6a64921f165293,ericbarnhill,ericbarnhill,1,['commons-numbers-complex/src/main/java/org/apache/commons/numbers/complex/Complex.java.orig'],"Created static factory methods ofCis, ofPolar, ofCartesian; removal of
public constructors; related fixes in ComplexUtils and RootsOfUnity",
e06534c83e29d1ac47789860d2365ef3ff57e922,,,1,['commons-numbers-complex/src/main/java/org/apache/commons/numbers/complex/Complex.java'],"Javadoc, declaration order.",
af7b1d214eae66c9d9228b42c2d6f8a5d5d9c3f4,,,1,['commons-numbers-complex/src/main/java/org/apache/commons/numbers/complex/Complex.java'],Merge branch 'master' of https://git-wip-us.apache.org/repos/asf/commons-numbers,
d7f354f0dcb945ecef5e0b664031631ba63c6cb5,,,4,"['commons-numbers-complex/src/main/java/org/apache/commons/numbers/complex/Complex.java', 'commons-numbers-complex/src/test/java/org/apache/commons/numbers/complex/CStandardTest.java', 'commons-numbers-complex/src/test/java/org/apache/commons/numbers/complex/ComplexTest.java', 'commons-numbers-complex/src/test/java/org/apache/commons/numbers/complex/ComplexUtilsTest.java']","Fix unit tests: ""Complex.NAN"" was made private in a previous commit.",
118a2fdd10b0989cd128539f6f2d01f845e07661,ericbarnhill,ericbarnhill,1,['pom.xml'],Merge branch 'master' of https://git-wip-us.apache.org/repos/asf/commons-numbers,
1b5aefaa31ab52b4d0b96beabeced303d833e393,ericbarnhill,ericbarnhill,1,['commons-numbers-complex/src/main/java/org/apache/commons/numbers/complex/Complex.java'],"NUMBERS-60: Javadoc links fixed. Complex.NAN access modifier changed to
private.",NUMBERS-60
58f8953f4ec36a1f9fb5d9eb69efcb08ff4f0e17,,,1,['pom.xml'],Upgrade Jacoco.,
e2917811e634b1b7668d0e09d99ee82c7e1cf0a3,ericbarnhill,ericbarnhill,4,"['commons-numbers-complex/src/main/java/org/apache/commons/numbers/complex/Complex.java', 'commons-numbers-complex/src/test/java/org/apache/commons/numbers/complex/RootsOfUnityTest.java', 'commons-numbers-fraction/src/main/java/org/apache/commons/numbers/fraction/Fraction.java', 'commons-numbers-fraction/src/test/java/org/apache/commons/numbers/fraction/FractionTest.java']",NUMBERS-60: Merging NaN related changes into master branch,NUMBERS-60
2f1c0b5dc250b34c2e7d4a7844c76d67e5ce2b2e,ericbarnhill,ericbarnhill,5,"['commons-numbers-complex/src/main/java/org/apache/commons/numbers/complex/Complex.java', 'commons-numbers-complex/src/main/java/org/apache/commons/numbers/complex/ComplexUtils.java', 'commons-numbers-complex/src/test/java/org/apache/commons/numbers/complex/CStandardTest.java', 'commons-numbers-complex/src/test/java/org/apache/commons/numbers/complex/ComplexTest.java', 'commons-numbers-complex/src/test/java/org/apache/commons/numbers/complex/ComplexUtilsTest.java']","NUMBERS-60: NaN descriptions in javadoc altered to reflect C++
standards. NaN changed to NAN.",NUMBERS-60
910cd934b4dab73766954ce595cc5bb2dc79e4c8,,,2,"['commons-numbers-fraction/src/main/java/org/apache/commons/numbers/fraction/Fraction.java', 'commons-numbers-fraction/src/test/java/org/apache/commons/numbers/fraction/FractionTest.java']",Merge branch 'feature_NUMBERS-67',
c4e612eda82314741bd69af912a29eb9bc9949dd,,,2,"['commons-numbers-fraction/src/main/java/org/apache/commons/numbers/fraction/Fraction.java', 'commons-numbers-fraction/src/test/java/org/apache/commons/numbers/fraction/FractionTest.java']","NUMBERS-67: Method ""pow"".",NUMBERS-67
4336ff7399136cb41516dfe3e5ddacba7cbac6aa,,,1,['commons-numbers-core/src/main/java/org/apache/commons/numbers/core/NativeOperators.java'],Method for computing integer powers.,
6ae5bc3a4bbd4e5075840cf4ee735424644e7d8d,,,2,"['commons-numbers-core/src/main/java/org/apache/commons/numbers/core/Addition.java', 'commons-numbers-core/src/main/java/org/apache/commons/numbers/core/Multiplication.java']",Method for retrieving the identity element.,
ea2c1d79d8b482bed262541e813d037294e6b572,,,1,['commons-numbers-complex/src/test/java/org/apache/commons/numbers/complex/RootsOfUnityTest.java'],"NUMBERS-65: Redundant functionality.

Unit test confirms duplicate implementations.",NUMBERS-65
621aa33504611b6579adee71836e1fe43636d2cd,,,1,['commons-numbers-complex/src/main/java/org/apache/commons/numbers/complex/Complex.java'],Prefer multiplication (nit-picks).,
d2ff5bfb36620400c4c5bf02d03396eea9acca54,,,12,"['commons-numbers-angle/src/site/resources/profile.jacoco', 'commons-numbers-arrays/src/site/resources/profile.jacoco', 'commons-numbers-combinatorics/src/site/resources/profile.jacoco', 'commons-numbers-complex/src/main/java/org/apache/commons/numbers/complex/Complex.java', 'commons-numbers-complex/src/site/resources/profile.jacoco', 'commons-numbers-core/src/site/resources/profile.jacoco', 'commons-numbers-fraction/src/site/resources/profile.jacoco', 'commons-numbers-gamma/src/site/resources/profile.jacoco', 'commons-numbers-primes/src/site/resources/profile.jacoco', 'commons-numbers-quaternion/src/site/resources/profile.jacoco', 'pom.xml', 'src/site/site.xml']",Merge branch 'master' into feature__NUMBERS-51__field,
810f26cfe80d4e23c45f57e05d552ae1bb9b1518,,,1,['commons-numbers-complex/src/main/java/org/apache/commons/numbers/complex/Complex.java'],Javadoc (nit-picks).,
51467b04f01be6c408fe7ba0077090cb6dee27b2,,,1,['commons-numbers-complex/src/main/java/org/apache/commons/numbers/complex/Complex.java'],Remove deprecated HTML attribute (Javadoc).,
b077fd577c26357c9abde43f261c9029c8891ae9,ericbarnhill,ericbarnhill,1,['commons-numbers-complex/src/main/java/org/apache/commons/numbers/complex/Complex.java'],NUMBERS-59: Removed null checking in Complex(),NUMBERS-59
ac1975ce8826cc668823de2cd36d1fa612b301a7,,,1,['commons-numbers-complex/src/main/java/org/apache/commons/numbers/complex/Complex.java'],Self-documenting.,Self-
bcbfee1dc3026cf65e5c430bd01b0995e5e9da99,,,1,['commons-numbers-complex/src/main/java/org/apache/commons/numbers/complex/Complex.java'],"Visual clean-up (unnecessary usage of ""this"").",
bc690a66125db034b7ec86ad5c40aa0294bfedc6,,,1,['commons-numbers-complex/src/main/java/org/apache/commons/numbers/complex/Complex.java'],Javadoc.,
4b213be04032d250e93bdd6eeccb2bbfcd2054f8,,,1,['commons-numbers-complex/src/main/java/org/apache/commons/numbers/complex/Complex.java'],Alignment (nit-picks).,
1b2eb2220f873f2ba7e45e749c49bc2930af6666,,,1,['commons-numbers-complex/src/main/java/org/apache/commons/numbers/complex/Complex.java'],Space around operator (nit-picks).,
a4bee7004200d68afe8c6831b3eced555d98d8da,,,1,['commons-numbers-complex/src/main/java/org/apache/commons/numbers/complex/Complex.java'],Unnecessary use of accessors.,
5de033d1b793e6260767609e735105013be6c0d7,,,1,['commons-numbers-complex/src/main/java/org/apache/commons/numbers/complex/Complex.java'],Visual clean-up (nit-picks).,
f50fbcf42c2693055127bda1060a636697427bbb,,,1,['commons-numbers-complex/src/main/java/org/apache/commons/numbers/complex/Complex.java'],Use custom serial version identifier.,
2af72846f1b96315804a320f6fd95bcd5458a547,,,1,['commons-numbers-complex/src/main/java/org/apache/commons/numbers/complex/Complex.java'],Unnecessary instantiation.,
49ed2b81e8a086fd0a801ba2fa54a4f16827512f,,,1,['commons-numbers-complex/src/main/java/org/apache/commons/numbers/complex/Complex.java'],Unnecessary instantiation.,
5dbfebebe6a85d844abe0587404d7b3e70299229,,,1,['commons-numbers-complex/src/main/java/org/apache/commons/numbers/complex/Complex.java'],Unnecessary instantiation.,
818603c2895c10ec24c687105dc53cb64843a632,,,1,['commons-numbers-complex/src/main/java/org/apache/commons/numbers/complex/Complex.java'],Alignment (nit-picks).,
a88c7677c6f4dfcea2d8ef29f353afe3045df06a,,,1,['commons-numbers-complex/src/main/java/org/apache/commons/numbers/complex/Complex.java'],Alignment (nit-picks).,
2daea445e878c98fc0f0a5a90deb413813fdc8cf,,,1,['commons-numbers-complex/src/main/java/org/apache/commons/numbers/complex/Complex.java'],Unnecessary instantiations.,
7da7fa9711ec6cf25903c045fb0eeb5267971f8d,,,1,['commons-numbers-complex/src/main/java/org/apache/commons/numbers/complex/Complex.java'],More nit-picks.,
21d5060f71811799cf5ef64cd872a4f1dee74997,,,1,['commons-numbers-complex/src/main/java/org/apache/commons/numbers/complex/Complex.java'],Visual clean-up (nit-picks).,
e42ec505d2899d3fd239c01dc01a0c3d71302b4b,,,1,['commons-numbers-complex/src/main/java/org/apache/commons/numbers/complex/Complex.java'],Alignment (nit-picks).,
393cf6636de3bac72d09c60b900b2b124fa40e18,,,1,['commons-numbers-complex/src/main/java/org/apache/commons/numbers/complex/Complex.java'],Use more specific exception type.,
2d1f76767c8de17b65a9e091f3a08119719e7870,,,9,"['commons-numbers-angle/src/site/resources/profile.jacoco', 'commons-numbers-arrays/src/site/resources/profile.jacoco', 'commons-numbers-combinatorics/src/site/resources/profile.jacoco', 'commons-numbers-complex/src/site/resources/profile.jacoco', 'commons-numbers-core/src/site/resources/profile.jacoco', 'commons-numbers-fraction/src/site/resources/profile.jacoco', 'commons-numbers-gamma/src/site/resources/profile.jacoco', 'commons-numbers-primes/src/site/resources/profile.jacoco', 'commons-numbers-quaternion/src/site/resources/profile.jacoco']","Activate ""Jacoco"".",
11ab8c24429863228a0c52890e80a3f4678dfae0,,,2,"['pom.xml', 'src/site/site.xml']","Upgrade to CP 43.

Requires change in the declaration of MathJax in the web site template.
MathJax does not work anymore as a consequence:
  https://issues.apache.org/jira/browse/COMMONSSITE-100",
7b1d76a0f0ad89da418d88da75496428d80ccc4c,,,1,['commons-numbers-field/src/main/java/org/apache/commons/numbers/field/FP64.java'],"Implement ""Comparable"".",
dd45364d7c1a37e99c1a788f3b493766fddf3065,,,1,['commons-numbers-field/src/test/java/org/apache/commons/numbers/field/FieldsList.java'],"Add ""FP64"" test case (unit test).",
e1ac4ed5fa59459869121d287d70b0f97a1e7ff6,,,1,['commons-numbers-field/src/test/java/org/apache/commons/numbers/field/FieldParametricTest.java'],Check method (unit test).,
de85ffc2843e43e0c0e426151a995d0c7dc77673,,,2,"['commons-numbers-field/src/main/java/org/apache/commons/numbers/field/FP64.java', 'commons-numbers-field/src/main/java/org/apache/commons/numbers/field/FP64Field.java']","NUMBERS-51: Class ""FP64"" (""double"" with ""Field"" API).",NUMBERS-51
6d14b1638b117c65b90d42d380104470e017c262,,,8,"['commons-numbers-complex/src/main/java/org/apache/commons/numbers/complex/Complex.java', 'commons-numbers-complex/src/main/java/org/apache/commons/numbers/complex/ComplexUtils.java', 'commons-numbers-core/src/main/java/org/apache/commons/numbers/core/ArithmeticUtils.java', 'commons-numbers-fraction/src/main/java/org/apache/commons/numbers/fraction/FractionException.java', 'commons-numbers-gamma/src/main/java/org/apache/commons/numbers/gamma/Digamma.java', 'commons-numbers-gamma/src/main/java/org/apache/commons/numbers/gamma/LogBeta.java', 'commons-numbers-gamma/src/main/java/org/apache/commons/numbers/gamma/LogGamma.java', 'commons-numbers-gamma/src/main/java/org/apache/commons/numbers/gamma/RegularizedGamma.java']",Merge branch 'master' into feature__NUMBERS-51__field,
d011f8be2a166e49ebb496a254fff4d74060f818,,,6,"['commons-numbers-core/src/main/java/org/apache/commons/numbers/core/ArithmeticUtils.java', 'commons-numbers-fraction/src/main/java/org/apache/commons/numbers/fraction/FractionException.java', 'commons-numbers-gamma/src/main/java/org/apache/commons/numbers/gamma/Digamma.java', 'commons-numbers-gamma/src/main/java/org/apache/commons/numbers/gamma/LogBeta.java', 'commons-numbers-gamma/src/main/java/org/apache/commons/numbers/gamma/LogGamma.java', 'commons-numbers-gamma/src/main/java/org/apache/commons/numbers/gamma/RegularizedGamma.java']",CheckStyle.,
590010c7663c06e46c21865b803e34f844e468c5,,,1,['commons-numbers-complex/src/main/java/org/apache/commons/numbers/complex/ComplexUtils.java'],"Added ""throw"" statement.",
662d201b68ed5100abf2ee40359734194850562d,,,1,['commons-numbers-complex/src/main/java/org/apache/commons/numbers/complex/Complex.java'],Deleted unused method.,
2e07396d80cdd9ee2d7c824bbd5e6b321234cbfa,,,1,['commons-numbers-complex/src/main/java/org/apache/commons/numbers/complex/Complex.java'],Unnecessary branching.,
3f3b7ad0122b37a9e831ea0eedfc7602956de5d2,,,1,['commons-numbers-complex/src/main/java/org/apache/commons/numbers/complex/Complex.java'],Javadoc.,
b2d226785278777545ed72b1c55146ea5de5b4b8,,,1,['commons-numbers-complex/src/main/java/org/apache/commons/numbers/complex/Complex.java'],"NUMBERS-55: Fixed ""hashCode"".",NUMBERS-55
1a71d5a77f4d2b418f46dcfa98fb1adbdc4fb3a7,,,2,"['commons-numbers-complex/src/main/java/org/apache/commons/numbers/complex/Complex.java', 'commons-numbers-complex/src/main/java/org/apache/commons/numbers/complex/ComplexUtils.java']",Merge branch 'master' into feature__NUMBERS-51__field,
6caed745053368c11a4e2fccdf8108e7d7cc4a22,ericbarnhill,ericbarnhill,3,"['commons-numbers-complex/src/main/java/org/apache/commons/numbers/complex/Complex.java', 'commons-numbers-core/src/main/java/org/apache/commons/numbers/core/Precision.java', 'commons-numbers-core/src/test/java/org/apache/commons/numbers/core/PrecisionTest.java']",Merge branch 'master' of https://git-wip-us.apache.org/repos/asf/commons-numbers.git,
45dee2ede42d17a36bb02e21b962f70eb92d1b88,ericbarnhill,ericbarnhill,2,"['commons-numbers-complex/src/main/java/org/apache/commons/numbers/complex/Complex.java', 'commons-numbers-complex/src/main/java/org/apache/commons/numbers/complex/ComplexUtils.java']",Minor Javadoc corrections.,
a51b5a047044a7fd1dec085c955a75688755f336,,,1,['commons-numbers-field/src/test/java/org/apache/commons/numbers/field/FieldsList.java'],Javadoc (unit test).,
5ed62806c78286c006a8fe0919a8b51822542eb7,,,2,"['commons-numbers-field/src/site/xdoc/index.xml', 'commons-numbers-field/src/test/java/org/apache/commons/numbers/field/FieldParametricTest.java']",Trailing spaces.,
dc83272b53d93bc8d79870a59a15f204815db2a6,,,2,"['commons-numbers-field/README.md', 'commons-numbers-field/pom.xml']",Typo.,
b58c73e0b5f88a0945ec94b68158eabd4be6b9b3,,,7,"['.gitignore', 'commons-numbers-complex/src/main/java/org/apache/commons/numbers/complex/Complex.java', 'commons-numbers-complex/src/main/java/org/apache/commons/numbers/complex/ComplexUtils.java', 'commons-numbers-complex/src/test/java/org/apache/commons/numbers/complex/CStandardTest.java', 'commons-numbers-complex/src/test/java/org/apache/commons/numbers/complex/ComplexTest.java', 'commons-numbers-core/src/main/java/org/apache/commons/numbers/core/Precision.java', 'commons-numbers-core/src/test/java/org/apache/commons/numbers/core/PrecisionTest.java']",Merge branch 'master' into feature__NUMBERS-51__field,
230b026267d745cbf9b09d0efef6af47b7da17d0,,,1,['commons-numbers-complex/src/main/java/org/apache/commons/numbers/complex/Complex.java'],Redundant method call.,
dd15519eabf02dcb09824de7cf753de9865883d6,,,1,['commons-numbers-complex/src/main/java/org/apache/commons/numbers/complex/Complex.java'],Nit-picks (alignment).,Nit-
bf05e066c816245609e0315b27103192906b2d17,,,2,"['commons-numbers-core/src/main/java/org/apache/commons/numbers/core/Precision.java', 'commons-numbers-core/src/test/java/org/apache/commons/numbers/core/PrecisionTest.java']","NUMBERS-43: Remove ""round(float)"".

See discussion on the JIRA page:
  https://issues.apache.org/jira/browse/NUMBERS-43",NUMBERS-43
4b955ca24a338ffa89bb49b3b0c8cabeb35fbea7,ericbarnhill,ericbarnhill,5,"['.gitignore', 'commons-numbers-complex/src/main/java/org/apache/commons/numbers/complex/Complex.java', 'commons-numbers-complex/src/main/java/org/apache/commons/numbers/complex/ComplexUtils.java', 'commons-numbers-complex/src/test/java/org/apache/commons/numbers/complex/CStandardTest.java', 'commons-numbers-complex/src/test/java/org/apache/commons/numbers/complex/ComplexTest.java']",Merge branch 'complex-dev',
8830e47976f109bda6cf9a763d7276c814a37b22,ericbarnhill,ericbarnhill,1,['commons-numbers-complex/src/main/java/org/apache/commons/numbers/complex/Complex.java.orig'],Small cleanup,
fc70d935fdadc5d5a7862cf9a929da91b72b00d6,ericbarnhill,ericbarnhill,1,['commons-numbers-complex/src/test/java/org/apache/commons/numbers/complex/ComplexTest.java'],NUMBERS-22: Added file ComplexTest.java to file tracker,NUMBERS-22
797e402509cab481fea3b8bc4562e0dc4860ae0d,,,1,['commons-numbers-field/src/main/java/org/apache/commons/numbers/field/FractionField.java'],"Add ""@Override"" annotations.",
d2de8370e4e78b2a77afb796879626ba0b98be6d,,,1,['commons-numbers-field/src/main/java/org/apache/commons/numbers/field/Field.java'],Javadoc.,
554e32e3cb40a35bbd2ecae94dcbeefa9b927110,,,3,"['commons-numbers-core/src/main/java/org/apache/commons/numbers/core/Addition.java', 'commons-numbers-core/src/main/java/org/apache/commons/numbers/core/Multiplication.java', 'commons-numbers-core/src/main/java/org/apache/commons/numbers/core/NativeOperators.java']",Javadoc.,
b15facf8a0f3fbc8c8e661f1e22ba25a3834563c,,,3,"['commons-numbers-field/src/test/java/org/apache/commons/numbers/field/FieldParametricTest.java', 'commons-numbers-field/src/test/java/org/apache/commons/numbers/field/FieldTestData.java', 'commons-numbers-field/src/test/java/org/apache/commons/numbers/field/FieldsList.java']","NUMBERS-51: Unit tests for ""Field"".",NUMBERS-51
15b7b2f10c20c2d95396643ab46d4052e874e802,,,3,"['commons-numbers-field/pom.xml', 'commons-numbers-field/src/main/java/org/apache/commons/numbers/field/FractionField.java', 'pom.xml']","NUMBERS-51: ""Fraction"" field.",NUMBERS-51
ec180800ccec8c7929de2ab402fdc614670471e3,,,4,"['commons-numbers-field/pom.xml', 'commons-numbers-field/src/main/java/org/apache/commons/numbers/field/AbstractField.java', 'commons-numbers-field/src/main/java/org/apache/commons/numbers/field/Field.java', 'pom.xml']",NUMBERS-51: Field API.,NUMBERS-51
c098401cc0d8e2d8293d98a94efc46c2f374b623,,,1,['commons-numbers-fraction/src/main/java/org/apache/commons/numbers/fraction/Fraction.java'],"NUMBERS-51: ""Fraction"" implements basic operations.",NUMBERS-51
518b58abf5f4716c5459fc52c7f52d17ef3d71fd,,,3,"['commons-numbers-core/src/main/java/org/apache/commons/numbers/core/Addition.java', 'commons-numbers-core/src/main/java/org/apache/commons/numbers/core/Multiplication.java', 'commons-numbers-core/src/main/java/org/apache/commons/numbers/core/NativeOperators.java']",NUMBERS-51: API for basic operations.,NUMBERS-51
67446f45befd65681252b8e3aa6243c46c774984,,,7,"['commons-numbers-field/LICENSE.txt', 'commons-numbers-field/NOTICE.txt', 'commons-numbers-field/README.md', 'commons-numbers-field/pom.xml', 'commons-numbers-field/src/main/java/org/apache/commons/numbers/field/package-info.java', 'commons-numbers-field/src/site/site.xml', 'commons-numbers-field/src/site/xdoc/index.xml']","New module: ""commons-numbers-field"".",
71303aa569ff33995c14d2c6f30f48d2aa306359,,,3,"['commons-numbers-angle/README.md', 'commons-numbers-fraction/README.md', 'commons-numbers-primes/README.md']","Adjust contents of ""README.md"" files.",
16322d83ab3092e93a1e2d7f576b185682c16f69,ericbarnhill,ericbarnhill,1,['commons-numbers-complex/src/main/java/org/apache/commons/numbers/complex/Complex.java'],NUMBERS-48: Dead code has been removed,NUMBERS-48
dc430844316a5b49f63363efb4d774e31f4eb3dc,ericbarnhill,ericbarnhill,1,['commons-numbers-complex/src/main/java/org/apache/commons/numbers/complex/Complex.java'],"NUMBERS-49: set doubles in tangent, tanh, divide and reciprocal to final",NUMBERS-49
463f0179910b91216e28e04e0bbe279269209d86,ericbarnhill,ericbarnhill,1,['commons-numbers-complex/src/main/java/org/apache/commons/numbers/complex/Complex.java'],NUMBERS-22: fixed bitwise OR and set double values in reciprocal() to final,NUMBERS-22
f0d1b9cdc279c5438a799d62b74effb7ece4958b,ericbarnhill,ericbarnhill,1,['commons-numbers-complex/src/main/java/org/apache/commons/numbers/complex/Complex.java'],NUMBERS-22: if block added to ensure that reciprocal of very small real numbers return an imaginary component of 0 rather than NaN,NUMBERS-22
ec3bb9ed9c15dffb3eb7ebef7c53e005c366f0fa,ericbarnhill,ericbarnhill,1,['commons-numbers-complex/src/main/java/org/apache/commons/numbers/complex/Complex.java'],NUMBERS-22 : removed automatic assignments of Inf and NaN from Complex.reciprocal(); removed tests ComplexTest.testReciprocalInf() and ComplexTest.testReciprocalZero() that will no longer evaluate correctly,NUMBERS-22
2d273aadad7ffbc7616b0f4a9d8c5695f50746e2,ericbarnhill,ericbarnhill,0,[],Merge branch 'complex-dev' of https://git-wip-us.apache.org/repos/asf/commons-numbers into complex-dev,
d8766052e1f10c146fb112495abe74795d390f75,ericbarnhill,ericbarnhill,1,['commons-numbers-complex/src/main/java/org/apache/commons/numbers/complex/ComplexUtils.java'],Numbers-17: added some missing methods for ComplexUtils,Numbers-17
0a01e2d0e7e6c6621cbf6b5c2c7da885c1691c07,ericbarnhill,ericbarnhill,1,['commons-numbers-complex/src/main/java/org/apache/commons/numbers/complex/ComplexUtils.java'],NUMBERS-13: Some tests in the old ComplexTest tested the old NaN behavior (i.e. turn the whole Complex into NaN) and these were deleted. There is also an error in the testSerial() method and this has been commented out for the time being so that the package installs.,NUMBERS-13
387f4e09b58d6d374a557a02093df887a8e8ebf8,ericbarnhill,ericbarnhill,1,['commons-numbers-complex/src/test/java/org/apache/commons/numbers/complex/CStandardTest.java'],NUMBERS-13: Complex() passes all tests and meets all the C99 standards. This issue is closed.,NUMBERS-13
a9437c90666ca8c3045f1d59de1b77e536addba6,ericbarnhill,ericbarnhill,2,"['commons-numbers-complex/src/main/java/org/apache/commons/numbers/complex/Complex.java', 'commons-numbers-complex/src/test/java/org/apache/commons/numbers/complex/CStandardTest.java']",NUMBERS-13: atanh() passes all tests,NUMBERS-13
af5fc05bb2b63e43c66f50eca0707865b9011ca5,ericbarnhill,ericbarnhill,2,"['commons-numbers-complex/src/main/java/org/apache/commons/numbers/complex/Complex.java', 'commons-numbers-complex/src/test/java/org/apache/commons/numbers/complex/CStandardTest.java']",NUMBERS-13: sinh() passes all tests,NUMBERS-13
1087aa983a4f951decedd90bbe06cd6ec9e4bc9b,ericbarnhill,ericbarnhill,1,['commons-numbers-complex/src/test/java/org/apache/commons/numbers/complex/CStandardTest.java'],NUMBERS-13: Constants declared static final,NUMBERS-13
ed75255890e78d9b7ee261f7daad9b3436c74e8e,ericbarnhill,ericbarnhill,1,['commons-numbers-complex/src/main/java/org/apache/commons/numbers/complex/Complex.java'],NUMBERS-13: log() passes all tests,NUMBERS-13
6bf4d8b74d2b56d506bc5049dbd64a44cad40c31,ericbarnhill,ericbarnhill,1,['commons-numbers-complex/src/main/java/org/apache/commons/numbers/complex/Complex.java'],NUMBERS-13: exp() passes all tests,NUMBERS-13
c8db04d0ac1001774b97fb7abe3f198a30500335,ericbarnhill,ericbarnhill,2,"['commons-numbers-complex/src/main/java/org/apache/commons/numbers/complex/Complex.java', 'commons-numbers-complex/src/test/java/org/apache/commons/numbers/complex/CStandardTest.java']",NUMBERS-13: cosh() passes all tests,NUMBERS-13
1de701b3e3c9dce998a1a0a7ed747ee5aa76cef4,ericbarnhill,ericbarnhill,3,"['commons-numbers-complex/src/main/java/org/apache/commons/numbers/complex/ComplexUtils.java', 'commons-numbers-complex/src/test/java/org/apache/commons/numbers/complex/CStandardTest.java', 'commons-numbers-complex/src/test/java/org/apache/commons/numbers/complex/ComplexTest.java']",NUBERS-17: Added further 4D functionality to Complex Utils (real 2 complex and complex 2 real),NUBERS-17
48464a3cf57e8a62d97e8c8741cadad23406e4ea,ericbarnhill,ericbarnhill,1,['commons-numbers-complex/src/main/java/org/apache/commons/numbers/complex/Complex.java'],NUMBERS-13: atanh() passes all tests,NUMBERS-13
ade98aa183a88502c0dccd1350d47dc6c8d1f37a,ericbarnhill,ericbarnhill,1,['commons-numbers-complex/src/main/java/org/apache/commons/numbers/complex/Complex.java'],NUMBERS-13: asinh() passes all tests,NUMBERS-13
a6c54559c8609614bf55740885d176ddd60b11f7,ericbarnhill,ericbarnhill,2,"['commons-numbers-complex/src/main/java/org/apache/commons/numbers/complex/Complex.java', 'commons-numbers-complex/src/test/java/org/apache/commons/numbers/complex/CStandardTest.java']",NUMBERS-13: Acos passes all tests,NUMBERS-13
72a0c9d499876c627d09d379330f35708884158e,,,1,['commons-numbers-gamma/src/test/java/org/apache/commons/numbers/gamma/LanczosApproximationTest.java'],No tabs!,
91090df9869177582c327c6c7159e981a90efd70,,,1,['commons-numbers-gamma/src/test/java/org/apache/commons/numbers/gamma/LanczosApproximationTest.java'],NUMBERS-38 (unit test).,NUMBERS-38
f1a8f907145d343c2ea161d76c32b05740c43742,ericbarnhill,ericbarnhill,1,['commons-numbers-complex/src/main/java/org/apache/commons/numbers/complex/Complex.java'],NUMBERS-45: restored isNaN() and isInfinite() methods,NUMBERS-45
5a2f9d1492f0a9679c64a91d4e536b936fd815e4,,,1,['commons-numbers-fraction/src/main/java/org/apache/commons/numbers/fraction/ContinuedFraction.java'],Fix probable typo.,
9c04d444c3338196412f5583a7da1035bd741472,,,1,['commons-numbers-fraction/src/main/java/org/apache/commons/numbers/fraction/ContinuedFraction.java'],Javadoc.,
bc83d14fe2b7b4e86f6b01d37ce6b92bbf468916,,,2,"['commons-numbers-fraction/src/main/java/org/apache/commons/numbers/fraction/ContinuedFraction.java', 'commons-numbers-fraction/src/test/java/org/apache/commons/numbers/fraction/ContinuedFractionTest.java']","NUMBER-46: Meaning of ""maxIterations"" argument.",NUMBER-46
47e19ab375e512518fa25bb446e16fd5c64ac0a2,,,1,['commons-numbers-fraction/src/test/java/org/apache/commons/numbers/fraction/ContinuedFractionTest.java'],Use standard notation.,
e2f06629114971c3a3c52ede491446a394c6f7a9,,,1,['commons-numbers-fraction/src/test/java/org/apache/commons/numbers/fraction/ContinuedFractionTest.java'],Javadoc (unit test).,
3bd29a023a11e64e00073b85fd4acb6ad4f872cc,ericbarnhill,ericbarnhill,1,['commons-numbers-complex/src/main/java/org/apache/commons/numbers/complex/Complex.java'],minor change to Complex doc,
45a7579e92befffaf70e2ae24a4036458da071bc,ericbarnhill,ericbarnhill,1,['commons-numbers-complex/src/test/java/org/apache/commons/numbers/complex/ComplexTest.java'],NUMBERS-45: Removed tests in old ComplexTest class calling Complex.isNaN() and Complex.isInf(),NUMBERS-45
28d6b98f08c89bef488cae2f0d058293151e70ba,ericbarnhill,ericbarnhill,4,"['commons-numbers-complex/src/main/java/org/apache/commons/numbers/complex/.Complex.java.swo', 'commons-numbers-complex/src/main/java/org/apache/commons/numbers/complex/Complex.java', 'commons-numbers-complex/src/test/java/org/apache/commons/numbers/complex/.CStandardTest.java.swo', 'commons-numbers-complex/src/test/java/org/apache/commons/numbers/complex/CStandardTest.java']",CStandardTest runs with problematic tests commented out (work will continue),
6b523a37f1984c0fd7cdc7946b41fce52c0be8cc,ameyjadiye,ameyjadiye,1,['commons-numbers-complex/src/main/java/org/apache/commons/numbers/complex/ComplexUtils.java'],NUMBERS-44 : throwing orphan IndexOutOfRangeException object,NUMBERS-44
c2bfc4fbf8fe325eaf254c37128948b7644e5687,chtompki,chtompki,1,['pom.xml'],(chore) adding commons.module.name to pom,
40fd2b4eb86b2f29e8141e08bd4f6338c79a4743,,,1,['commons-numbers-angle/src/test/java/org/apache/commons/numbers/angle/PlaneAngleTest.java'],Cleanup (unit tests).,
129df233f4474b1fe114f4f91a67a56080b6efbf,,,1,['commons-numbers-angle/src/main/java/org/apache/commons/numbers/angle/PlaneAngle.java'],Javadoc.,
c8e0a34f7be9fcef0c1c23ff58a548c12e800db0,,,2,"['commons-numbers-angle/src/main/java/org/apache/commons/numbers/angle/PlaneAngleRadians.java', 'commons-numbers-angle/src/test/java/org/apache/commons/numbers/angle/PlaneAngleRadiansTest.java']",NUMBERS-41: Additional utility methods.,NUMBERS-41
dba917c96871c67e3b546df95bc6addd63cd19da,,,2,"['commons-numbers-angle/src/main/java/org/apache/commons/numbers/angle/PlaneAngle.java', 'commons-numbers-angle/src/test/java/org/apache/commons/numbers/angle/PlaneAngleTest.java']","Removed potentially confusing method.

Also changed order of constants (CheckStyle).",
04e92c6ebf0eac14514b381e750beaaf9257eac1,,,2,"['commons-numbers-angle/src/main/java/org/apache/commons/numbers/angle/PlaneAngleRadians.java', 'commons-numbers-angle/src/test/java/org/apache/commons/numbers/angle/PlaneAngleRadiansTest.java']",NUMBERS-41: Utility class (syntactic sugar).,NUMBERS-41
2b955e3a5ba20cbbed011be9caa1f22f59d35994,,,1,['commons-numbers-angle/src/main/java/org/apache/commons/numbers/angle/PlaneAngle.java'],Javadoc (CheckStyle).,
6fd55c8cc6394c1ba77e81cab3dd60c29a14f581,,,2,"['commons-numbers-angle/src/main/java/org/apache/commons/numbers/angle/PlaneAngle.java', 'commons-numbers-angle/src/test/java/org/apache/commons/numbers/angle/PlaneAngleTest.java']",Singletons for common values.,
e4c21beac3f404e81e2fa369cbe225f06dc3e347,,,16,"['commons-numbers-arrays/LICENSE.txt', 'commons-numbers-arrays/NOTICE.txt', 'commons-numbers-arrays/README.md', 'commons-numbers-arrays/pom.xml', 'commons-numbers-arrays/src/main/java/org/apache/commons/numbers/arrays/CosAngle.java', 'commons-numbers-arrays/src/main/java/org/apache/commons/numbers/arrays/LinearCombination.java', 'commons-numbers-arrays/src/main/java/org/apache/commons/numbers/arrays/SafeNorm.java', 'commons-numbers-arrays/src/main/java/org/apache/commons/numbers/arrays/package-info.java', 'commons-numbers-arrays/src/site/site.xml', 'commons-numbers-arrays/src/site/xdoc/index.xml', 'commons-numbers-arrays/src/test/java/org/apache/commons/numbers/arrays/CosAngleTest.java', 'commons-numbers-arrays/src/test/java/org/apache/commons/numbers/arrays/LinearCombinationTest.java', 'commons-numbers-arrays/src/test/java/org/apache/commons/numbers/arrays/SafeNormTest.java', 'commons-numbers-core/LICENSE.txt', 'commons-numbers-core/pom.xml', 'pom.xml']","Created module ""commons-numbers-arrays"" to eliminate dependency cycle.",
d195a7bbbfe3d0bdcb4b7d2a36aa5a120fd496e8,,,2,"['commons-numbers-core/src/main/java/org/apache/commons/numbers/core/CosAngle.java', 'commons-numbers-core/src/test/java/org/apache/commons/numbers/core/CosAngleTest.java']",NUMBERS-30: Cosine of angle between two vectors (in Cartesian coordinates).,NUMBERS-30
9f1d9ef6f79adcbf56d8b71663edbf525a4d5be9,,,3,"['commons-numbers-core/LICENSE.txt', 'commons-numbers-core/src/main/java/org/apache/commons/numbers/core/SafeNorm.java', 'commons-numbers-core/src/test/java/org/apache/commons/numbers/core/SafeNormTest.java']","NUMBERS-30: ""safe norm"" ported from ""Commons Math"".",NUMBERS-30
7a8965240785a49a5c78c238f63582c364a98160,,,3,"['commons-numbers-core/pom.xml', 'commons-numbers-core/src/main/java/org/apache/commons/numbers/core/LinearCombination.java', 'commons-numbers-core/src/test/java/org/apache/commons/numbers/core/LinearCombinationTest.java']","NUMBERS-30: ""linear combination"" ported from ""Commons Math"".",NUMBERS-30
7a08b2a43ad6ba6ee7ebb4c649088dd7c5dbb540,,,1,['commons-numbers-gamma/src/main/java/org/apache/commons/numbers/gamma/RegularizedGamma.java'],Formatting.,
82aaeb23a5708119ad1d78dba5723c83f31f21b3,,,3,"['commons-numbers-gamma/src/main/java/org/apache/commons/numbers/gamma/Erf.java', 'commons-numbers-gamma/src/main/java/org/apache/commons/numbers/gamma/Erfc.java', 'commons-numbers-gamma/src/main/java/org/apache/commons/numbers/gamma/LanczosApproximation.java']",Javadoc fixes.,
6a185b1ac50cb486fc3cc92881fbedcc62d4a1e0,,,1,['pom.xml'],Add new module to POM.,
5b140a0e2f8bd84e8c51b67ad478486835841798,,,22,"['commons-numbers-combinatorics/LICENSE.txt', 'commons-numbers-combinatorics/NOTICE.txt', 'commons-numbers-combinatorics/README.md', 'commons-numbers-combinatorics/pom.xml', 'commons-numbers-combinatorics/src/main/java/org/apache/commons/numbers/combinatorics/BinomialCoefficient.java', 'commons-numbers-combinatorics/src/main/java/org/apache/commons/numbers/combinatorics/BinomialCoefficientDouble.java', 'commons-numbers-combinatorics/src/main/java/org/apache/commons/numbers/combinatorics/Combinations.java', 'commons-numbers-combinatorics/src/main/java/org/apache/commons/numbers/combinatorics/CombinatoricsException.java', 'commons-numbers-combinatorics/src/main/java/org/apache/commons/numbers/combinatorics/Factorial.java', 'commons-numbers-combinatorics/src/main/java/org/apache/commons/numbers/combinatorics/FactorialDouble.java', 'commons-numbers-combinatorics/src/main/java/org/apache/commons/numbers/combinatorics/LogBinomialCoefficient.java', 'commons-numbers-combinatorics/src/main/java/org/apache/commons/numbers/combinatorics/LogFactorial.java', 'commons-numbers-combinatorics/src/main/java/org/apache/commons/numbers/combinatorics/package-info.java', 'commons-numbers-combinatorics/src/site/site.xml', 'commons-numbers-combinatorics/src/site/xdoc/index.xml', 'commons-numbers-combinatorics/src/test/java/org/apache/commons/numbers/combinatorics/BinomialCoefficientDoubleTest.java', 'commons-numbers-combinatorics/src/test/java/org/apache/commons/numbers/combinatorics/BinomialCoefficientTest.java', 'commons-numbers-combinatorics/src/test/java/org/apache/commons/numbers/combinatorics/CombinationsTest.java', 'commons-numbers-combinatorics/src/test/java/org/apache/commons/numbers/combinatorics/FactorialDoubleTest.java', 'commons-numbers-combinatorics/src/test/java/org/apache/commons/numbers/combinatorics/FactorialTest.java', 'commons-numbers-combinatorics/src/test/java/org/apache/commons/numbers/combinatorics/LogBinomialCoefficientTest.java', 'commons-numbers-combinatorics/src/test/java/org/apache/commons/numbers/combinatorics/LogFactorialTest.java']","NUMBERS-29: New module for combinatorics utilities ported from ""Commons Math"".",NUMBERS-29
0ad65c010b8871f1392f11938e92114b060b74d8,,,1,['commons-numbers-gamma/src/site/xdoc/index.xml'],Typo (web site).,
4de442f68f7debc828e202e3b89e2e4d0de1e4d8,,,10,"['commons-numbers-gamma/src/main/java/org/apache/commons/numbers/gamma/Erf.java', 'commons-numbers-gamma/src/main/java/org/apache/commons/numbers/gamma/ErfDifference.java', 'commons-numbers-gamma/src/main/java/org/apache/commons/numbers/gamma/Erfc.java', 'commons-numbers-gamma/src/main/java/org/apache/commons/numbers/gamma/InverseErf.java', 'commons-numbers-gamma/src/main/java/org/apache/commons/numbers/gamma/InverseErfc.java', 'commons-numbers-gamma/src/test/java/org/apache/commons/numbers/gamma/ErfDifferenceTest.java', 'commons-numbers-gamma/src/test/java/org/apache/commons/numbers/gamma/ErfTest.java', 'commons-numbers-gamma/src/test/java/org/apache/commons/numbers/gamma/ErfcTest.java', 'commons-numbers-gamma/src/test/java/org/apache/commons/numbers/gamma/InverseErfTest.java', 'commons-numbers-gamma/src/test/java/org/apache/commons/numbers/gamma/InverseErfcTest.java']","NUMBERS-39: ""Erf"" family of functions.",NUMBERS-39
61d27bd9eef48c5642c74b6c10800424b68dfea2,,,1,['commons-numbers-gamma/src/main/java/org/apache/commons/numbers/gamma/RegularizedGamma.java'],Unused design.,
8555a73a5626720107ce2bc78032fc4de0260953,,,7,"['commons-numbers-gamma/src/main/java/org/apache/commons/numbers/gamma/LogBeta.java', 'commons-numbers-gamma/src/main/java/org/apache/commons/numbers/gamma/LogGammaSum.java', 'commons-numbers-gamma/src/main/java/org/apache/commons/numbers/gamma/RegularizedBeta.java', 'commons-numbers-gamma/src/main/java/org/apache/commons/numbers/gamma/package-info.java', 'commons-numbers-gamma/src/test/java/org/apache/commons/numbers/gamma/LogBetaTest.java', 'commons-numbers-gamma/src/test/java/org/apache/commons/numbers/gamma/LogGammaSumTest.java', 'commons-numbers-gamma/src/test/java/org/apache/commons/numbers/gamma/RegularizedBetaTest.java']","NUMBERS-39: ""Beta"" family of functions.",NUMBERS-39
b2943506238c2c0debc3829e09ca469dbf1ae001,,,1,['commons-numbers-gamma/src/test/java/org/apache/commons/numbers/gamma/InvGamma1pm1Test.java'],Javadoc.,
d79edb264f71db3e88779efe2681fa8c48310c3c,,,3,"['commons-numbers-gamma/src/main/java/org/apache/commons/numbers/gamma/Gamma.java', 'commons-numbers-gamma/src/main/java/org/apache/commons/numbers/gamma/LanczosApproximation.java', 'commons-numbers-gamma/src/test/java/org/apache/commons/numbers/gamma/LanczosApproximationTest.java']","NUMBERS-33: Small changes.

Made ""LanczosApproximation"" public (used by ""Commons Math"").
Moved ""Lanczos constant"" staic field to appropriate class and provided accessor.",NUMBERS-33
1aa1ddcd5a3bfdb99ae38bc5c761a80adb166ad6,,,10,"['commons-numbers-angle/LICENSE.txt', 'commons-numbers-angle/NOTICE.txt', 'commons-numbers-angle/README.md', 'commons-numbers-angle/pom.xml', 'commons-numbers-angle/src/main/java/org/apache/commons/numbers/angle/PlaneAngle.java', 'commons-numbers-angle/src/main/java/org/apache/commons/numbers/angle/package-info.java', 'commons-numbers-angle/src/site/site.xml', 'commons-numbers-angle/src/site/xdoc/index.xml', 'commons-numbers-angle/src/test/java/org/apache/commons/numbers/angle/PlaneAngleTest.java', 'pom.xml']","NUMBERS-37: New ""PlaneAngle"" class.

New module for angle-related utilities.",NUMBERS-37
475b7f0a48d9f79eb97f7ae0924986b49acb6e52,,,1,['commons-numbers-gamma/pom.xml'],POM clean-up.,
ce893bdb4f7d8e67df390f11bff808a26b05bdcc,,,1,['pom.xml'],Conditional flags for javadoc tool.,
402e15109b23560343fa86a436dc7eb6ec8e1d4f,,,24,"['commons-numbers-gamma/LICENSE.txt', 'commons-numbers-gamma/NOTICE.txt', 'commons-numbers-gamma/README.md', 'commons-numbers-gamma/pom.xml', 'commons-numbers-gamma/src/main/java/org/apache/commons/numbers/gamma/Digamma.java', 'commons-numbers-gamma/src/main/java/org/apache/commons/numbers/gamma/Gamma.java', 'commons-numbers-gamma/src/main/java/org/apache/commons/numbers/gamma/GammaException.java', 'commons-numbers-gamma/src/main/java/org/apache/commons/numbers/gamma/InvGamma1pm1.java', 'commons-numbers-gamma/src/main/java/org/apache/commons/numbers/gamma/LanczosApproximation.java', 'commons-numbers-gamma/src/main/java/org/apache/commons/numbers/gamma/LogGamma.java', 'commons-numbers-gamma/src/main/java/org/apache/commons/numbers/gamma/LogGamma1p.java', 'commons-numbers-gamma/src/main/java/org/apache/commons/numbers/gamma/RegularizedGamma.java', 'commons-numbers-gamma/src/main/java/org/apache/commons/numbers/gamma/Trigamma.java', 'commons-numbers-gamma/src/main/java/org/apache/commons/numbers/gamma/package-info.java', 'commons-numbers-gamma/src/site/site.xml', 'commons-numbers-gamma/src/site/xdoc/index.xml', 'commons-numbers-gamma/src/test/java/org/apache/commons/numbers/gamma/DigammaTest.java', 'commons-numbers-gamma/src/test/java/org/apache/commons/numbers/gamma/GammaTest.java', 'commons-numbers-gamma/src/test/java/org/apache/commons/numbers/gamma/InvGamma1pm1Test.java', 'commons-numbers-gamma/src/test/java/org/apache/commons/numbers/gamma/LogGamma1pTest.java', 'commons-numbers-gamma/src/test/java/org/apache/commons/numbers/gamma/LogGammaTest.java', 'commons-numbers-gamma/src/test/java/org/apache/commons/numbers/gamma/RegularizedGammaTest.java', 'commons-numbers-gamma/src/test/java/org/apache/commons/numbers/gamma/TrigammaTest.java', 'pom.xml']","Merge branch 'task_NUMBERS-33__Gamma'

Completes issue NUMBER-33 (see JIRA).",
ef4ab32365ea7f5a0debb9f48734839b5ed00a86,,,15,"['commons-numbers-gamma/src/main/java/org/apache/commons/numbers/gamma/Digamma.java', 'commons-numbers-gamma/src/main/java/org/apache/commons/numbers/gamma/Gamma.java', 'commons-numbers-gamma/src/main/java/org/apache/commons/numbers/gamma/InvGamma1pm1.java', 'commons-numbers-gamma/src/main/java/org/apache/commons/numbers/gamma/LanczosApproximation.java', 'commons-numbers-gamma/src/main/java/org/apache/commons/numbers/gamma/LogGamma.java', 'commons-numbers-gamma/src/main/java/org/apache/commons/numbers/gamma/LogGamma1p.java', 'commons-numbers-gamma/src/main/java/org/apache/commons/numbers/gamma/RegularizedGamma.java', 'commons-numbers-gamma/src/main/java/org/apache/commons/numbers/gamma/Trigamma.java', 'commons-numbers-gamma/src/test/java/org/apache/commons/numbers/gamma/DigammaTest.java', 'commons-numbers-gamma/src/test/java/org/apache/commons/numbers/gamma/GammaTest.java', 'commons-numbers-gamma/src/test/java/org/apache/commons/numbers/gamma/InvGamma1pm1Test.java', 'commons-numbers-gamma/src/test/java/org/apache/commons/numbers/gamma/LogGamma1pTest.java', 'commons-numbers-gamma/src/test/java/org/apache/commons/numbers/gamma/LogGammaTest.java', 'commons-numbers-gamma/src/test/java/org/apache/commons/numbers/gamma/RegularizedGammaTest.java', 'commons-numbers-gamma/src/test/java/org/apache/commons/numbers/gamma/TrigammaTest.java']","Made functions ""static"".

Removed ""singleton"" fields.",
cad5798e0539f90155cca086b3cf6c8098f80fd8,,,1,['commons-numbers-gamma/src/main/java/org/apache/commons/numbers/gamma/RegularizedGamma.java'],Unnecessary variable.,
5944675f3f3e00b462ee9b44c6f986a3cb65229b,,,1,['commons-numbers-gamma/src/main/java/org/apache/commons/numbers/gamma/Gamma.java'],Unnecessary variable.,
842119c50b75a73b86005f954db6f4f7b40e30c3,,,1,['commons-numbers-gamma/src/main/java/org/apache/commons/numbers/gamma/RegularizedGamma.java'],Typo (Javadoc).,
8fb960492899025bdcbfaa552a992330d0dcf106,,,3,"['commons-numbers-gamma/src/main/java/org/apache/commons/numbers/gamma/Digamma.java', 'commons-numbers-gamma/src/main/java/org/apache/commons/numbers/gamma/Gamma.java', 'pom.xml']",Merge branch 'task_NUMBERS-33__Gamma' of https://git-wip-us.apache.org/repos/asf/commons-numbers into task_NUMBERS-33__Gamma,
13facdc210893a886390cf94dd6f3f7562da1bbe,,,5,"['commons-numbers-gamma/src/main/java/org/apache/commons/numbers/gamma/Digamma.java', 'commons-numbers-gamma/src/main/java/org/apache/commons/numbers/gamma/InvGamma1pm1.java', 'commons-numbers-gamma/src/main/java/org/apache/commons/numbers/gamma/LanczosApproximation.java', 'commons-numbers-gamma/src/main/java/org/apache/commons/numbers/gamma/LogGamma.java', 'commons-numbers-gamma/src/main/java/org/apache/commons/numbers/gamma/Trigamma.java']",Removed usage of MathJax where not strictly necessary (Javadoc).,
f33d53e47f92fd7327d36667db7887025c1a5047,stain,stain,2,"['commons-numbers-gamma/src/main/java/org/apache/commons/numbers/gamma/Digamma.java', 'commons-numbers-gamma/src/main/java/org/apache/commons/numbers/gamma/Gamma.java']",Improve Javadoc,
b266dc109b586817f7946fd1e44410591e4d768c,stain,stain,1,['pom.xml'],Merge branch 'master' into task_NUMBERS-33__Gamma,
6dbe8485ce08c5571fbe34e2f6e4d05ba0440e13,stain,stain,1,['pom.xml'],NUMBERS-36: Set javadoc-plugin for <build> as well,NUMBERS-36
851b17ece739245bc04f7f03dc20cfe4c0ea60a8,stain,stain,2,"['commons-numbers-gamma/src/main/java/org/apache/commons/numbers/gamma/Digamma.java', 'commons-numbers-gamma/src/main/java/org/apache/commons/numbers/gamma/LogGamma.java']","Avoid ""malformed HTML"" javadoc error",
8d2b162b1821f8eac0cd2bd5529b0b52024e5793,stain,stain,7,"['NOTICE.txt', 'commons-numbers-complex/NOTICE.txt', 'commons-numbers-core/NOTICE.txt', 'commons-numbers-fraction/NOTICE.txt', 'commons-numbers-quaternion/NOTICE.txt', 'pom.xml', 'src/site/site.xml']",Merge branch 'master' into task_NUMBERS-33__Gamma,
b29de0ea96357a6c6d117f5cae626279a7bfbd2a,stain,stain,2,"['pom.xml', 'src/site/site.xml']",NUMBERS-36 Alternative CDN for MathJax: CDNJS via CloudFlare,NUMBERS-36
213d5fab539aecc832c9e88f309b7eb16c14ec46,stain,stain,5,"['NOTICE.txt', 'commons-numbers-complex/NOTICE.txt', 'commons-numbers-core/NOTICE.txt', 'commons-numbers-fraction/NOTICE.txt', 'commons-numbers-quaternion/NOTICE.txt']",Update copyright year in NOTICE,
14f6f851b179249cb74b6dfa5b3c8d193e607186,,,1,['commons-numbers-gamma/src/main/java/org/apache/commons/numbers/gamma/Digamma.java'],"NUMBERS-35: Typo (sign error).

Unit tests are missing (see JIRA issue).

Thanks to Stian Soiland-Reyes for spotting that the code did not
agree with the referenced formula.",NUMBERS-35
f271063539ca219a94b37e60cdc0022ea65563e5,,,4,"['commons-numbers-gamma/src/main/java/org/apache/commons/numbers/gamma/Digamma.java', 'commons-numbers-gamma/src/main/java/org/apache/commons/numbers/gamma/Trigamma.java', 'commons-numbers-gamma/src/test/java/org/apache/commons/numbers/gamma/DigammaTest.java', 'commons-numbers-gamma/src/test/java/org/apache/commons/numbers/gamma/TrigammaTest.java']","NUMBERS-33: Removed ""static"" keyword.

Thanks to Stian Soiland-Reyes.",NUMBERS-33
871bb759cf15d887f11a5a7e7428bfba1cc4cafd,,,1,['commons-numbers-gamma/src/test/java/org/apache/commons/numbers/gamma/LogGammaTest.java'],Fix (probable) typo in original code.,
f7e9300a0747d6ef3896a55179801bec27b1cfec,,,2,"['commons-numbers-gamma/src/main/java/org/apache/commons/numbers/gamma/RegularizedGamma.java', 'commons-numbers-gamma/src/test/java/org/apache/commons/numbers/gamma/RegularizedGammaTest.java']",Fix (probable) typo in original code.,
aa533716aba9f3dbf35649e44336ad73f5aa206c,,,1,['commons-numbers-gamma/README.md'],Copy/paste mistake.,
0c9f1cde2f639d537306e8cbe6d8dd54d0374720,,,24,"['commons-numbers-gamma/LICENSE.txt', 'commons-numbers-gamma/NOTICE.txt', 'commons-numbers-gamma/README.md', 'commons-numbers-gamma/pom.xml', 'commons-numbers-gamma/src/main/java/org/apache/commons/numbers/gamma/Digamma.java', 'commons-numbers-gamma/src/main/java/org/apache/commons/numbers/gamma/Gamma.java', 'commons-numbers-gamma/src/main/java/org/apache/commons/numbers/gamma/GammaException.java', 'commons-numbers-gamma/src/main/java/org/apache/commons/numbers/gamma/InvGamma1pm1.java', 'commons-numbers-gamma/src/main/java/org/apache/commons/numbers/gamma/LanczosApproximation.java', 'commons-numbers-gamma/src/main/java/org/apache/commons/numbers/gamma/LogGamma.java', 'commons-numbers-gamma/src/main/java/org/apache/commons/numbers/gamma/LogGamma1p.java', 'commons-numbers-gamma/src/main/java/org/apache/commons/numbers/gamma/RegularizedGamma.java', 'commons-numbers-gamma/src/main/java/org/apache/commons/numbers/gamma/Trigamma.java', 'commons-numbers-gamma/src/main/java/org/apache/commons/numbers/gamma/package-info.java', 'commons-numbers-gamma/src/site/site.xml', 'commons-numbers-gamma/src/site/xdoc/index.xml', 'commons-numbers-gamma/src/test/java/org/apache/commons/numbers/gamma/DigammaTest.java', 'commons-numbers-gamma/src/test/java/org/apache/commons/numbers/gamma/GammaTest.java', 'commons-numbers-gamma/src/test/java/org/apache/commons/numbers/gamma/InvGamma1pm1Test.java', 'commons-numbers-gamma/src/test/java/org/apache/commons/numbers/gamma/LogGamma1pTest.java', 'commons-numbers-gamma/src/test/java/org/apache/commons/numbers/gamma/LogGammaTest.java', 'commons-numbers-gamma/src/test/java/org/apache/commons/numbers/gamma/RegularizedGammaTest.java', 'commons-numbers-gamma/src/test/java/org/apache/commons/numbers/gamma/TrigammaTest.java', 'pom.xml']","NUMBERS-33: ""Gamma"" family of functions (port from ""Commons Math"").

Code in module ""commons-numbers-gamma"" is a refactoring of the utilities
contained in the ""o.a.c.math4.special.Gamma"" class.",NUMBERS-33
3540a23ff45b30c9917593fbdabdaeaa22bec2d2,,,1,['commons-numbers-fraction/pom.xml'],"Missing ""sub-package"" name.",
a960a5ca73b1f5b8bdce7fc75502b75e6d945aff,,,23,"['src/userguide/README', 'src/userguide/java/org/apache/commons/math4/userguide/ClusterAlgorithmComparison.java', 'src/userguide/java/org/apache/commons/math4/userguide/ExampleUtils.java', 'src/userguide/java/org/apache/commons/math4/userguide/FastMathTestPerformance.java', 'src/userguide/java/org/apache/commons/math4/userguide/IntegerDistributionComparison.java', 'src/userguide/java/org/apache/commons/math4/userguide/LowDiscrepancyGeneratorComparison.java', 'src/userguide/java/org/apache/commons/math4/userguide/RealDistributionComparison.java', 'src/userguide/java/org/apache/commons/math4/userguide/clustering/ImageClusteringExample.java', 'src/userguide/java/org/apache/commons/math4/userguide/filter/CannonballExample.java', 'src/userguide/java/org/apache/commons/math4/userguide/filter/ConstantVoltageExample.java', 'src/userguide/java/org/apache/commons/math4/userguide/genetics/HelloWorldExample.java', 'src/userguide/java/org/apache/commons/math4/userguide/genetics/ImageEvolutionExample.java', 'src/userguide/java/org/apache/commons/math4/userguide/genetics/Polygon.java', 'src/userguide/java/org/apache/commons/math4/userguide/genetics/PolygonChromosome.java', 'src/userguide/java/org/apache/commons/math4/userguide/genetics/RandomPolygonMutation.java', 'src/userguide/java/org/apache/commons/math4/userguide/geometry/GeometryExample.java', 'src/userguide/java/org/apache/commons/math4/userguide/sofm/ChineseRings.java', 'src/userguide/java/org/apache/commons/math4/userguide/sofm/ChineseRingsClassifier.java', 'src/userguide/pom.xml', 'src/userguide/resources/ColorfulBird.jpg', 'src/userguide/resources/feather-small.gif', 'src/userguide/resources/monalisa.png', 'src/userguide/resources/references.txt']","Removed ""Commons Math"" code examples.",
bd596bee4baa18c2e930a738e5a33cdeed04535f,,,1,['pom.xml'],Make description consistent with actual requirement.,
15136c2d6b6112ae6fa60c1eb644ce70f675b4c5,ericbarnhill,ericbarnhill,4,"['commons-numbers-complex/src/main/java/org/apache/commons/numbers/complex/.Complex.java.swo', 'commons-numbers-complex/src/main/java/org/apache/commons/numbers/complex/Complex.java.orig', 'commons-numbers-complex/src/test/java/org/apache/commons/numbers/complex/.CStandardTest.java.swo', 'commons-numbers-complex/src/test/java/org/apache/commons/numbers/complex/CStandardTest.java']",added new files,
07bbda2fd6f19980f102d37601e61c06d2b98283,ericbarnhill,ericbarnhill,1,['commons-numbers-complex/src/main/java/org/apache/commons/numbers/complex/Complex.java'],Partial work on C Standard test; pulled changes made to master,
410abd7fa4f63d8c2d297b62181ddfeeb44da869,ericbarnhill,ericbarnhill,8,"['commons-numbers-complex/src/main/java/org/apache/commons/numbers/complex/Complex.java', 'commons-numbers-fraction/src/main/java/org/apache/commons/numbers/fraction/BigFraction.java', 'commons-numbers-fraction/src/main/java/org/apache/commons/numbers/fraction/ContinuedFraction.java', 'commons-numbers-fraction/src/test/java/org/apache/commons/numbers/fraction/BigFractionTest.java', 'commons-numbers-fraction/src/test/java/org/apache/commons/numbers/fraction/ContinuedFractionTest.java', 'pom.xml', 'src/changes/changes.xml', 'src/site/site.xml']",merge master and eb-test branches into commons-dev branch. I was mistakenly still making edits to eb-test branch.,
ec66bced51bc44a50575584a0b98938730aef417,ericbarnhill,ericbarnhill,1,['commons-numbers-complex/src/main/java/org/apache/commons/numbers/complex/Complex.java'],partial work on ISO C test class,
1eaba643f59be9ebd2907c670f6f6cd07bbfd3f9,RayDeCampo,RayDeCampo,7,"['commons-numbers-primes/pom.xml', 'commons-numbers-primes/src/main/java/org/apache/commons/numbers/primes/Primes.java', 'commons-numbers-primes/src/main/java/org/apache/commons/numbers/primes/SmallPrimes.java', 'commons-numbers-primes/src/main/java/org/apache/commons/numbers/primes/package-info.java', 'commons-numbers-primes/src/test/java/org/apache/commons/numbers/primes/PrimesTest.java', 'commons-numbers-primes/src/test/java/org/apache/commons/numbers/primes/SmallPrimesTest.java', 'pom.xml']",NUMBERS-20: Merge branch 'feature-NUMBERS-20',NUMBERS-20
eed94bfe84a71698fbc9b3a9e7808cd3f5f899d5,kinow,kinow,2,"['src/changes/changes.xml', 'src/site/resources/images/math.gif']",NUMBERS-24: remove math.gif and update changes.xml,NUMBERS-24
c7c9ccfbb2c0c49a1f92057a8203761515cbe4f4,,,2,"['src/site/resources/images/commons_numbers.small.png', 'src/site/site.xml']",NUMBERS-24: Web site logo.,NUMBERS-24
608307bc5ae1201ba28802e39db157e8aab67ff4,ericbarnhill,ericbarnhill,5,"['commons-numbers-fraction/src/main/java/org/apache/commons/numbers/fraction/ContinuedFraction.java', 'commons-numbers-fraction/src/test/java/org/apache/commons/numbers/fraction/ContinuedFractionTest.java', 'pom.xml', 'src/changes/changes.xml', 'src/site/site.xml']",Merge branch 'master' into eb-test,
1e4947b722811f01ea72a218eb6d84af0ad53ba1,,,1,['commons-numbers-fraction/src/main/java/org/apache/commons/numbers/fraction/ContinuedFraction.java'],Javadoc.,
193b4f93df0e11dc2602ebc5ea3bc2c4427df5e0,kinow,kinow,4,"['commons-numbers-fraction/src/main/java/org/apache/commons/numbers/fraction/ContinuedFraction.java', 'pom.xml', 'src/changes/changes.xml', 'src/site/site.xml']",NUMBERS-23: add --allow-script-in-comments and fix logo URL,NUMBERS-23
9e54e498d16400fdfcf7930ea4f60c42a9f10c85,RayDeCampo,RayDeCampo,1,['commons-numbers-primes/src/test/java/org/apache/commons/numbers/primes/SmallPrimesTest.java'],NUMBERS-20: Add unit tests for SmallPrimes.,NUMBERS-20
09dc0163ea14b0bb247d8a4fd0ea17dac9938fa2,RayDeCampo,RayDeCampo,6,"['commons-numbers-primes/pom.xml', 'commons-numbers-primes/src/main/java/org/apache/commons/numbers/primes/Primes.java', 'commons-numbers-primes/src/main/java/org/apache/commons/numbers/primes/SmallPrimes.java', 'commons-numbers-primes/src/main/java/org/apache/commons/numbers/primes/package-info.java', 'commons-numbers-primes/src/test/java/org/apache/commons/numbers/primes/PrimesTest.java', 'pom.xml']","NUMBERS-20: Port classes to new package.
Replace [math] exceptions with IllegalArgumentException.
Simplify exception detection in unit tests.",NUMBERS-20
996a3a45d5dc92383064594a950b23667df56f21,RayDeCampo,RayDeCampo,4,"['commons-numbers-primes/src/main/java/org/apache/commons/numbers/primes/Primes.java', 'commons-numbers-primes/src/main/java/org/apache/commons/numbers/primes/SmallPrimes.java', 'commons-numbers-primes/src/main/java/org/apache/commons/numbers/primes/package-info.java', 'commons-numbers-primes/src/test/java/org/apache/commons/numbers/primes/PrimesTest.java']",NUMBERS-20: Establish baseline of files copied from [math].,NUMBERS-20
48c9522d8c835a4f6647c4bb044bb2bffc7986c3,RayDeCampo,RayDeCampo,2,"['commons-numbers-fraction/src/main/java/org/apache/commons/numbers/fraction/ContinuedFraction.java', 'commons-numbers-fraction/src/test/java/org/apache/commons/numbers/fraction/ContinuedFractionTest.java']",NUMBERS-12: Merge branch 'feature-NUMBERS-12',NUMBERS-12
e3399d1bab7065bdad7ebac80db184b5ef758808,RayDeCampo,RayDeCampo,1,['commons-numbers-fraction/src/main/java/org/apache/commons/numbers/fraction/ContinuedFraction.java'],Remove unnecessary default constructor,
9602e36b262f41036c3204b55f1addb91769573f,RayDeCampo,RayDeCampo,2,"['commons-numbers-fraction/src/main/java/org/apache/commons/numbers/fraction/ContinuedFraction.java', 'commons-numbers-fraction/src/test/java/org/apache/commons/numbers/fraction/ContinuedFractionTest.java']","Port ContinuedFraction from commons math.
Converted exceptions to ArithmeticException.",
4e1339eec8f100236f7aac310f797f87c986b47e,RayDeCampo,RayDeCampo,2,"['commons-numbers-fraction/src/main/java/org/apache/commons/numbers/fraction/ContinuedFraction.java', 'commons-numbers-fraction/src/test/java/org/apache/commons/numbers/fraction/ContinuedFractionTest.java']",Establish baseline of files copied from commons-math.  (Will not build.),
e2668df11371dee73f6f2d64e33faecf02f12306,ericbarnhill,ericbarnhill,1,['commons-numbers-complex/src/main/java/org/apache/commons/numbers/complex/ComplexUtils.java'],Added 4D interleaved2Complex,
70a1156a13a4520a5157eb5697795de7c881b921,ericbarnhill,ericbarnhill,1,['commons-numbers-complex/src/main/java/org/apache/commons/numbers/complex/ComplexUtils.java'],ComplexUtils: Added 4d functionality to split and interleaved methods.,
ea52aa8cb3b0a9935ca0496aac482352b6e2c5ab,ericbarnhill,ericbarnhill,5,"['.swp', 'commons-numbers-complex/src/main/java/org/apache/commons/numbers/complex/Complex.java', 'commons-numbers-complex/src/test/java/org/apache/commons/numbers/complex/ComplexTest.java', 'commons-numbers-core/src/main/java/org/apache/commons/numbers/core/.ArithmeticUtils.java.swp', 'commons-numbers-fraction/src/main/java/org/apache/commons/numbers/fraction/.BigFraction.java.swp']","Passes all tests but three: hashCode, powZero and scalarPowZero. To be debugged at a later date",
8c4026adce30725f9011283951e3f9e363e0d119,ericbarnhill,ericbarnhill,1,['commons-numbers-complex/src/main/java/org/apache/commons/numbers/complex/Complex.java'],added a comma to Complex.java . this is a test to see if I have sorted out pushing to a branch.,
1b979e5de9e23fbaed4775cc487fbce3f895e740,ericbarnhill,ericbarnhill,1,['.gitignore'],Conformed Complex() to C++11 standards,
b37c9f195f28f897eadadaf1f2df86bca0b8ce7c,,,3,"['commons-numbers-fraction/src/main/java/org/apache/commons/numbers/fraction/BigFraction.java', 'commons-numbers-fraction/src/test/java/org/apache/commons/numbers/fraction/BigFractionTest.java', 'src/changes/changes.xml']","NUMBERS-15: Fix overflow in ""BigFraction"".

Thanks to Sergey Ushakov.",NUMBERS-15
c15e3b901f5cdc4d3d5ea8d54e29e852e9bdaf15,,,4,"['.swp', 'commons-numbers-complex/src/main/java/org/apache/commons/numbers/complex/Complex.java', 'commons-numbers-core/src/main/java/org/apache/commons/numbers/core/.ArithmeticUtils.java.swp', 'commons-numbers-fraction/src/main/java/org/apache/commons/numbers/fraction/.BigFraction.java.swp']","Revert large commit with many changes that should have been reviewed in a separate branch.

This reverts commit 857033738c5f470289f3ff4ea325e5b7f6adae52.",
857033738c5f470289f3ff4ea325e5b7f6adae52,ericbarnhill,ericbarnhill,4,"['.swp', 'commons-numbers-complex/src/main/java/org/apache/commons/numbers/complex/Complex.java', 'commons-numbers-core/src/main/java/org/apache/commons/numbers/core/.ArithmeticUtils.java.swp', 'commons-numbers-fraction/src/main/java/org/apache/commons/numbers/fraction/.BigFraction.java.swp']",Complex class references updated for numbers rather than math. Syntactical sugar added so all required c++11 syntax can be used with Complex() . Inverse hyperbolic funtions added using formulas from Complex.js to conform to c++11 standards.,
39b5119cc153a910152c19addf6f2d750531da53,RayDeCampo,RayDeCampo,24,"['commons-numbers-complex/pom.xml', 'commons-numbers-core/pom.xml', 'commons-numbers-core/src/main/java/org/apache/commons/numbers/core/ArithmeticUtils.java', 'commons-numbers-core/src/test/java/org/apache/commons/numbers/core/ArithmeticUtilsTest.java', 'commons-numbers-fraction/LICENSE.txt', 'commons-numbers-fraction/NOTICE.txt', 'commons-numbers-fraction/README.md', 'commons-numbers-fraction/pom.xml', 'commons-numbers-fraction/src/main/java/org/apache/commons/numbers/fraction/AbstractFormat.java', 'commons-numbers-fraction/src/main/java/org/apache/commons/numbers/fraction/BigFraction.java', 'commons-numbers-fraction/src/main/java/org/apache/commons/numbers/fraction/BigFractionFormat.java', 'commons-numbers-fraction/src/main/java/org/apache/commons/numbers/fraction/Fraction.java', 'commons-numbers-fraction/src/main/java/org/apache/commons/numbers/fraction/FractionException.java', 'commons-numbers-fraction/src/main/java/org/apache/commons/numbers/fraction/FractionFormat.java', 'commons-numbers-fraction/src/main/java/org/apache/commons/numbers/fraction/FractionParseException.java', 'commons-numbers-fraction/src/main/java/org/apache/commons/numbers/fraction/ProperBigFractionFormat.java', 'commons-numbers-fraction/src/main/java/org/apache/commons/numbers/fraction/ProperFractionFormat.java', 'commons-numbers-fraction/src/main/java/org/apache/commons/numbers/fraction/package-info.java', 'commons-numbers-fraction/src/test/java/org/apache/commons/numbers/fraction/BigFractionFormatTest.java', 'commons-numbers-fraction/src/test/java/org/apache/commons/numbers/fraction/BigFractionTest.java', 'commons-numbers-fraction/src/test/java/org/apache/commons/numbers/fraction/FractionFormatTest.java', 'commons-numbers-fraction/src/test/java/org/apache/commons/numbers/fraction/FractionTest.java', 'commons-numbers-quaternion/pom.xml', 'pom.xml']","Merge branch 'fraction__NUMBERS-6'
Copy fraction code from commons-math into commons-numbers",
985d44fca746154042730c3b2743678f5df934ae,RayDeCampo,RayDeCampo,4,"['commons-numbers-fraction/src/main/java/org/apache/commons/numbers/fraction/BigFraction.java', 'commons-numbers-fraction/src/main/java/org/apache/commons/numbers/fraction/Fraction.java', 'commons-numbers-fraction/src/main/java/org/apache/commons/numbers/fraction/FractionException.java', 'commons-numbers-fraction/src/main/java/org/apache/commons/numbers/fraction/FractionParseException.java']",NUMBERS-6: Fix checkstyle issues.,NUMBERS-6
16352312bac6661d4facd234f6d00dd4ed37ff58,RayDeCampo,RayDeCampo,6,"['commons-numbers-fraction/src/main/java/org/apache/commons/numbers/fraction/BigFraction.java', 'commons-numbers-fraction/src/main/java/org/apache/commons/numbers/fraction/BigFractionField.java', 'commons-numbers-fraction/src/main/java/org/apache/commons/numbers/fraction/Fraction.java', 'commons-numbers-fraction/src/main/java/org/apache/commons/numbers/fraction/FractionField.java', 'commons-numbers-fraction/src/test/java/org/apache/commons/numbers/fraction/BigFractionFieldTest.java', 'commons-numbers-fraction/src/test/java/org/apache/commons/numbers/fraction/FractionFieldTest.java']",NUMBERS-6: Remove Field classes and references to same,NUMBERS-6
ffe11d9d884594f08792f688bf5c78c9e07e61dd,RayDeCampo,RayDeCampo,3,"['commons-numbers-fraction/src/main/java/org/apache/commons/numbers/fraction/BigFraction.java', 'commons-numbers-fraction/src/main/java/org/apache/commons/numbers/fraction/Fraction.java', 'commons-numbers-fraction/src/main/java/org/apache/commons/numbers/fraction/FractionFormat.java']",NUMBERS-6: Fix javadoc errors,NUMBERS-6
ec826b0fc1ae6d731d3b848cf9f60f676c4bc261,RayDeCampo,RayDeCampo,7,"['commons-numbers-fraction/src/main/java/org/apache/commons/numbers/fraction/BigFractionFormat.java', 'commons-numbers-fraction/src/main/java/org/apache/commons/numbers/fraction/Fraction.java', 'commons-numbers-fraction/src/main/java/org/apache/commons/numbers/fraction/FractionException.java', 'commons-numbers-fraction/src/main/java/org/apache/commons/numbers/fraction/FractionFormat.java', 'commons-numbers-fraction/src/main/java/org/apache/commons/numbers/fraction/FractionParseException.java', 'commons-numbers-fraction/src/test/java/org/apache/commons/numbers/fraction/BigFractionFormatTest.java', 'commons-numbers-fraction/src/test/java/org/apache/commons/numbers/fraction/FractionFormatTest.java']","NUMBERS-6: Remove specialized exception from public API (contd).
FractionParseException becomes package private and inherits from java.text.ParseException.",NUMBERS-6
41e2f65b34c978f4377b2f043fec28a61402962d,RayDeCampo,RayDeCampo,12,"['commons-numbers-fraction/src/main/java/org/apache/commons/numbers/fraction/BigFraction.java', 'commons-numbers-fraction/src/main/java/org/apache/commons/numbers/fraction/Fraction.java', 'commons-numbers-fraction/src/main/java/org/apache/commons/numbers/fraction/FractionConversionException.java', 'commons-numbers-fraction/src/main/java/org/apache/commons/numbers/fraction/FractionException.java', 'commons-numbers-fraction/src/main/java/org/apache/commons/numbers/fraction/FractionFormat.java', 'commons-numbers-fraction/src/main/java/org/apache/commons/numbers/fraction/FractionOverflowException.java', 'commons-numbers-fraction/src/main/java/org/apache/commons/numbers/fraction/FractionParseException.java', 'commons-numbers-fraction/src/main/java/org/apache/commons/numbers/fraction/ZeroDenominatorException.java', 'commons-numbers-fraction/src/test/java/org/apache/commons/numbers/fraction/BigFractionFormatTest.java', 'commons-numbers-fraction/src/test/java/org/apache/commons/numbers/fraction/BigFractionTest.java', 'commons-numbers-fraction/src/test/java/org/apache/commons/numbers/fraction/FractionFormatTest.java', 'commons-numbers-fraction/src/test/java/org/apache/commons/numbers/fraction/FractionTest.java']","NUMBERS-6: Remove specialized exception from public API.
FractionException becomes package private and inherits from java.lang.ArithmeticException.  Subclasses of FractionException are eliminated.",NUMBERS-6
2376972689063b7f6f8708c49c138b25b4710310,ericbarnhill,ericbarnhill,1,['commons-numbers-complex/src/test/java/org/apache/commons/numbers/complex/TestUtils.java'],Added import statement to numbers-complex test classes to import commons.core.Precision for calls to Precision(),
aebd665f713932a665fb886ba58c866536f1c94b,ericbarnhill,ericbarnhill,2,"['commons-numbers-complex/src/main/java/org/apache/commons/numbers/complex/Complex.java', 'commons-numbers-complex/src/main/java/org/apache/commons/numbers/complex/Precision.java']",Removed complex.Precision and replaced all references to it with references to core.Precision by adding import statements,
fbb60fbf90c4912492c748bca6638ccbcad399bd,RayDeCampo,RayDeCampo,1,['commons-numbers-core/src/main/java/org/apache/commons/numbers/core/ArithmeticUtils.java'],NUMBERS-6: Remove throws clause for (unchecked) ArithmeticException,NUMBERS-6
dca007d2226649a55bd3ee512580ca63d7354e56,RayDeCampo,RayDeCampo,7,"['commons-numbers-core/src/main/java/org/apache/commons/numbers/core/ArithmeticUtils.java', 'commons-numbers-core/src/main/java/org/apache/commons/numbers/core/NumbersArithmeticException.java', 'commons-numbers-core/src/test/java/org/apache/commons/numbers/core/ArithmeticUtilsTest.java', 'commons-numbers-fraction/src/main/java/org/apache/commons/numbers/fraction/Fraction.java', 'commons-numbers-fraction/src/main/java/org/apache/commons/numbers/fraction/FractionException.java', 'commons-numbers-fraction/src/test/java/org/apache/commons/numbers/fraction/BigFractionTest.java', 'commons-numbers-fraction/src/test/java/org/apache/commons/numbers/fraction/FractionTest.java']",NUMBERS-6: Make NumbersArithmeticException a private exception within ArithmeticUtils and change public API to reflect java.lang.ArithmeticException,NUMBERS-6
fe27e8ec9e02ce99ed840d56ab6ecd6303fd2f3f,RayDeCampo,RayDeCampo,11,"['commons-numbers-core/src/main/java/org/apache/commons/numbers/core/ArithmeticUtils.java', 'commons-numbers-fraction/src/main/java/org/apache/commons/numbers/fraction/AbstractFormat.java', 'commons-numbers-fraction/src/main/java/org/apache/commons/numbers/fraction/BigFraction.java', 'commons-numbers-fraction/src/main/java/org/apache/commons/numbers/fraction/BigFractionField.java', 'commons-numbers-fraction/src/main/java/org/apache/commons/numbers/fraction/BigFractionFormat.java', 'commons-numbers-fraction/src/main/java/org/apache/commons/numbers/fraction/Fraction.java', 'commons-numbers-fraction/src/main/java/org/apache/commons/numbers/fraction/FractionConversionException.java', 'commons-numbers-fraction/src/main/java/org/apache/commons/numbers/fraction/FractionField.java', 'commons-numbers-fraction/src/main/java/org/apache/commons/numbers/fraction/FractionFormat.java', 'commons-numbers-fraction/src/main/java/org/apache/commons/numbers/fraction/ProperBigFractionFormat.java', 'commons-numbers-fraction/src/main/java/org/apache/commons/numbers/fraction/ProperFractionFormat.java']",NUMBERS-6: Remove @since from classes as there has not been a release of common-numbers yet.,NUMBERS-6
ca71f3559f3b51804dca33dc895c2b89b846f124,RayDeCampo,,32,"['commons-numbers-complex/pom.xml', 'commons-numbers-core/pom.xml', 'commons-numbers-core/src/main/java/org/apache/commons/numbers/core/ArithmeticUtils.java', 'commons-numbers-core/src/main/java/org/apache/commons/numbers/core/NumbersArithmeticException.java', 'commons-numbers-core/src/test/java/org/apache/commons/numbers/core/ArithmeticUtilsTest.java', 'commons-numbers-fraction/LICENSE.txt', 'commons-numbers-fraction/NOTICE.txt', 'commons-numbers-fraction/README.md', 'commons-numbers-fraction/pom.xml', 'commons-numbers-fraction/src/main/java/org/apache/commons/numbers/fraction/AbstractFormat.java', 'commons-numbers-fraction/src/main/java/org/apache/commons/numbers/fraction/BigFraction.java', 'commons-numbers-fraction/src/main/java/org/apache/commons/numbers/fraction/BigFractionField.java', 'commons-numbers-fraction/src/main/java/org/apache/commons/numbers/fraction/BigFractionFormat.java', 'commons-numbers-fraction/src/main/java/org/apache/commons/numbers/fraction/Fraction.java', 'commons-numbers-fraction/src/main/java/org/apache/commons/numbers/fraction/FractionConversionException.java', 'commons-numbers-fraction/src/main/java/org/apache/commons/numbers/fraction/FractionException.java', 'commons-numbers-fraction/src/main/java/org/apache/commons/numbers/fraction/FractionField.java', 'commons-numbers-fraction/src/main/java/org/apache/commons/numbers/fraction/FractionFormat.java', 'commons-numbers-fraction/src/main/java/org/apache/commons/numbers/fraction/FractionOverflowException.java', 'commons-numbers-fraction/src/main/java/org/apache/commons/numbers/fraction/FractionParseException.java', 'commons-numbers-fraction/src/main/java/org/apache/commons/numbers/fraction/ProperBigFractionFormat.java', 'commons-numbers-fraction/src/main/java/org/apache/commons/numbers/fraction/ProperFractionFormat.java', 'commons-numbers-fraction/src/main/java/org/apache/commons/numbers/fraction/ZeroDenominatorException.java', 'commons-numbers-fraction/src/main/java/org/apache/commons/numbers/fraction/package-info.java', 'commons-numbers-fraction/src/test/java/org/apache/commons/numbers/fraction/BigFractionFieldTest.java', 'commons-numbers-fraction/src/test/java/org/apache/commons/numbers/fraction/BigFractionFormatTest.java', 'commons-numbers-fraction/src/test/java/org/apache/commons/numbers/fraction/BigFractionTest.java', 'commons-numbers-fraction/src/test/java/org/apache/commons/numbers/fraction/FractionFieldTest.java', 'commons-numbers-fraction/src/test/java/org/apache/commons/numbers/fraction/FractionFormatTest.java', 'commons-numbers-fraction/src/test/java/org/apache/commons/numbers/fraction/FractionTest.java', 'commons-numbers-quaternion/pom.xml', 'pom.xml']","NUMBERS-6: Create structure for fraction module within commons-numbers.

Add dependencyManagement to parent pom.xml for uniform dependency on numbers core.
Remove version from references to numbers-core in child modules.
Add test jar to numbers core pom.xml to allow for re-use of TestUtils.
Add ArithmeticUtils from commons-math since Fraction, BigFraction heavily depends on it.",NUMBERS-6
4094c82a9f6c55c03814f648b4b43c5f7e5d0425,,,1,['commons-numbers-complex/src/test/java/org/apache/commons/numbers/complex/ComplexTest.java'],Unit test.,
4d701754800b2e189b3f1850d797ae9143c4a6d0,,,1,['commons-numbers-complex/src/main/java/org/apache/commons/numbers/complex/Complex.java'],Javadoc.,
c12828547e579e83f21824bc36ae202d579463ef,,,1,['commons-numbers-quaternion/src/main/java/org/apache/commons/numbers/quaternion/Quaternion.java'],Declaration order (CheckStyle).,
015c52c1393bdad2e78120b0ba1ce8e083ecf803,,,1,['commons-numbers-quaternion/src/main/java/org/apache/commons/numbers/quaternion/Quaternion.java'],No tabs.,
473b2384d2776f1f10e8cd500635cf1dd0ebd1c6,,,1,['commons-numbers-core/src/main/java/org/apache/commons/numbers/core/package-info.java'],"Added ""package-info"" file (CheckStyle).",
fed45c3b1bfe61819655974f2baf5526a1c3c8f9,,,1,['commons-numbers-complex/src/main/java/org/apache/commons/numbers/complex/Complex.java'],No tabs.,
d5937fa66ddcc3a300e86a788cf252466e402230,,,1,['commons-numbers-complex/src/main/java/org/apache/commons/numbers/complex/Complex.java'],Declaration order (CheckStyle).,
87a892774da5b7c1b8f9ddcd48270515ddc1d3c5,,,10,"['src/test/maxima/special/RealFunctionValidation/MANIFEST.txt', 'src/test/maxima/special/RealFunctionValidation/README.txt', 'src/test/maxima/special/RealFunctionValidation/RealFunctionValidation.java', 'src/test/maxima/special/RealFunctionValidation/RealFunctionValidation.sh', 'src/test/maxima/special/reference/gamma.mac', 'src/test/maxima/special/reference/gamma.properties', 'src/test/maxima/special/reference/logBeta.mac', 'src/test/maxima/special/reference/logBeta.properties', 'src/test/maxima/special/reference/logGamma.mac', 'src/test/maxima/special/reference/logGamma.properties']",Cleanup.,
19d6547339608c30bfbd2f78add7db40fab08872,,,2,"['src/assembly/bin.xml', 'src/assembly/src.xml']",Add build files.,
a5e6fae2fd31c84d3b70491bbeac52b70910f28f,,,1,['README.md'],"Added ""badges"".",
c5de65a2cedbf7c62d6fcc5a01b5eca35d5e73b2,,,103,"['.travis.yml', 'NOTICE.txt', 'README.md', 'commons-numbers-complex/LICENSE.txt', 'commons-numbers-complex/NOTICE.txt', 'commons-numbers-complex/README.md', 'commons-numbers-complex/pom.xml', 'commons-numbers-complex/src/main/java/org/apache/commons/numbers/complex/Complex.java', 'commons-numbers-complex/src/main/java/org/apache/commons/numbers/complex/ComplexUtils.java', 'commons-numbers-complex/src/main/java/org/apache/commons/numbers/complex/Precision.java', 'commons-numbers-complex/src/main/java/org/apache/commons/numbers/complex/RootsOfUnity.java', 'commons-numbers-complex/src/main/java/org/apache/commons/numbers/complex/package-info.java', 'commons-numbers-complex/src/test/java/org/apache/commons/numbers/complex/ComplexTest.java', 'commons-numbers-complex/src/test/java/org/apache/commons/numbers/complex/ComplexUtilsTest.java', 'commons-numbers-complex/src/test/java/org/apache/commons/numbers/complex/RootsOfUnityTest.java', 'commons-numbers-complex/src/test/java/org/apache/commons/numbers/complex/TestUtils.java', 'commons-numbers-core/LICENSE.txt', 'commons-numbers-core/NOTICE.txt', 'commons-numbers-core/README.md', 'commons-numbers-core/pom.xml', 'commons-numbers-core/src/main/java/org/apache/commons/numbers/core/Precision.java', 'commons-numbers-core/src/site/site.xml', 'commons-numbers-core/src/site/xdoc/index.xml', 'commons-numbers-core/src/test/java/org/apache/commons/numbers/core/PrecisionTest.java', 'commons-numbers-core/src/test/java/org/apache/commons/numbers/core/TestUtils.java', 'commons-numbers-quaternion/LICENSE.txt', 'commons-numbers-quaternion/NOTICE.txt', 'commons-numbers-quaternion/README.md', 'commons-numbers-quaternion/pom.xml', 'commons-numbers-quaternion/src/main/java/org/apache/commons/numbers/quaternion/Quaternion.java', 'commons-numbers-quaternion/src/main/java/org/apache/commons/numbers/quaternion/package-info.java', 'commons-numbers-quaternion/src/test/java/org/apache/commons/numbers/quaternion/QuaternionTest.java', 'dist-archive/pom.xml', 'dist-archive/src/assembly/bin.xml', 'dist-archive/src/assembly/src.xml', 'doc/development/development.howto.txt', 'doc/release/release.howto.txt', 'doc/release/settings.xml', 'findbugs-exclude-filter.xml', 'pom.xml', 'src/changes/changes.xml', 'src/main/java/org/apache/commons/complex/ComplexFormat.java', 'src/main/resources/checkstyle/checkstyle.xml', 'src/main/resources/checkstyle/license-header.txt', 'src/main/resources/clirr/clirr-ignored.xml', 'src/main/resources/findbugs/findbugs-exclude-filter.xml', 'src/main/resources/pmd/pmd-ruleset.xml', 'src/site/apt/userguide/special.apt', 'src/site/design/differentiation.puml', 'src/site/design/oneD.puml', 'src/site/design/partitioning.puml', 'src/site/design/solver.puml', 'src/site/design/threeD.puml', 'src/site/design/twoD.puml', 'src/site/site.xml', 'src/site/xdoc/developers.xml', 'src/site/xdoc/download_numbers.xml', 'src/site/xdoc/index.xml', 'src/site/xdoc/issue-tracking.xml', 'src/site/xdoc/mail-lists.xml', 'src/site/xdoc/proposal.xml', 'src/test/R/ChiSquareDistributionTestCases.R', 'src/test/R/FDistributionTestCases.R', 'src/test/R/GammaDistributionTestCases.R', 'src/test/R/KolmogorovSmirnovDistributionTestCases.R', 'src/test/R/KolmogorovSmirnovTestCases.R', 'src/test/R/LevyDistributionTestCases.R', 'src/test/R/README.txt', 'src/test/R/TDistributionTestCases.R', 'src/test/R/TTestCases', 'src/test/R/WeibullDistributionTestCases.R', 'src/test/R/anovaTestCases', 'src/test/R/binomialTestCases', 'src/test/R/cauchyTestCases.R', 'src/test/R/chiSquareTestCases', 'src/test/R/correlationTestCases', 'src/test/R/covarianceTestCases', 'src/test/R/descriptiveTestCases', 'src/test/R/exponentialTestCases', 'src/test/R/geometricTestCases', 'src/test/R/gumbelTestCases.R', 'src/test/R/hypergeometricTestCases', 'src/test/R/laplaceTestCases.R', 'src/test/R/logNormalTestCases', 'src/test/R/logisticsTestCases.R', 'src/test/R/multipleOLSRegressionTestCases', 'src/test/R/nakagamiTestCases.R', 'src/test/R/normalTestCases', 'src/test/R/paretoTestCases', 'src/test/R/pascalTestCases', 'src/test/R/poissonTestCases', 'src/test/R/regressionTestCases', 'src/test/R/testAll', 'src/test/R/testFunctions', 'src/test/R/zipfTestCases', 'src/test/java/org/apache/commons/complex/ComplexFormatAbstractTest.java', 'src/test/java/org/apache/commons/complex/ComplexFormatTest.java', 'src/test/java/org/apache/commons/complex/ComplexUtilsTest.java.orig', 'src/test/java/org/apache/commons/complex/FrenchComplexFormatTest.java', 'src/test/java/org/apache/commons/complex/RetryRunner.java', 'src/test/java/org/apache/commons/complex/RetryRunnerTest.java', 'src/test/java/org/apache/commons/complex/TestUtils.java.orig', 'test-jar.xml']","Merge branch 'multimodule'

Completes issue NUMBERS-5 (see JIRA).",
65a58afd8e06d3193a2a03be6a64ec451418c54b,,,2,"['commons-numbers-core/src/site/site.xml', 'commons-numbers-core/src/site/xdoc/index.xml']",Module's custom description (to be expanded).,
0a3a6732931a5582d0d9f0a2a1ab8f76efe92623,,,1,['commons-numbers-complex/src/main/java/org/apache/commons/numbers/complex/Complex.java'],"Removed ""@since"" tags.",
b4907a33d771c60597c46c56d33a279184e76684,,,1,['commons-numbers-complex/src/main/java/org/apache/commons/numbers/complex/Complex.java'],Method should not be part of the public API.,
b797559e4141da1f649f0594c28b06ce6b338bcb,,,1,['commons-numbers-complex/src/main/java/org/apache/commons/numbers/complex/Complex.java'],"Removed methods that do not belong in class ""Complex"".

Similar methods are defined in class ""Precision"" (module ""commons-numbers-core"").",
539279ce0e9de7c68b149afa0a908b72225fd8d8,,,1,['commons-numbers-complex/src/main/java/org/apache/commons/numbers/complex/Complex.java'],"Use ""date"" convention for assigning serial version identifier.",
f3d40f857b21005177eda7d794832fc119e46668,,,2,"['pom.xml', 'src/site/xdoc/issue-tracking.xml']",Correct project info.,
3413c4a74169de85f7d5cc8fb23c8f70cb9c8db1,,,1,['src/site/xdoc/index.xml'],Correct project info.,
c7608e46c519d56bdc1062c302632f3e82f5a171,,,1,['src/changes/changes.xml'],Correct project info.,
d93af7790f25beaf6fb6c81b2f1e95fc6711b525,,,1,['commons-numbers-complex/src/main/java/org/apache/commons/numbers/complex/Complex.java'],Javadoc.,
8dc0ad8c189688731f2a5635187135b71df3c79d,,,1,['src/site/site.xml'],Correct project info.,
81911e4c754d7636ff2acb91e93b5fffc2f9e7c6,,,4,"['src/site/xdoc/developers.xml', 'src/site/xdoc/download_numbers.xml', 'src/site/xdoc/issue-tracking.xml', 'src/site/xdoc/mail-lists.xml']",Correct project info.,
7a4a3a61e75d23ae0e35c7b261b0f1daa2a1f94a,,,9,"['src/site/apt/userguide/special.apt', 'src/site/design/differentiation.puml', 'src/site/design/oneD.puml', 'src/site/design/partitioning.puml', 'src/site/design/solver.puml', 'src/site/design/threeD.puml', 'src/site/design/twoD.puml', 'src/site/xdoc/download_math.xml', 'src/site/xdoc/proposal.xml']",Cleanup.,
69d3b623149d99893755bc7cafce9d8708cbbf58,,,1,['.travis.yml'],Enable Travis CI.,
b026db1bdb7f8beb663484f4a04a93832ee99f50,,,3,"['dist-archive/pom.xml', 'dist-archive/src/assembly/bin.xml', 'dist-archive/src/assembly/src.xml']",Added module for generating the distribution (archive) files.,
b7dc0cf862cada1be5cc772898f754cf11977b9a,,,3,"['doc/development/development.howto.txt', 'doc/release/release.howto.txt', 'doc/release/settings.xml']",Updated development and release howtos.,
c45413279a7e1eec230516ec1f8efd5456c6215e,,,35,"['NOTICE.txt', 'README.md', 'commons-numbers-complex/LICENSE.txt', 'commons-numbers-complex/NOTICE.txt', 'commons-numbers-complex/README.md', 'commons-numbers-complex/pom.xml', 'commons-numbers-complex/src/main/java/org/apache/commons/numbers/complex/Complex.java', 'commons-numbers-complex/src/main/java/org/apache/commons/numbers/complex/ComplexUtils.java', 'commons-numbers-complex/src/main/java/org/apache/commons/numbers/complex/Precision.java', 'commons-numbers-complex/src/main/java/org/apache/commons/numbers/complex/RootsOfUnity.java', 'commons-numbers-complex/src/main/java/org/apache/commons/numbers/complex/package-info.java', 'commons-numbers-complex/src/test/java/org/apache/commons/numbers/complex/ComplexTest.java', 'commons-numbers-complex/src/test/java/org/apache/commons/numbers/complex/ComplexUtilsTest.java', 'commons-numbers-complex/src/test/java/org/apache/commons/numbers/complex/RootsOfUnityTest.java', 'commons-numbers-complex/src/test/java/org/apache/commons/numbers/complex/TestUtils.java', 'commons-numbers-core/LICENSE.txt', 'commons-numbers-core/NOTICE.txt', 'commons-numbers-core/README.md', 'commons-numbers-core/pom.xml', 'commons-numbers-core/src/main/java/org/apache/commons/numbers/core/Precision.java', 'commons-numbers-core/src/test/java/org/apache/commons/numbers/core/PrecisionTest.java', 'commons-numbers-core/src/test/java/org/apache/commons/numbers/core/TestUtils.java', 'commons-numbers-quaternion/LICENSE.txt', 'commons-numbers-quaternion/NOTICE.txt', 'commons-numbers-quaternion/README.md', 'commons-numbers-quaternion/pom.xml', 'commons-numbers-quaternion/src/main/java/org/apache/commons/numbers/quaternion/Quaternion.java', 'commons-numbers-quaternion/src/main/java/org/apache/commons/numbers/quaternion/package-info.java', 'commons-numbers-quaternion/src/test/java/org/apache/commons/numbers/quaternion/QuaternionTest.java', 'pom.xml', 'src/main/resources/checkstyle/checkstyle.xml', 'src/main/resources/checkstyle/license-header.txt', 'src/main/resources/clirr/clirr-ignored.xml', 'src/main/resources/findbugs/findbugs-exclude-filter.xml', 'src/main/resources/pmd/pmd-ruleset.xml']","Multimodule project setup.

Created ""core"", ""complex"" and ""quaternion"" modules.",
a752ab8d4e4d1a9982cd1df45743cafc6dedd5dc,,,60,"['checkstyle.xml', 'clirr-ignored.xml', 'findbugs-exclude-filter.xml', 'license-header.txt', 'pmd-ruleset.xml', 'src/main/java/org/apache/commons/complex/Complex.java', 'src/main/java/org/apache/commons/complex/ComplexFormat.java', 'src/main/java/org/apache/commons/complex/ComplexUtils.java', 'src/main/java/org/apache/commons/complex/Precision.java', 'src/main/java/org/apache/commons/complex/Quaternion.java', 'src/main/java/org/apache/commons/complex/RootsOfUnity.java', 'src/main/java/org/apache/commons/complex/package-info.java', 'src/test/R/ChiSquareDistributionTestCases.R', 'src/test/R/FDistributionTestCases.R', 'src/test/R/GammaDistributionTestCases.R', 'src/test/R/KolmogorovSmirnovDistributionTestCases.R', 'src/test/R/KolmogorovSmirnovTestCases.R', 'src/test/R/LevyDistributionTestCases.R', 'src/test/R/README.txt', 'src/test/R/TDistributionTestCases.R', 'src/test/R/TTestCases', 'src/test/R/WeibullDistributionTestCases.R', 'src/test/R/anovaTestCases', 'src/test/R/binomialTestCases', 'src/test/R/cauchyTestCases.R', 'src/test/R/chiSquareTestCases', 'src/test/R/correlationTestCases', 'src/test/R/covarianceTestCases', 'src/test/R/descriptiveTestCases', 'src/test/R/exponentialTestCases', 'src/test/R/geometricTestCases', 'src/test/R/gumbelTestCases.R', 'src/test/R/hypergeometricTestCases', 'src/test/R/laplaceTestCases.R', 'src/test/R/logNormalTestCases', 'src/test/R/logisticsTestCases.R', 'src/test/R/multipleOLSRegressionTestCases', 'src/test/R/nakagamiTestCases.R', 'src/test/R/normalTestCases', 'src/test/R/paretoTestCases', 'src/test/R/pascalTestCases', 'src/test/R/poissonTestCases', 'src/test/R/regressionTestCases', 'src/test/R/testAll', 'src/test/R/testFunctions', 'src/test/R/zipfTestCases', 'src/test/java/org/apache/commons/complex/ComplexFormatAbstractTest.java', 'src/test/java/org/apache/commons/complex/ComplexFormatTest.java', 'src/test/java/org/apache/commons/complex/ComplexTest.java', 'src/test/java/org/apache/commons/complex/ComplexUtilsTest.java', 'src/test/java/org/apache/commons/complex/ComplexUtilsTest.java.orig', 'src/test/java/org/apache/commons/complex/FrenchComplexFormatTest.java', 'src/test/java/org/apache/commons/complex/QuaternionTest.java', 'src/test/java/org/apache/commons/complex/Retry.java', 'src/test/java/org/apache/commons/complex/RetryRunner.java', 'src/test/java/org/apache/commons/complex/RetryRunnerTest.java', 'src/test/java/org/apache/commons/complex/RootsOfUnityTest.java', 'src/test/java/org/apache/commons/complex/TestUtils.java', 'src/test/java/org/apache/commons/complex/TestUtils.java.orig', 'test-jar.xml']",Cleanup (massive delete).,
0d64d85edac739593908f4a7d024c9e802109428,,,3,"['src/main/java/org/apache/commons/complex/Complex.java', 'src/main/java/org/apache/commons/complex/ComplexUtils.java', 'src/test/java/org/apache/commons/complex/ComplexTest.java']","Merge branch 'ray_C-4'

This closes #3",
60308d79340ebc90d579384fed8bea0bdc6ba319,,,2,"['src/main/java/org/apache/commons/complex/ComplexUtils.java', 'src/test/java/org/apache/commons/complex/ComplexTest.java']",Lowered tolerances (unit tests).,
2b29ed84c9461fba037b8ebfd8a39637c08b6b3e,RayDeCampo,RayDeCampo,2,"['src/main/java/org/apache/commons/complex/Complex.java', 'src/test/java/org/apache/commons/complex/ComplexTest.java']","COMPLEX-4: When complex 0 is rasied to a positive (real) exponent, return zero.",COMPLEX-4
b206d9c80c95433d530e639308e38b92c7e3fdef,,,3,"['pom.xml', 'src/main/java/org/apache/commons/complex/RootsOfUnity.java', 'src/test/java/org/apache/commons/complex/RootsOfUnityTest.java']",COMPLEX-3: Make class immutable.,COMPLEX-3
cd6412f12abb6a1da6708cd66ccbc9f46cdb8958,,,3,"['.gitignore', 'src/main/java/org/apache/commons/complex/ComplexUtils.java', 'src/test/java/org/apache/commons/complex/TestUtils.java']","Merge branch 'ray_C-1'

This closes #2",
e5e3e49afb6d9bbd24c78bc3fd067667d6e536f3,,,1,['src/main/java/org/apache/commons/complex/ComplexUtils.java'],Methods whose sole purpose is to throw are to be avoided.,
0caa98c8db333cd20014781ab0b524556da2a06e,,,1,['src/main/java/org/apache/commons/complex/ComplexUtils.java'],No tabs allowed.,
2926b81702424c6ed92b19959266e8bd72cb8991,RayDeCampo,RayDeCampo,0,[],Merge branch 'master' into COMPLEX-1,
7524db54810326e1e22a13b187107dbb284a6353,,,4,"['src/main/java/org/apache/commons/complex/Complex.java', 'src/main/java/org/apache/commons/complex/Precision.java', 'src/main/java/org/apache/commons/complex/Quaternion.java', 'src/test/java/org/apache/commons/complex/RootsOfUnityTest.java']","Merge branch 'ray_C-1'

This closes #1",
c11baf2d397134c700b17a1603b041d49e2af01e,RayDeCampo,RayDeCampo,3,"['.gitignore', 'src/main/java/org/apache/commons/complex/ComplexUtils.java', 'src/test/java/org/apache/commons/complex/TestUtils.java']","[COMPLEX-1] Use Precision.equals() in TestUtils where appropriate.
Use IllegalArgumentException in ComplexUtils instead of RuntimeException",COMPLEX-1
f7cca80f4a6913f22829ad5dfcebd980ce5289cd,RayDeCampo,RayDeCampo,4,"['src/main/java/org/apache/commons/complex/Complex.java', 'src/main/java/org/apache/commons/complex/Precision.java', 'src/main/java/org/apache/commons/complex/Quaternion.java', 'src/test/java/org/apache/commons/complex/RootsOfUnityTest.java']","[COMPLEX-1] Fix equals methods in Complex and Quaternion by copying over Precision from commons-math.  Made Precision package protected and removed parts not used by code currently in commons-complex.  This fixes ComplexTest and QuaternionTest unit tests.
Fix RootsOfUnityTest by changing test methods to expect the correct exception class.",COMPLEX-1
1aba3c8ca09b01203e36ec06f8e24edbb9872a3d,,,5,"['CONTRIBUTING.md', 'LICENSE.txt', 'NOTICE.txt', 'README.md', 'RELEASE-NOTES.txt']",Changed information corresponding to new component.,
3078ff37fdc4123cf15907d07a1e5d0fb2f48712,,,2,"['PROPOSAL.html', 'build.xml']",Remove spurious files.,
2820ac4440fd900d4153086f84cbde0adda4b4db,,,1,['pom.xml'],"Update ""parent"" version.",
1cdbdf7b457fb2ccdcbba3d2310368a547ff0287,,,1,['pom.xml'],Reset component version.,
346a1791e1c36d50ce7b3ad454514dcf641f0816,,,2,"['math-RC.sh', 'math-pre-RC.sh']",Removed spurious files.,
b3576eeb69203ce33a2f9750b56e5e402d5a47e0,,,300,"['site-content/.svn/entries', 'site-content/.svn/format', 'site-content/.svn/pristine/00/0005dbfe2dc2b1d6cf19f0e30ace5c4d707c5e1f.svn-base', 'site-content/.svn/pristine/00/0016aeb7bb938545b97c7cd73f45a2d32e8612f3.svn-base', 'site-content/.svn/pristine/00/001d5d1b9f07d1ab6dbe7002ff5bdc086f3f0224.svn-base', 'site-content/.svn/pristine/00/0046a8f6bd12e630b9ceb5938318edadb203823a.svn-base', 'site-content/.svn/pristine/00/00479734f7eb48b794b272cb3925748d7756a83d.svn-base', 'site-content/.svn/pristine/00/0048c3b3b02893cf14c8c8a8283703d6333fdf9a.svn-base', 'site-content/.svn/pristine/00/004cf552025e4496cd542dd1a0bc8abcac8cbdf8.svn-base', 'site-content/.svn/pristine/00/004d1ebf70b1c6e0d66098448fd9422b25183f4c.svn-base', 'site-content/.svn/pristine/00/00584eded735db5b5bbeb393f2ca5bf1e8cf7f86.svn-base', 'site-content/.svn/pristine/00/0062f6ff5058762551f99b63a17f4c9fa06e65b0.svn-base', 'site-content/.svn/pristine/00/0075318a7def8d87ce5330d1c6fe0c71c077eef9.svn-base', 'site-content/.svn/pristine/00/008860ff6b81bddba1ec0fe01c6b9371a3015f17.svn-base', 'site-content/.svn/pristine/00/0090d83b4de4dd55e4710166ecb79d69cdd6ab4a.svn-base', 'site-content/.svn/pristine/00/0099dee2b2c41f911fadd8277c0e1a64fac6d472.svn-base', 'site-content/.svn/pristine/00/00a74bfe4cec91974e2a34cc98c7a2f9b440a20a.svn-base', 'site-content/.svn/pristine/00/00a80ebdf9f3fc1ac570ea1463a68f0cadfd622f.svn-base', 'site-content/.svn/pristine/00/00ad54137d2fc827d768082ee54e6f5eb5e6b511.svn-base', 'site-content/.svn/pristine/00/00b4d24f983da1d29823fe71b94f6e73753316ae.svn-base', 'site-content/.svn/pristine/00/00be11ea5ec1d596206f1fbf5ea24f00b947f584.svn-base', 'site-content/.svn/pristine/00/00c41ce0d2341a560cd26f74fa06a0955214e277.svn-base', 'site-content/.svn/pristine/00/00ce289b18644a47b9529086b18c812713897b33.svn-base', 'site-content/.svn/pristine/00/00d5cb4a9e8f93226bbd756539031dc39759e16b.svn-base', 'site-content/.svn/pristine/00/00d992b5cc0aafcc36ada48008d03a1171ef3dd2.svn-base', 'site-content/.svn/pristine/00/00e86b4ed32be23b9c8e52e00af52e524a028fc0.svn-base', 'site-content/.svn/pristine/00/00e8d92a858a56fb80e271c7a9ca567b4e157507.svn-base', 'site-content/.svn/pristine/00/00eb30976fade92e55064ed2eb1635ef4d92a57c.svn-base', 'site-content/.svn/pristine/00/00f5f87327fe16af2e08b5fe9ac2494c5f257788.svn-base', 'site-content/.svn/pristine/01/0105e6430b10c526de3f811c2c9c28ded7073a95.svn-base', 'site-content/.svn/pristine/01/01066afe0b60f189fd7c20f239a85e737627ff93.svn-base', 'site-content/.svn/pristine/01/011cc88750c2944aad9860141658a8f81e359c2a.svn-base', 'site-content/.svn/pristine/01/012bc7bf2205612733fb819ec4eb39b388ec55ab.svn-base', 'site-content/.svn/pristine/01/012e33297ff9a0e997d5d36f5d3ebb7813a6d745.svn-base', 'site-content/.svn/pristine/01/012f9934c3c12a984d8aa0d591f1663af38d8ec9.svn-base', 'site-content/.svn/pristine/01/0132500fd9afb314f1efaa902800a0332573ffd6.svn-base', 'site-content/.svn/pristine/01/0132d2e3b78618347a9343e12231fd8ee7ac19f4.svn-base', 'site-content/.svn/pristine/01/01375b6ffa2aa403caa00589a807ec390379da49.svn-base', 'site-content/.svn/pristine/01/0137b10ff2027ef0336b9acf5ffae9a416344aa5.svn-base', 'site-content/.svn/pristine/01/014e0f8527c5ab9e398c8667fdbd2c260c128783.svn-base', 'site-content/.svn/pristine/01/01537ca4c7defdef6d3b73f3ae9ddd8477d5e619.svn-base', 'site-content/.svn/pristine/01/015eab5accf046f00e97e246bfa9f061afd64447.svn-base', 'site-content/.svn/pristine/01/0160bfcf9f29013ca09c1cd4810a80bb97b42234.svn-base', 'site-content/.svn/pristine/01/01638360b7ca4c2419771228ee93d64999e81cd8.svn-base', 'site-content/.svn/pristine/01/01654817fbfa232644108b5640f270f2df04ee8f.svn-base', 'site-content/.svn/pristine/01/016a6f73ada6cb9546dd6f03cb9ae04845221b57.svn-base', 'site-content/.svn/pristine/01/0180a80098e8082e5600758d31a24aaa52111a5b.svn-base', 'site-content/.svn/pristine/01/01831738937f2dbdbe9e9f3ee5e697b1bded6d31.svn-base', 'site-content/.svn/pristine/01/018a0a37eb50756c7f1d6da7dd5ce005fee54cd3.svn-base', 'site-content/.svn/pristine/01/018bea896908441d874252ea5ccda6d39cb8eb6b.svn-base', 'site-content/.svn/pristine/01/018eec2b19174362ea8ab1c13d682727c9422167.svn-base', 'site-content/.svn/pristine/01/0195b47df267c2516cc89a22f433228a4d12e3ce.svn-base', 'site-content/.svn/pristine/01/019935469ea856554baf2e88654f57e7edecfb36.svn-base', 'site-content/.svn/pristine/01/019a39efbb775602a7666dc02926deacb70fcd96.svn-base', 'site-content/.svn/pristine/01/019ba2079f43dde18533cc55b38d33e7f822ae6f.svn-base', 'site-content/.svn/pristine/01/01a1b81a27e3e75ac3704cf69c156c20f29374d6.svn-base', 'site-content/.svn/pristine/01/01a5b514be40045297beae48242576ba96a19dd8.svn-base', 'site-content/.svn/pristine/01/01b1c8e58b8edaf62207fec2a0f4e0c3fd53d82b.svn-base', 'site-content/.svn/pristine/01/01b308ff3db47a0404363acdcccadd471dab93fe.svn-base', 'site-content/.svn/pristine/01/01bd7b0c2d4d795a10d660496202021513fb2d34.svn-base', 'site-content/.svn/pristine/01/01bdd85a5975d46e61e375217850a716db1fc4cb.svn-base', 'site-content/.svn/pristine/01/01bf880dd62361d32e359737d6964ca4de5d8057.svn-base', 'site-content/.svn/pristine/01/01c0af4f8fce9b0c40c2a5cad184c5aade2184f6.svn-base', 'site-content/.svn/pristine/01/01c41f02a73de5bf01d35dc9bb44fe132f85e708.svn-base', 'site-content/.svn/pristine/01/01c8f719d56d9adebd516e7e48faca7f4444ca9c.svn-base', 'site-content/.svn/pristine/01/01c9bb46c48a8bf971a4718ff3758877b82a840b.svn-base', 'site-content/.svn/pristine/01/01cfc20fad9369120b00fb6b321f2a5496dc3fc3.svn-base', 'site-content/.svn/pristine/01/01d3ae17bb68857d6a41bc65263c3ce38e84ae26.svn-base', 'site-content/.svn/pristine/01/01f77e104cccca12a2c234d85d40672120bda23c.svn-base', 'site-content/.svn/pristine/01/01f7859be5a1e13eaaf8d5eb15ea925beb91d286.svn-base', 'site-content/.svn/pristine/01/01f83bdb754117eb46e1e0a5337a16a0beccc7e6.svn-base', 'site-content/.svn/pristine/01/01fcb1d2c9ee7d000974da82f3380bc5dac4e767.svn-base', 'site-content/.svn/pristine/01/01fdb10ce7fed68c77a9bd4de95462b962759a78.svn-base', 'site-content/.svn/pristine/02/020d3baf1ad2b592d290dea6d2c60090f19091cb.svn-base', 'site-content/.svn/pristine/02/021736bbfdbd6908de696e000bd58197d394834a.svn-base', 'site-content/.svn/pristine/02/022a650e7c2bd0eb9bd6ea2cb77af51861febc37.svn-base', 'site-content/.svn/pristine/02/022e4a69e828b7270d1373cc33ad7c42f1eacd49.svn-base', 'site-content/.svn/pristine/02/0234cfa6399d85eeba392733975ff2491b8d05c3.svn-base', 'site-content/.svn/pristine/02/0235e44f5ce576c3d01cf47bc88647c94968752c.svn-base', 'site-content/.svn/pristine/02/02400ede19d9f7e7b01938f2dea12f323ef221af.svn-base', 'site-content/.svn/pristine/02/024614075c5e6947fa2c054223872e49bdc79af4.svn-base', 'site-content/.svn/pristine/02/024fb120aee05a4a6247ac64808ea319eb07b41d.svn-base', 'site-content/.svn/pristine/02/02535b2fe0091fb1db30f4498a4d773eec17828f.svn-base', 'site-content/.svn/pristine/02/0254b33a586b348df788298fa7dfdcc45cd88bcf.svn-base', 'site-content/.svn/pristine/02/0258f6d5bc57254aafa9aad01b7f448edd397aa5.svn-base', 'site-content/.svn/pristine/02/025d8723c696f975683abf23fe48eb0590158d23.svn-base', 'site-content/.svn/pristine/02/025dd274e61ae4e2987b5ed84bf12b696e6024ae.svn-base', 'site-content/.svn/pristine/02/026178c649ae6d4853923a0939d684a9b88caac5.svn-base', 'site-content/.svn/pristine/02/0263fb0d61e2be261b279731f72958825c748d1d.svn-base', 'site-content/.svn/pristine/02/026c4868f5e04189f318672cc67485ce9af9333d.svn-base', 'site-content/.svn/pristine/02/026dc539e335ab389d5f8c8ae723df1008733be1.svn-base', 'site-content/.svn/pristine/02/02754c7ece11a0360a4af146048e6ed50c2fc352.svn-base', 'site-content/.svn/pristine/02/02970ba40df127f3625edff272a50883d97b011e.svn-base', 'site-content/.svn/pristine/02/029fb3a0a79cb81ca4b4b5bcaece45a1276824f8.svn-base', 'site-content/.svn/pristine/02/02a02b5104c9f854683a4ebfddd03525b4940af7.svn-base', 'site-content/.svn/pristine/02/02a7a7896e1bc070115819b9683766d3d9dc6956.svn-base', 'site-content/.svn/pristine/02/02aad24ebafaf40059d65003a8d2e0de104aada7.svn-base', 'site-content/.svn/pristine/02/02af31646fd275519e66db7d9c4b3c22caade1cf.svn-base', 'site-content/.svn/pristine/02/02b056a24a8bcf4171e20ddfd78c4d83ff8f5839.svn-base', 'site-content/.svn/pristine/02/02b7864dffc5e9eb196674eb7caa2fa4cb9b7a54.svn-base', 'site-content/.svn/pristine/02/02bc6949093cbcecf73a6bb08b46995dfedecddf.svn-base', 'site-content/.svn/pristine/02/02c9c5677c673af6f96ddf90ecf3f71cd287d4bf.svn-base', 'site-content/.svn/pristine/02/02cb7455c48d59a21ca817d9815417858cd188fc.svn-base', 'site-content/.svn/pristine/02/02d24610076d840918335ea452345f7decba410f.svn-base', 'site-content/.svn/pristine/02/02d98ee9bc88dba854c0ec849c41be4f69ed7b2d.svn-base', 'site-content/.svn/pristine/02/02e7f2399e3e46b04ce5659d7e773b688a68e19a.svn-base', 'site-content/.svn/pristine/02/02f89ff91121c91448ad05d05e81407386349676.svn-base', 'site-content/.svn/pristine/02/02f984fbe254a9ef51432be90f1286fb60fda9ba.svn-base', 'site-content/.svn/pristine/03/030402267c2f0a52c686c13b8f60876266c7df54.svn-base', 'site-content/.svn/pristine/03/03043560e7c9217c0eec5f12ea757b402c913d21.svn-base', 'site-content/.svn/pristine/03/0305b889c3297c01a04339b2237acd9b3062b1de.svn-base', 'site-content/.svn/pristine/03/030ee1cfc0956f6f090c1aa47690331bb8a624aa.svn-base', 'site-content/.svn/pristine/03/031f9279d9b8d0456c816226550bc0a293881ff9.svn-base', 'site-content/.svn/pristine/03/032b94ca8bba33e7ee8fbf833dea7bd29d5d5433.svn-base', 'site-content/.svn/pristine/03/032d45f1be4b0e7cf7c72df5e4976b524633c611.svn-base', 'site-content/.svn/pristine/03/032fb53668c7b67e48e7eb5f92c56e60f63c0bd8.svn-base', 'site-content/.svn/pristine/03/033af26c83a4ca78b766a7bf6890a48da64e3733.svn-base', 'site-content/.svn/pristine/03/033ba4da155c4603ace1474e11133da7499b39a2.svn-base', 'site-content/.svn/pristine/03/03480fa871300fb0bcc9a8a22d1c017a043f2c93.svn-base', 'site-content/.svn/pristine/03/034c9d72dbab6638a375dc5056b97f038b797bbd.svn-base', 'site-content/.svn/pristine/03/034d59488fe9a1005fcb0d28b41181e2ce6c0ff3.svn-base', 'site-content/.svn/pristine/03/0357b6808a42f9a4d3449d8de05ac3c118a65c60.svn-base', 'site-content/.svn/pristine/03/035ac18e42ad45fa598da33ad805832eba490c0d.svn-base', 'site-content/.svn/pristine/03/03601cd8f94efbdcd90b2b550fa156ead9192d2b.svn-base', 'site-content/.svn/pristine/03/0363ca024da7cae3bb2e5a49cdc13667f6fd233e.svn-base', 'site-content/.svn/pristine/03/0364fe56afa958763e6b75322339537d1101e1fd.svn-base', 'site-content/.svn/pristine/03/036f7cbcd3e9bebe8ac24b49c75d4ac29caaae30.svn-base', 'site-content/.svn/pristine/03/03863dd02fda50ba8aca4f84b230df576bf8e18c.svn-base', 'site-content/.svn/pristine/03/038f5906d71bb6126533f5ca205223a0e54c2172.svn-base', 'site-content/.svn/pristine/03/039cf6b7c07826d9d1841d4291d0c357ce11282c.svn-base', 'site-content/.svn/pristine/03/039d92e75964c2960dbb77eb5c9341df23ac5ecc.svn-base', 'site-content/.svn/pristine/03/03b6bcc94f099b937560e77e17c842ef630fffbd.svn-base', 'site-content/.svn/pristine/03/03bdab13a4adc67ded4eb45594d01f2a4903e094.svn-base', 'site-content/.svn/pristine/03/03bed2f5b305df2a3b2274674c1eed4e6c31703a.svn-base', 'site-content/.svn/pristine/03/03ca9ef820f2c4963f37035e82220d36c7230f37.svn-base', 'site-content/.svn/pristine/03/03cc1255ba329c943cdb9e4443019aaaaef135c4.svn-base', 'site-content/.svn/pristine/03/03cd6d1a75192c38b144519b8e0fe5be75494a81.svn-base', 'site-content/.svn/pristine/03/03cd7af8f308d2bf9c58c5c17763634e2306837a.svn-base', 'site-content/.svn/pristine/03/03d1085f8c0d9acd2798328866494bffd28f50fd.svn-base', 'site-content/.svn/pristine/03/03d4dc43c127fa882ae276ba71918f42b2896d23.svn-base', 'site-content/.svn/pristine/03/03db04a245323a8c2887de5b238e2f429bbc178b.svn-base', 'site-content/.svn/pristine/03/03dde7a393a3030aa2cb8bb7d117ae60e0c165b0.svn-base', 'site-content/.svn/pristine/03/03e5cb4c148e2cf962ebd5da1c5a6b83439c4907.svn-base', 'site-content/.svn/pristine/03/03e8ea937934efe2d1c7a43f3facdc5608b63117.svn-base', 'site-content/.svn/pristine/03/03f813052e371f47e23b55592ad3b76600b3c2c2.svn-base', 'site-content/.svn/pristine/04/0400f403db78a35ecc7c09ac8968ab156cf0bd43.svn-base', 'site-content/.svn/pristine/04/0408a9222bbb2ed0a2dc0d095371a6aec9f05114.svn-base', 'site-content/.svn/pristine/04/040d8672c2f4c64bcb6d584b7bf1580b30bfbf82.svn-base', 'site-content/.svn/pristine/04/04143e6999813b2e28d1fed504f92a10d8ab1cfa.svn-base', 'site-content/.svn/pristine/04/041ddc1c191707212f28b391f180201164050cf6.svn-base', 'site-content/.svn/pristine/04/0431958e36e50ca1c5bd5c3b4eb5c0318d671c3c.svn-base', 'site-content/.svn/pristine/04/04354b0f10c37d60a81b3e18a822d178c9be7692.svn-base', 'site-content/.svn/pristine/04/043b4201a6be03513e0bdd80e26d92309bb86995.svn-base', 'site-content/.svn/pristine/04/044a3f3f9e0124e8d9688ccd6d628066af6e5543.svn-base', 'site-content/.svn/pristine/04/044da057b9ac94024ba208dc571fa5726c7000d8.svn-base', 'site-content/.svn/pristine/04/045ff601b7e50b6cf68cd5030cd3caaa41636768.svn-base', 'site-content/.svn/pristine/04/04666bd68ed355d590387e52fec7ef52cee7a48c.svn-base', 'site-content/.svn/pristine/04/0468fb6e24c4e730ff22b6f988eec049627fddaf.svn-base', 'site-content/.svn/pristine/04/0469939989e60542ce9f38703b06e6806d831e9b.svn-base', 'site-content/.svn/pristine/04/04777645254ff0b22944c1ef46bcbd79669f2d8e.svn-base', 'site-content/.svn/pristine/04/04a86be5d58aae681156a81b89565cc77e919a2d.svn-base', 'site-content/.svn/pristine/04/04aeee60e3967a254f9f06aea96a90bac786a7ec.svn-base', 'site-content/.svn/pristine/04/04af0f59716446dac95a14e7e520cd3907572ec4.svn-base', 'site-content/.svn/pristine/04/04b11c5c54543318084f5939151a7e3f9b702347.svn-base', 'site-content/.svn/pristine/04/04b3d9fe10d8843f831d0406e0b83a74bbe98be0.svn-base', 'site-content/.svn/pristine/04/04bbbb2c042f5abe57ee19469e70af1acc36ad98.svn-base', 'site-content/.svn/pristine/04/04beee1b647717925422b9ebde79ca0de8b5aa7f.svn-base', 'site-content/.svn/pristine/04/04c235c553e4747ac4d82b8d31891fb1317fd80b.svn-base', 'site-content/.svn/pristine/04/04c52b7ce83ba93ea84a5637b5d40da3964bb43d.svn-base', 'site-content/.svn/pristine/04/04cb804e1dec69bac8f7e72a73279e50ac5e2b16.svn-base', 'site-content/.svn/pristine/04/04ce002c9f9a9b91d61899fcbec15d440f8712ef.svn-base', 'site-content/.svn/pristine/04/04d34fff33c5e7696d6af00b33b4ed5ed95ac910.svn-base', 'site-content/.svn/pristine/04/04ec73dc578873efd884ddcbf9ff4cbe9c14895f.svn-base', 'site-content/.svn/pristine/04/04f17904df890f466c9e3f08dbb21beabb586931.svn-base', 'site-content/.svn/pristine/04/04f2dc57301b15a8c2ca2d2e7b71f21201073d0f.svn-base', 'site-content/.svn/pristine/04/04f59602fb64c9424416ed366c0a40e9b8f925f1.svn-base', 'site-content/.svn/pristine/04/04f8023a929e8c97cb05b7cc4a609240423a6c28.svn-base', 'site-content/.svn/pristine/04/04fa70c9ffe8e1c9457b901cdecbf43de21b818e.svn-base', 'site-content/.svn/pristine/04/04fe86fa960174ca87e9fcced19d0ca27256c59d.svn-base', 'site-content/.svn/pristine/05/050855af4fd561462df47d9a7e26e0488d2656d6.svn-base', 'site-content/.svn/pristine/05/050909f812c03d4b5a777be040b382352edf34fb.svn-base', 'site-content/.svn/pristine/05/050a03d311c74167d150b8d5086efddb09f88041.svn-base', 'site-content/.svn/pristine/05/0511bcdaab3fcf657ab313116d1aa0664b1e9e44.svn-base', 'site-content/.svn/pristine/05/05136e8c99bed61cf5a4d9edab53478bfece5a1b.svn-base', 'site-content/.svn/pristine/05/0515e09bf5d9368bf67113085effac7ff6fd1af3.svn-base', 'site-content/.svn/pristine/05/05237847808c4f130f42e012422aff139192c1fe.svn-base', 'site-content/.svn/pristine/05/0529bbe7c2af2277ee218c5967c0d9bfbe624b28.svn-base', 'site-content/.svn/pristine/05/0529c2cb1f8ed187dadeb801003dca42bc258761.svn-base', 'site-content/.svn/pristine/05/0529d5f7a9d6b9aae82fe047e32ad1352dfa3a86.svn-base', 'site-content/.svn/pristine/05/052b797b30b300ec4013adbad7597edbae189ef4.svn-base', 'site-content/.svn/pristine/05/0533d43c08fd783748e7d41bbd88d187fb0f81d1.svn-base', 'site-content/.svn/pristine/05/0542b4deb2d10c511bb3af31f5af31893c459eca.svn-base', 'site-content/.svn/pristine/05/05436f8ac5edd2a788065c849d3256eff4ab8abd.svn-base', 'site-content/.svn/pristine/05/054c6d7b1b864ecd49605b58793ddcbb4e9b2831.svn-base', 'site-content/.svn/pristine/05/0552c15b51ef70d24219e9ea1ba3197861e75f10.svn-base', 'site-content/.svn/pristine/05/0552cb0a61ab1ad0c96f61654f2c73f0a56f4283.svn-base', 'site-content/.svn/pristine/05/0560355a0bea7a06a1e7514217ce48b45872a6b3.svn-base', 'site-content/.svn/pristine/05/056036eec389c367e104189cc5aef5f1bd054900.svn-base', 'site-content/.svn/pristine/05/05605fe6dcf73dccc2999c0f2a9a2641f4d8539c.svn-base', 'site-content/.svn/pristine/05/056296ea97240393b9d6163118b2e70da46e20d0.svn-base', 'site-content/.svn/pristine/05/05672c1dee60d47c54abc88005a69f68cf762a25.svn-base', 'site-content/.svn/pristine/05/0567d89002edc2c4db5434c27fc17116519b37ce.svn-base', 'site-content/.svn/pristine/05/05742e5e14206d95c2a1b97a7e2df86055cbfdb3.svn-base', 'site-content/.svn/pristine/05/057a9e28997b330167a2f86a894b7593cb094052.svn-base', 'site-content/.svn/pristine/05/05801f25342628668855c3c53cf63af64737236b.svn-base', 'site-content/.svn/pristine/05/0581f3a857e3023c270ae7ae7893f21c4138a71f.svn-base', 'site-content/.svn/pristine/05/058272b0c355d2754055e4dc87ef880eb6772439.svn-base', 'site-content/.svn/pristine/05/05860b1231b4155d5e6f7d3c4e4a2d8d8a8037f6.svn-base', 'site-content/.svn/pristine/05/058c19d7fb372dac7d9a2dfb46c3646540cf23d3.svn-base', 'site-content/.svn/pristine/05/058d5c7a1b69ad31f68cb7944fdce3d0896008f7.svn-base', 'site-content/.svn/pristine/05/0592dae0108a4bdccb19b4f1d79a39053919e999.svn-base', 'site-content/.svn/pristine/05/0595ce493cd92b77128a9cb98e79cef6b904e801.svn-base', 'site-content/.svn/pristine/05/0597066c3e598e10948986c4811d2d63a655b213.svn-base', 'site-content/.svn/pristine/05/059d998322f4e4e877d5c1a7690baa1db2156576.svn-base', 'site-content/.svn/pristine/05/05a6e213072470f3252874532e0ea97da45e6897.svn-base', 'site-content/.svn/pristine/05/05a7c706916eb74977f5027b9f596daa97e4cc9d.svn-base', 'site-content/.svn/pristine/05/05b16476f578f4422b7c241c9b46de40302625fa.svn-base', 'site-content/.svn/pristine/05/05b6ad03879830b2290e777f1696eaf2836de602.svn-base', 'site-content/.svn/pristine/05/05c55503e74f7e69c60cdafe0d5e6796696f6b94.svn-base', 'site-content/.svn/pristine/05/05cc158164f15697d03a8686521fc02724f167a0.svn-base', 'site-content/.svn/pristine/05/05e77da34b2d9ca3c34941b19c62494d2a89fffa.svn-base', 'site-content/.svn/pristine/05/05f78fcd7f661e1425b88d468dd53e9e0b131851.svn-base', 'site-content/.svn/pristine/06/060fb1b04e9614e32ac41c30b407244cfe1f444e.svn-base', 'site-content/.svn/pristine/06/0610c7cf999e028d85dba8bdc7097be6b825574f.svn-base', 'site-content/.svn/pristine/06/061feea0b6eb9c38a4f3469c3e6f657513afba3a.svn-base', 'site-content/.svn/pristine/06/0629d9f90b637f2566b8b9503de8b61a45c0b67d.svn-base', 'site-content/.svn/pristine/06/062b7177791e945e4ad5ddbb095621b511d1f857.svn-base', 'site-content/.svn/pristine/06/062dd86811d0c988d237f713244486a39c052fc6.svn-base', 'site-content/.svn/pristine/06/0633fe64324a8834613d1c0c14d34e265c55b807.svn-base', 'site-content/.svn/pristine/06/06358a3b90502dc209faa90dd957ca1378e2bcc2.svn-base', 'site-content/.svn/pristine/06/0636594bb79b32be785452259e54b3705f719820.svn-base', 'site-content/.svn/pristine/06/063fee886d720a2d0db7a14fc22a4e64549f11e7.svn-base', 'site-content/.svn/pristine/06/0640bc70df1ed91181aa7f85d2220b0021526e77.svn-base', 'site-content/.svn/pristine/06/0643f6deeab7a3c094a49c3434edb0b17aa1034f.svn-base', 'site-content/.svn/pristine/06/064a01d20ae63f3debbffb1c072e4385b34cd1ae.svn-base', 'site-content/.svn/pristine/06/064fc45cd70e3df178f002d2e5600b9b9a7424f1.svn-base', 'site-content/.svn/pristine/06/0656af42a0f5f00dfd64042c281af5e1a7214f2e.svn-base', 'site-content/.svn/pristine/06/0658808804dc67c2e7455faedb08360552bf0515.svn-base', 'site-content/.svn/pristine/06/0662291a0e77852df07a7e4567aa7df5ff7a0f9b.svn-base', 'site-content/.svn/pristine/06/0664c52c85a229ff9a36fd6f148980bbcfd0af01.svn-base', 'site-content/.svn/pristine/06/0666348a5757bdadaa8f0103b8264aa71b5cb1e1.svn-base', 'site-content/.svn/pristine/06/06665c0971da0e004ee7f1ec8f3da67a0002ab0b.svn-base', 'site-content/.svn/pristine/06/06707b9df90192e4ad806424805fe7edc716008b.svn-base', 'site-content/.svn/pristine/06/067d7731cdc6a4d774fd46db4ac5312a4ef3715d.svn-base', 'site-content/.svn/pristine/06/067f889014792326b0f9553a859702da1b47d8f2.svn-base', 'site-content/.svn/pristine/06/068b3c9b63654064982ca951aafa40bae1344f14.svn-base', 'site-content/.svn/pristine/06/068e99c76b762a1356f8aaf6847192b1b468a7eb.svn-base', 'site-content/.svn/pristine/06/069cd4069933daa2040d6a40f7ae2cd63603fa4a.svn-base', 'site-content/.svn/pristine/06/069d2f8632d4655bded57d9d28b76e69531f7189.svn-base', 'site-content/.svn/pristine/06/06af906a88526c622f7568c3f5dab7941471d3a8.svn-base', 'site-content/.svn/pristine/06/06b87e78dc9ea770c4438c21746a67195b34b748.svn-base', 'site-content/.svn/pristine/06/06bc6ec9b583aec39cabb498b9fececd2a688180.svn-base', 'site-content/.svn/pristine/06/06ccdc337a8cac9fc2a43a84a40e34a8d9e5d442.svn-base', 'site-content/.svn/pristine/06/06d6740beff95c0ebd638cbe7888b102cc895bf2.svn-base', 'site-content/.svn/pristine/06/06db0f6b87ad8b34c5f4849947263f73f7fc2d27.svn-base', 'site-content/.svn/pristine/06/06db395ead89b87e00a0f8319c6b739cc00d1479.svn-base', 'site-content/.svn/pristine/06/06ea046882d32e21b2c3260ee941edbd8441baf9.svn-base', 'site-content/.svn/pristine/06/06ee8d596bcbc084138edbf55984f7674c650b6a.svn-base', 'site-content/.svn/pristine/06/06f07c311a3b37f4f7c22973d5ae85dd98a0d6ec.svn-base', 'site-content/.svn/pristine/06/06f09bf1267c3e95ef30232d379e71bcee4aacc0.svn-base', 'site-content/.svn/pristine/07/07060c18a7723d36126bac5d49048c18519ea99b.svn-base', 'site-content/.svn/pristine/07/07135ebd287f2e63325232530cc49c6b53814a30.svn-base', 'site-content/.svn/pristine/07/07139008ba5e01766cf9974714ac0ca62e503713.svn-base', 'site-content/.svn/pristine/07/07147f0768b6089fa0ae12dc4160ceb1a7846ce5.svn-base', 'site-content/.svn/pristine/07/071ff19927bafdbd2c419798c52bef15335854a0.svn-base', 'site-content/.svn/pristine/07/072d1cd68df0cd1baa88b2060345e9cdd1ce765b.svn-base', 'site-content/.svn/pristine/07/07481553ffb6b0c34a1f715e3003f6933a9361b5.svn-base', 'site-content/.svn/pristine/07/074a0eea055d2101d35b04ce1d67da22292e3528.svn-base', 'site-content/.svn/pristine/07/075898baff06200f5f86814814ef7d43699e27ff.svn-base', 'site-content/.svn/pristine/07/0758be49a043d7f035f2e2a4e7919b2d04f98ea5.svn-base', 'site-content/.svn/pristine/07/075a8acf3a9b87fe4b80581e1789ae52929d5030.svn-base', 'site-content/.svn/pristine/07/075ae0a89cec74fe1460bdd7c6af0bb82eaa13f7.svn-base', 'site-content/.svn/pristine/07/075f98e212281c9278e8bbb673358f6f684f2a65.svn-base', 'site-content/.svn/pristine/07/07658fb621577f885ab61328d3fcb27b333dabeb.svn-base', 'site-content/.svn/pristine/07/07849b81bb040b974b50d0e42d0a6f8f53ef9a0a.svn-base', 'site-content/.svn/pristine/07/078a6345d73e03ce383e8c6b7f39396789eebdd1.svn-base', 'site-content/.svn/pristine/07/0790f4767f0a0a1643cc4082df4a2792984f5421.svn-base', 'site-content/.svn/pristine/07/07989c7296f0b7c86aa6086c7435870db33930ce.svn-base', 'site-content/.svn/pristine/07/07a33a361cc92cefe5ee4fd897f6ce4473ead500.svn-base', 'site-content/.svn/pristine/07/07a66ea04b3c3f7a1260803b0069813a0fa1784c.svn-base', 'site-content/.svn/pristine/07/07ae494ad0d5c45a23db7972246562356aee6d98.svn-base', 'site-content/.svn/pristine/07/07bf52d1980b6583f4cc9870f50b4f777c1a0a10.svn-base', 'site-content/.svn/pristine/07/07c16efbdd62aca6a5b50e6e5b4f6387726c9748.svn-base', 'site-content/.svn/pristine/07/07c20887e136d5643c522329067e27b83f01c337.svn-base', 'site-content/.svn/pristine/07/07c25439fdd28a52db57a2d2d4ded51d20366ce8.svn-base', 'site-content/.svn/pristine/07/07c45279cf89b0638843fd100f40db9d9b3e51f5.svn-base', 'site-content/.svn/pristine/07/07c8b8a22b637a04f782a62f988ec3891c951a46.svn-base', 'site-content/.svn/pristine/07/07cdf32e47f8c1065a543f2223a321fb6b3552b6.svn-base', 'site-content/.svn/pristine/07/07d012d9c626d423fde30283260aad7f4c69ab99.svn-base', 'site-content/.svn/pristine/07/07d960740e9cea0c056a9f42aa2acd1efd3f0ddb.svn-base', 'site-content/.svn/pristine/07/07dc5bb2bf42bf5b3190d8c9ac1a67bb8a3cbe89.svn-base', 'site-content/.svn/pristine/07/07e4aee5bfca572d2a5c8a5b72447c98b6c101b4.svn-base', 'site-content/.svn/pristine/07/07ed063ccbd230bddd4a6ed24f9ff6f36d9afe6e.svn-base', 'site-content/.svn/pristine/07/07f525b1a41cff2db2cc314e35693532ddcc0861.svn-base', 'site-content/.svn/pristine/08/080f0e81689183a39c308a5868492594edf7fc78.svn-base', 'site-content/.svn/pristine/08/080f49e546f7d4e83e27301c12a38c6e89059c9e.svn-base', 'site-content/.svn/pristine/08/08133f5970ab406720a508c2b3d84329ffbbca08.svn-base', 'site-content/.svn/pristine/08/08295a829e552a021ad050c15fef35a564c8bd4e.svn-base', 'site-content/.svn/pristine/08/083a51c3a18603853aeb8cb71d9ffadaaa4f4c97.svn-base', 'site-content/.svn/pristine/08/084955240abc6ed13be20dcf5f010a2b4bdced06.svn-base']","Removed ""site-content"" directory.

This directory is managed by ""subversion"", not ""git"".",
f4195fec71325ad1a5a5aa9a1ff7cd0c3479a8b0,,,1,['.gitignore'],"Add "".gitignore"" file.",
5529f0cd521947604f578b0a14f5fdd836132b5f,,,54,"['.classpath', '.project', '.settings/org.eclipse.core.resources.prefs', '.settings/org.eclipse.jdt.core.prefs', '.settings/org.eclipse.m2e.core.prefs', 'log.txt', 'octave-workspace', 'target/antrun/build-main.xml', 'target/apidocs/META-INF/LICENSE.txt', 'target/apidocs/META-INF/NOTICE.txt', 'target/classes/META-INF/LICENSE.txt', 'target/classes/META-INF/NOTICE.txt', 'target/classes/assets/org/apache/commons/math4/exception/util/LocalizedFormats_fr.properties', 'target/classes/assets/org/apache/commons/math4/random/new-joe-kuo-6.1000', 'target/classes/org/apache/commons/complex/Complex.class', 'target/classes/org/apache/commons/complex/ComplexFormat.class', 'target/classes/org/apache/commons/complex/ComplexUtils.class', 'target/classes/org/apache/commons/complex/Quaternion.class', 'target/classes/org/apache/commons/complex/RootsOfUnity.class', 'target/jacoco.exec', 'target/maven-status/maven-compiler-plugin/compile/default-compile/createdFiles.lst', 'target/maven-status/maven-compiler-plugin/compile/default-compile/inputFiles.lst', 'target/maven-status/maven-compiler-plugin/testCompile/default-testCompile/createdFiles.lst', 'target/maven-status/maven-compiler-plugin/testCompile/default-testCompile/inputFiles.lst', 'target/osgi/MANIFEST.MF', 'target/surefire-reports/TEST-org.apache.commons.complex.ComplexFormatTest.xml', 'target/surefire-reports/TEST-org.apache.commons.complex.ComplexTest.xml', 'target/surefire-reports/TEST-org.apache.commons.complex.ComplexUtilsTest.xml', 'target/surefire-reports/TEST-org.apache.commons.complex.FrenchComplexFormatTest.xml', 'target/surefire-reports/TEST-org.apache.commons.complex.QuaternionTest.xml', 'target/surefire-reports/TEST-org.apache.commons.complex.RetryRunnerTest.xml', 'target/surefire-reports/TEST-org.apache.commons.complex.RootsOfUnityTest.xml', 'target/surefire-reports/org.apache.commons.complex.ComplexFormatTest.txt', 'target/surefire-reports/org.apache.commons.complex.ComplexTest.txt', 'target/surefire-reports/org.apache.commons.complex.ComplexUtilsTest.txt', 'target/surefire-reports/org.apache.commons.complex.FrenchComplexFormatTest.txt', 'target/surefire-reports/org.apache.commons.complex.QuaternionTest.txt', 'target/surefire-reports/org.apache.commons.complex.RetryRunnerTest.txt', 'target/surefire-reports/org.apache.commons.complex.RootsOfUnityTest.txt', 'target/test-classes/META-INF/LICENSE.txt', 'target/test-classes/META-INF/NOTICE.txt', 'target/test-classes/org/apache/commons/complex/ComplexFormatAbstractTest.class', 'target/test-classes/org/apache/commons/complex/ComplexFormatTest.class', 'target/test-classes/org/apache/commons/complex/ComplexTest$TestComplex.class', 'target/test-classes/org/apache/commons/complex/ComplexTest.class', 'target/test-classes/org/apache/commons/complex/ComplexUtilsTest.class', 'target/test-classes/org/apache/commons/complex/FrenchComplexFormatTest.class', 'target/test-classes/org/apache/commons/complex/QuaternionTest.class', 'target/test-classes/org/apache/commons/complex/Retry.class', 'target/test-classes/org/apache/commons/complex/RetryRunner$1.class', 'target/test-classes/org/apache/commons/complex/RetryRunner.class', 'target/test-classes/org/apache/commons/complex/RetryRunnerTest.class', 'target/test-classes/org/apache/commons/complex/RootsOfUnityTest.class', 'target/test-classes/org/apache/commons/complex/TestUtils.class']",Removed spurious files.,
64c1c0db65cac29b9c397438b8f3f840bbf5f424,ericbarnhill,ericbarnhill,29,"['.classpath', '.gitignore', '.project', '.settings/org.eclipse.core.resources.prefs', '.settings/org.eclipse.jdt.core.prefs', '.settings/org.eclipse.m2e.core.prefs', 'log.txt', 'src/test/java/org/apache/commons/complex/RootsOfUnityTest.java', 'target/classes/assets/org/apache/commons/math4/exception/util/LocalizedFormats_fr.properties', 'target/classes/assets/org/apache/commons/math4/random/new-joe-kuo-6.1000', 'target/jacoco.exec', 'target/maven-status/maven-compiler-plugin/compile/default-compile/createdFiles.lst', 'target/maven-status/maven-compiler-plugin/testCompile/default-testCompile/createdFiles.lst', 'target/osgi/MANIFEST.MF', 'target/surefire-reports/TEST-org.apache.commons.complex.ComplexFormatTest.xml', 'target/surefire-reports/TEST-org.apache.commons.complex.ComplexTest.xml', 'target/surefire-reports/TEST-org.apache.commons.complex.ComplexUtilsTest.xml', 'target/surefire-reports/TEST-org.apache.commons.complex.FrenchComplexFormatTest.xml', 'target/surefire-reports/TEST-org.apache.commons.complex.QuaternionTest.xml', 'target/surefire-reports/TEST-org.apache.commons.complex.RetryRunnerTest.xml', 'target/surefire-reports/TEST-org.apache.commons.complex.RootsOfUnityTest.xml', 'target/surefire-reports/org.apache.commons.complex.ComplexFormatTest.txt', 'target/surefire-reports/org.apache.commons.complex.ComplexTest.txt', 'target/surefire-reports/org.apache.commons.complex.ComplexUtilsTest.txt', 'target/surefire-reports/org.apache.commons.complex.FrenchComplexFormatTest.txt', 'target/surefire-reports/org.apache.commons.complex.QuaternionTest.txt', 'target/surefire-reports/org.apache.commons.complex.RetryRunnerTest.txt', 'target/surefire-reports/org.apache.commons.complex.RootsOfUnityTest.txt', 'target/test-classes/org/apache/commons/complex/RootsOfUnityTest.class']","Revert ""Two patches from Raymond DeCampo""

This reverts commit dbad5ed4b7d577f9cf8cc757807b4b886c9dcbbf.",
dbad5ed4b7d577f9cf8cc757807b4b886c9dcbbf,ericbarnhill,ericbarnhill,29,"['.classpath', '.gitignore', '.project', '.settings/org.eclipse.core.resources.prefs', '.settings/org.eclipse.jdt.core.prefs', '.settings/org.eclipse.m2e.core.prefs', 'log.txt', 'src/test/java/org/apache/commons/complex/RootsOfUnityTest.java', 'target/classes/assets/org/apache/commons/math4/exception/util/LocalizedFormats_fr.properties', 'target/classes/assets/org/apache/commons/math4/random/new-joe-kuo-6.1000', 'target/jacoco.exec', 'target/maven-status/maven-compiler-plugin/compile/default-compile/createdFiles.lst', 'target/maven-status/maven-compiler-plugin/testCompile/default-testCompile/createdFiles.lst', 'target/osgi/MANIFEST.MF', 'target/surefire-reports/TEST-org.apache.commons.complex.ComplexFormatTest.xml', 'target/surefire-reports/TEST-org.apache.commons.complex.ComplexTest.xml', 'target/surefire-reports/TEST-org.apache.commons.complex.ComplexUtilsTest.xml', 'target/surefire-reports/TEST-org.apache.commons.complex.FrenchComplexFormatTest.xml', 'target/surefire-reports/TEST-org.apache.commons.complex.QuaternionTest.xml', 'target/surefire-reports/TEST-org.apache.commons.complex.RetryRunnerTest.xml', 'target/surefire-reports/TEST-org.apache.commons.complex.RootsOfUnityTest.xml', 'target/surefire-reports/org.apache.commons.complex.ComplexFormatTest.txt', 'target/surefire-reports/org.apache.commons.complex.ComplexTest.txt', 'target/surefire-reports/org.apache.commons.complex.ComplexUtilsTest.txt', 'target/surefire-reports/org.apache.commons.complex.FrenchComplexFormatTest.txt', 'target/surefire-reports/org.apache.commons.complex.QuaternionTest.txt', 'target/surefire-reports/org.apache.commons.complex.RetryRunnerTest.txt', 'target/surefire-reports/org.apache.commons.complex.RootsOfUnityTest.txt', 'target/test-classes/org/apache/commons/complex/RootsOfUnityTest.class']",Two patches from Raymond DeCampo,
b0db8fca01f3c6949817052acb48cbb163955958,ericbarnhill,ericbarnhill,300,"['.classpath', '.project', '.settings/org.eclipse.core.resources.prefs', '.settings/org.eclipse.jdt.core.prefs', '.settings/org.eclipse.m2e.core.prefs', 'CONTRIBUTING.md', 'LICENSE.txt', 'NOTICE.txt', 'PROPOSAL.html', 'README.md', 'RELEASE-NOTES.txt', 'build.xml', 'checkstyle.xml', 'clirr-ignored.xml', 'doc/development/development.howto.txt', 'doc/release/release.howto.txt', 'doc/release/settings-security.xml', 'doc/release/settings.xml', 'findbugs-exclude-filter.xml', 'license-header.txt', 'log.txt', 'math-RC.sh', 'math-pre-RC.sh', 'octave-workspace', 'pmd-ruleset.xml', 'pom.xml', 'site-content/.svn/entries', 'site-content/.svn/format', 'site-content/.svn/pristine/00/0005dbfe2dc2b1d6cf19f0e30ace5c4d707c5e1f.svn-base', 'site-content/.svn/pristine/00/0016aeb7bb938545b97c7cd73f45a2d32e8612f3.svn-base', 'site-content/.svn/pristine/00/001d5d1b9f07d1ab6dbe7002ff5bdc086f3f0224.svn-base', 'site-content/.svn/pristine/00/0046a8f6bd12e630b9ceb5938318edadb203823a.svn-base', 'site-content/.svn/pristine/00/00479734f7eb48b794b272cb3925748d7756a83d.svn-base', 'site-content/.svn/pristine/00/0048c3b3b02893cf14c8c8a8283703d6333fdf9a.svn-base', 'site-content/.svn/pristine/00/004cf552025e4496cd542dd1a0bc8abcac8cbdf8.svn-base', 'site-content/.svn/pristine/00/004d1ebf70b1c6e0d66098448fd9422b25183f4c.svn-base', 'site-content/.svn/pristine/00/00584eded735db5b5bbeb393f2ca5bf1e8cf7f86.svn-base', 'site-content/.svn/pristine/00/0062f6ff5058762551f99b63a17f4c9fa06e65b0.svn-base', 'site-content/.svn/pristine/00/0075318a7def8d87ce5330d1c6fe0c71c077eef9.svn-base', 'site-content/.svn/pristine/00/008860ff6b81bddba1ec0fe01c6b9371a3015f17.svn-base', 'site-content/.svn/pristine/00/0090d83b4de4dd55e4710166ecb79d69cdd6ab4a.svn-base', 'site-content/.svn/pristine/00/0099dee2b2c41f911fadd8277c0e1a64fac6d472.svn-base', 'site-content/.svn/pristine/00/00a74bfe4cec91974e2a34cc98c7a2f9b440a20a.svn-base', 'site-content/.svn/pristine/00/00a80ebdf9f3fc1ac570ea1463a68f0cadfd622f.svn-base', 'site-content/.svn/pristine/00/00ad54137d2fc827d768082ee54e6f5eb5e6b511.svn-base', 'site-content/.svn/pristine/00/00b4d24f983da1d29823fe71b94f6e73753316ae.svn-base', 'site-content/.svn/pristine/00/00be11ea5ec1d596206f1fbf5ea24f00b947f584.svn-base', 'site-content/.svn/pristine/00/00c41ce0d2341a560cd26f74fa06a0955214e277.svn-base', 'site-content/.svn/pristine/00/00ce289b18644a47b9529086b18c812713897b33.svn-base', 'site-content/.svn/pristine/00/00d5cb4a9e8f93226bbd756539031dc39759e16b.svn-base', 'site-content/.svn/pristine/00/00d992b5cc0aafcc36ada48008d03a1171ef3dd2.svn-base', 'site-content/.svn/pristine/00/00e86b4ed32be23b9c8e52e00af52e524a028fc0.svn-base', 'site-content/.svn/pristine/00/00e8d92a858a56fb80e271c7a9ca567b4e157507.svn-base', 'site-content/.svn/pristine/00/00eb30976fade92e55064ed2eb1635ef4d92a57c.svn-base', 'site-content/.svn/pristine/00/00f5f87327fe16af2e08b5fe9ac2494c5f257788.svn-base', 'site-content/.svn/pristine/01/0105e6430b10c526de3f811c2c9c28ded7073a95.svn-base', 'site-content/.svn/pristine/01/01066afe0b60f189fd7c20f239a85e737627ff93.svn-base', 'site-content/.svn/pristine/01/011cc88750c2944aad9860141658a8f81e359c2a.svn-base', 'site-content/.svn/pristine/01/012bc7bf2205612733fb819ec4eb39b388ec55ab.svn-base', 'site-content/.svn/pristine/01/012e33297ff9a0e997d5d36f5d3ebb7813a6d745.svn-base', 'site-content/.svn/pristine/01/012f9934c3c12a984d8aa0d591f1663af38d8ec9.svn-base', 'site-content/.svn/pristine/01/0132500fd9afb314f1efaa902800a0332573ffd6.svn-base', 'site-content/.svn/pristine/01/0132d2e3b78618347a9343e12231fd8ee7ac19f4.svn-base', 'site-content/.svn/pristine/01/01375b6ffa2aa403caa00589a807ec390379da49.svn-base', 'site-content/.svn/pristine/01/0137b10ff2027ef0336b9acf5ffae9a416344aa5.svn-base', 'site-content/.svn/pristine/01/014e0f8527c5ab9e398c8667fdbd2c260c128783.svn-base', 'site-content/.svn/pristine/01/01537ca4c7defdef6d3b73f3ae9ddd8477d5e619.svn-base', 'site-content/.svn/pristine/01/015eab5accf046f00e97e246bfa9f061afd64447.svn-base', 'site-content/.svn/pristine/01/0160bfcf9f29013ca09c1cd4810a80bb97b42234.svn-base', 'site-content/.svn/pristine/01/01638360b7ca4c2419771228ee93d64999e81cd8.svn-base', 'site-content/.svn/pristine/01/01654817fbfa232644108b5640f270f2df04ee8f.svn-base', 'site-content/.svn/pristine/01/016a6f73ada6cb9546dd6f03cb9ae04845221b57.svn-base', 'site-content/.svn/pristine/01/0180a80098e8082e5600758d31a24aaa52111a5b.svn-base', 'site-content/.svn/pristine/01/01831738937f2dbdbe9e9f3ee5e697b1bded6d31.svn-base', 'site-content/.svn/pristine/01/018a0a37eb50756c7f1d6da7dd5ce005fee54cd3.svn-base', 'site-content/.svn/pristine/01/018bea896908441d874252ea5ccda6d39cb8eb6b.svn-base', 'site-content/.svn/pristine/01/018eec2b19174362ea8ab1c13d682727c9422167.svn-base', 'site-content/.svn/pristine/01/0195b47df267c2516cc89a22f433228a4d12e3ce.svn-base', 'site-content/.svn/pristine/01/019935469ea856554baf2e88654f57e7edecfb36.svn-base', 'site-content/.svn/pristine/01/019a39efbb775602a7666dc02926deacb70fcd96.svn-base', 'site-content/.svn/pristine/01/019ba2079f43dde18533cc55b38d33e7f822ae6f.svn-base', 'site-content/.svn/pristine/01/01a1b81a27e3e75ac3704cf69c156c20f29374d6.svn-base', 'site-content/.svn/pristine/01/01a5b514be40045297beae48242576ba96a19dd8.svn-base', 'site-content/.svn/pristine/01/01b1c8e58b8edaf62207fec2a0f4e0c3fd53d82b.svn-base', 'site-content/.svn/pristine/01/01b308ff3db47a0404363acdcccadd471dab93fe.svn-base', 'site-content/.svn/pristine/01/01bd7b0c2d4d795a10d660496202021513fb2d34.svn-base', 'site-content/.svn/pristine/01/01bdd85a5975d46e61e375217850a716db1fc4cb.svn-base', 'site-content/.svn/pristine/01/01bf880dd62361d32e359737d6964ca4de5d8057.svn-base', 'site-content/.svn/pristine/01/01c0af4f8fce9b0c40c2a5cad184c5aade2184f6.svn-base', 'site-content/.svn/pristine/01/01c41f02a73de5bf01d35dc9bb44fe132f85e708.svn-base', 'site-content/.svn/pristine/01/01c8f719d56d9adebd516e7e48faca7f4444ca9c.svn-base', 'site-content/.svn/pristine/01/01c9bb46c48a8bf971a4718ff3758877b82a840b.svn-base', 'site-content/.svn/pristine/01/01cfc20fad9369120b00fb6b321f2a5496dc3fc3.svn-base', 'site-content/.svn/pristine/01/01d3ae17bb68857d6a41bc65263c3ce38e84ae26.svn-base', 'site-content/.svn/pristine/01/01f77e104cccca12a2c234d85d40672120bda23c.svn-base', 'site-content/.svn/pristine/01/01f7859be5a1e13eaaf8d5eb15ea925beb91d286.svn-base', 'site-content/.svn/pristine/01/01f83bdb754117eb46e1e0a5337a16a0beccc7e6.svn-base', 'site-content/.svn/pristine/01/01fcb1d2c9ee7d000974da82f3380bc5dac4e767.svn-base', 'site-content/.svn/pristine/01/01fdb10ce7fed68c77a9bd4de95462b962759a78.svn-base', 'site-content/.svn/pristine/02/020d3baf1ad2b592d290dea6d2c60090f19091cb.svn-base', 'site-content/.svn/pristine/02/021736bbfdbd6908de696e000bd58197d394834a.svn-base', 'site-content/.svn/pristine/02/022a650e7c2bd0eb9bd6ea2cb77af51861febc37.svn-base', 'site-content/.svn/pristine/02/022e4a69e828b7270d1373cc33ad7c42f1eacd49.svn-base', 'site-content/.svn/pristine/02/0234cfa6399d85eeba392733975ff2491b8d05c3.svn-base', 'site-content/.svn/pristine/02/0235e44f5ce576c3d01cf47bc88647c94968752c.svn-base', 'site-content/.svn/pristine/02/02400ede19d9f7e7b01938f2dea12f323ef221af.svn-base', 'site-content/.svn/pristine/02/024614075c5e6947fa2c054223872e49bdc79af4.svn-base', 'site-content/.svn/pristine/02/024fb120aee05a4a6247ac64808ea319eb07b41d.svn-base', 'site-content/.svn/pristine/02/02535b2fe0091fb1db30f4498a4d773eec17828f.svn-base', 'site-content/.svn/pristine/02/0254b33a586b348df788298fa7dfdcc45cd88bcf.svn-base', 'site-content/.svn/pristine/02/0258f6d5bc57254aafa9aad01b7f448edd397aa5.svn-base', 'site-content/.svn/pristine/02/025d8723c696f975683abf23fe48eb0590158d23.svn-base', 'site-content/.svn/pristine/02/025dd274e61ae4e2987b5ed84bf12b696e6024ae.svn-base', 'site-content/.svn/pristine/02/026178c649ae6d4853923a0939d684a9b88caac5.svn-base', 'site-content/.svn/pristine/02/0263fb0d61e2be261b279731f72958825c748d1d.svn-base', 'site-content/.svn/pristine/02/026c4868f5e04189f318672cc67485ce9af9333d.svn-base', 'site-content/.svn/pristine/02/026dc539e335ab389d5f8c8ae723df1008733be1.svn-base', 'site-content/.svn/pristine/02/02754c7ece11a0360a4af146048e6ed50c2fc352.svn-base', 'site-content/.svn/pristine/02/02970ba40df127f3625edff272a50883d97b011e.svn-base', 'site-content/.svn/pristine/02/029fb3a0a79cb81ca4b4b5bcaece45a1276824f8.svn-base', 'site-content/.svn/pristine/02/02a02b5104c9f854683a4ebfddd03525b4940af7.svn-base', 'site-content/.svn/pristine/02/02a7a7896e1bc070115819b9683766d3d9dc6956.svn-base', 'site-content/.svn/pristine/02/02aad24ebafaf40059d65003a8d2e0de104aada7.svn-base', 'site-content/.svn/pristine/02/02af31646fd275519e66db7d9c4b3c22caade1cf.svn-base', 'site-content/.svn/pristine/02/02b056a24a8bcf4171e20ddfd78c4d83ff8f5839.svn-base', 'site-content/.svn/pristine/02/02b7864dffc5e9eb196674eb7caa2fa4cb9b7a54.svn-base', 'site-content/.svn/pristine/02/02bc6949093cbcecf73a6bb08b46995dfedecddf.svn-base', 'site-content/.svn/pristine/02/02c9c5677c673af6f96ddf90ecf3f71cd287d4bf.svn-base', 'site-content/.svn/pristine/02/02cb7455c48d59a21ca817d9815417858cd188fc.svn-base', 'site-content/.svn/pristine/02/02d24610076d840918335ea452345f7decba410f.svn-base', 'site-content/.svn/pristine/02/02d98ee9bc88dba854c0ec849c41be4f69ed7b2d.svn-base', 'site-content/.svn/pristine/02/02e7f2399e3e46b04ce5659d7e773b688a68e19a.svn-base', 'site-content/.svn/pristine/02/02f89ff91121c91448ad05d05e81407386349676.svn-base', 'site-content/.svn/pristine/02/02f984fbe254a9ef51432be90f1286fb60fda9ba.svn-base', 'site-content/.svn/pristine/03/030402267c2f0a52c686c13b8f60876266c7df54.svn-base', 'site-content/.svn/pristine/03/03043560e7c9217c0eec5f12ea757b402c913d21.svn-base', 'site-content/.svn/pristine/03/0305b889c3297c01a04339b2237acd9b3062b1de.svn-base', 'site-content/.svn/pristine/03/030ee1cfc0956f6f090c1aa47690331bb8a624aa.svn-base', 'site-content/.svn/pristine/03/031f9279d9b8d0456c816226550bc0a293881ff9.svn-base', 'site-content/.svn/pristine/03/032b94ca8bba33e7ee8fbf833dea7bd29d5d5433.svn-base', 'site-content/.svn/pristine/03/032d45f1be4b0e7cf7c72df5e4976b524633c611.svn-base', 'site-content/.svn/pristine/03/032fb53668c7b67e48e7eb5f92c56e60f63c0bd8.svn-base', 'site-content/.svn/pristine/03/033af26c83a4ca78b766a7bf6890a48da64e3733.svn-base', 'site-content/.svn/pristine/03/033ba4da155c4603ace1474e11133da7499b39a2.svn-base', 'site-content/.svn/pristine/03/03480fa871300fb0bcc9a8a22d1c017a043f2c93.svn-base', 'site-content/.svn/pristine/03/034c9d72dbab6638a375dc5056b97f038b797bbd.svn-base', 'site-content/.svn/pristine/03/034d59488fe9a1005fcb0d28b41181e2ce6c0ff3.svn-base', 'site-content/.svn/pristine/03/0357b6808a42f9a4d3449d8de05ac3c118a65c60.svn-base', 'site-content/.svn/pristine/03/035ac18e42ad45fa598da33ad805832eba490c0d.svn-base', 'site-content/.svn/pristine/03/03601cd8f94efbdcd90b2b550fa156ead9192d2b.svn-base', 'site-content/.svn/pristine/03/0363ca024da7cae3bb2e5a49cdc13667f6fd233e.svn-base', 'site-content/.svn/pristine/03/0364fe56afa958763e6b75322339537d1101e1fd.svn-base', 'site-content/.svn/pristine/03/036f7cbcd3e9bebe8ac24b49c75d4ac29caaae30.svn-base', 'site-content/.svn/pristine/03/03863dd02fda50ba8aca4f84b230df576bf8e18c.svn-base', 'site-content/.svn/pristine/03/038f5906d71bb6126533f5ca205223a0e54c2172.svn-base', 'site-content/.svn/pristine/03/039cf6b7c07826d9d1841d4291d0c357ce11282c.svn-base', 'site-content/.svn/pristine/03/039d92e75964c2960dbb77eb5c9341df23ac5ecc.svn-base', 'site-content/.svn/pristine/03/03b6bcc94f099b937560e77e17c842ef630fffbd.svn-base', 'site-content/.svn/pristine/03/03bdab13a4adc67ded4eb45594d01f2a4903e094.svn-base', 'site-content/.svn/pristine/03/03bed2f5b305df2a3b2274674c1eed4e6c31703a.svn-base', 'site-content/.svn/pristine/03/03ca9ef820f2c4963f37035e82220d36c7230f37.svn-base', 'site-content/.svn/pristine/03/03cc1255ba329c943cdb9e4443019aaaaef135c4.svn-base', 'site-content/.svn/pristine/03/03cd6d1a75192c38b144519b8e0fe5be75494a81.svn-base', 'site-content/.svn/pristine/03/03cd7af8f308d2bf9c58c5c17763634e2306837a.svn-base', 'site-content/.svn/pristine/03/03d1085f8c0d9acd2798328866494bffd28f50fd.svn-base', 'site-content/.svn/pristine/03/03d4dc43c127fa882ae276ba71918f42b2896d23.svn-base', 'site-content/.svn/pristine/03/03db04a245323a8c2887de5b238e2f429bbc178b.svn-base', 'site-content/.svn/pristine/03/03dde7a393a3030aa2cb8bb7d117ae60e0c165b0.svn-base', 'site-content/.svn/pristine/03/03e5cb4c148e2cf962ebd5da1c5a6b83439c4907.svn-base', 'site-content/.svn/pristine/03/03e8ea937934efe2d1c7a43f3facdc5608b63117.svn-base', 'site-content/.svn/pristine/03/03f813052e371f47e23b55592ad3b76600b3c2c2.svn-base', 'site-content/.svn/pristine/04/0400f403db78a35ecc7c09ac8968ab156cf0bd43.svn-base', 'site-content/.svn/pristine/04/0408a9222bbb2ed0a2dc0d095371a6aec9f05114.svn-base', 'site-content/.svn/pristine/04/040d8672c2f4c64bcb6d584b7bf1580b30bfbf82.svn-base', 'site-content/.svn/pristine/04/04143e6999813b2e28d1fed504f92a10d8ab1cfa.svn-base', 'site-content/.svn/pristine/04/041ddc1c191707212f28b391f180201164050cf6.svn-base', 'site-content/.svn/pristine/04/0431958e36e50ca1c5bd5c3b4eb5c0318d671c3c.svn-base', 'site-content/.svn/pristine/04/04354b0f10c37d60a81b3e18a822d178c9be7692.svn-base', 'site-content/.svn/pristine/04/043b4201a6be03513e0bdd80e26d92309bb86995.svn-base', 'site-content/.svn/pristine/04/044a3f3f9e0124e8d9688ccd6d628066af6e5543.svn-base', 'site-content/.svn/pristine/04/044da057b9ac94024ba208dc571fa5726c7000d8.svn-base', 'site-content/.svn/pristine/04/045ff601b7e50b6cf68cd5030cd3caaa41636768.svn-base', 'site-content/.svn/pristine/04/04666bd68ed355d590387e52fec7ef52cee7a48c.svn-base', 'site-content/.svn/pristine/04/0468fb6e24c4e730ff22b6f988eec049627fddaf.svn-base', 'site-content/.svn/pristine/04/0469939989e60542ce9f38703b06e6806d831e9b.svn-base', 'site-content/.svn/pristine/04/04777645254ff0b22944c1ef46bcbd79669f2d8e.svn-base', 'site-content/.svn/pristine/04/04a86be5d58aae681156a81b89565cc77e919a2d.svn-base', 'site-content/.svn/pristine/04/04aeee60e3967a254f9f06aea96a90bac786a7ec.svn-base', 'site-content/.svn/pristine/04/04af0f59716446dac95a14e7e520cd3907572ec4.svn-base', 'site-content/.svn/pristine/04/04b11c5c54543318084f5939151a7e3f9b702347.svn-base', 'site-content/.svn/pristine/04/04b3d9fe10d8843f831d0406e0b83a74bbe98be0.svn-base', 'site-content/.svn/pristine/04/04bbbb2c042f5abe57ee19469e70af1acc36ad98.svn-base', 'site-content/.svn/pristine/04/04beee1b647717925422b9ebde79ca0de8b5aa7f.svn-base', 'site-content/.svn/pristine/04/04c235c553e4747ac4d82b8d31891fb1317fd80b.svn-base', 'site-content/.svn/pristine/04/04c52b7ce83ba93ea84a5637b5d40da3964bb43d.svn-base', 'site-content/.svn/pristine/04/04cb804e1dec69bac8f7e72a73279e50ac5e2b16.svn-base', 'site-content/.svn/pristine/04/04ce002c9f9a9b91d61899fcbec15d440f8712ef.svn-base', 'site-content/.svn/pristine/04/04d34fff33c5e7696d6af00b33b4ed5ed95ac910.svn-base', 'site-content/.svn/pristine/04/04ec73dc578873efd884ddcbf9ff4cbe9c14895f.svn-base', 'site-content/.svn/pristine/04/04f17904df890f466c9e3f08dbb21beabb586931.svn-base', 'site-content/.svn/pristine/04/04f2dc57301b15a8c2ca2d2e7b71f21201073d0f.svn-base', 'site-content/.svn/pristine/04/04f59602fb64c9424416ed366c0a40e9b8f925f1.svn-base', 'site-content/.svn/pristine/04/04f8023a929e8c97cb05b7cc4a609240423a6c28.svn-base', 'site-content/.svn/pristine/04/04fa70c9ffe8e1c9457b901cdecbf43de21b818e.svn-base', 'site-content/.svn/pristine/04/04fe86fa960174ca87e9fcced19d0ca27256c59d.svn-base', 'site-content/.svn/pristine/05/050855af4fd561462df47d9a7e26e0488d2656d6.svn-base', 'site-content/.svn/pristine/05/050909f812c03d4b5a777be040b382352edf34fb.svn-base', 'site-content/.svn/pristine/05/050a03d311c74167d150b8d5086efddb09f88041.svn-base', 'site-content/.svn/pristine/05/0511bcdaab3fcf657ab313116d1aa0664b1e9e44.svn-base', 'site-content/.svn/pristine/05/05136e8c99bed61cf5a4d9edab53478bfece5a1b.svn-base', 'site-content/.svn/pristine/05/0515e09bf5d9368bf67113085effac7ff6fd1af3.svn-base', 'site-content/.svn/pristine/05/05237847808c4f130f42e012422aff139192c1fe.svn-base', 'site-content/.svn/pristine/05/0529bbe7c2af2277ee218c5967c0d9bfbe624b28.svn-base', 'site-content/.svn/pristine/05/0529c2cb1f8ed187dadeb801003dca42bc258761.svn-base', 'site-content/.svn/pristine/05/0529d5f7a9d6b9aae82fe047e32ad1352dfa3a86.svn-base', 'site-content/.svn/pristine/05/052b797b30b300ec4013adbad7597edbae189ef4.svn-base', 'site-content/.svn/pristine/05/0533d43c08fd783748e7d41bbd88d187fb0f81d1.svn-base', 'site-content/.svn/pristine/05/0542b4deb2d10c511bb3af31f5af31893c459eca.svn-base', 'site-content/.svn/pristine/05/05436f8ac5edd2a788065c849d3256eff4ab8abd.svn-base', 'site-content/.svn/pristine/05/054c6d7b1b864ecd49605b58793ddcbb4e9b2831.svn-base', 'site-content/.svn/pristine/05/0552c15b51ef70d24219e9ea1ba3197861e75f10.svn-base', 'site-content/.svn/pristine/05/0552cb0a61ab1ad0c96f61654f2c73f0a56f4283.svn-base', 'site-content/.svn/pristine/05/0560355a0bea7a06a1e7514217ce48b45872a6b3.svn-base', 'site-content/.svn/pristine/05/056036eec389c367e104189cc5aef5f1bd054900.svn-base', 'site-content/.svn/pristine/05/05605fe6dcf73dccc2999c0f2a9a2641f4d8539c.svn-base', 'site-content/.svn/pristine/05/056296ea97240393b9d6163118b2e70da46e20d0.svn-base', 'site-content/.svn/pristine/05/05672c1dee60d47c54abc88005a69f68cf762a25.svn-base', 'site-content/.svn/pristine/05/0567d89002edc2c4db5434c27fc17116519b37ce.svn-base', 'site-content/.svn/pristine/05/05742e5e14206d95c2a1b97a7e2df86055cbfdb3.svn-base', 'site-content/.svn/pristine/05/057a9e28997b330167a2f86a894b7593cb094052.svn-base', 'site-content/.svn/pristine/05/05801f25342628668855c3c53cf63af64737236b.svn-base', 'site-content/.svn/pristine/05/0581f3a857e3023c270ae7ae7893f21c4138a71f.svn-base', 'site-content/.svn/pristine/05/058272b0c355d2754055e4dc87ef880eb6772439.svn-base', 'site-content/.svn/pristine/05/05860b1231b4155d5e6f7d3c4e4a2d8d8a8037f6.svn-base', 'site-content/.svn/pristine/05/058c19d7fb372dac7d9a2dfb46c3646540cf23d3.svn-base', 'site-content/.svn/pristine/05/058d5c7a1b69ad31f68cb7944fdce3d0896008f7.svn-base', 'site-content/.svn/pristine/05/0592dae0108a4bdccb19b4f1d79a39053919e999.svn-base', 'site-content/.svn/pristine/05/0595ce493cd92b77128a9cb98e79cef6b904e801.svn-base', 'site-content/.svn/pristine/05/0597066c3e598e10948986c4811d2d63a655b213.svn-base', 'site-content/.svn/pristine/05/059d998322f4e4e877d5c1a7690baa1db2156576.svn-base', 'site-content/.svn/pristine/05/05a6e213072470f3252874532e0ea97da45e6897.svn-base', 'site-content/.svn/pristine/05/05a7c706916eb74977f5027b9f596daa97e4cc9d.svn-base', 'site-content/.svn/pristine/05/05b16476f578f4422b7c241c9b46de40302625fa.svn-base', 'site-content/.svn/pristine/05/05b6ad03879830b2290e777f1696eaf2836de602.svn-base', 'site-content/.svn/pristine/05/05c55503e74f7e69c60cdafe0d5e6796696f6b94.svn-base', 'site-content/.svn/pristine/05/05cc158164f15697d03a8686521fc02724f167a0.svn-base', 'site-content/.svn/pristine/05/05e77da34b2d9ca3c34941b19c62494d2a89fffa.svn-base', 'site-content/.svn/pristine/05/05f78fcd7f661e1425b88d468dd53e9e0b131851.svn-base', 'site-content/.svn/pristine/06/060fb1b04e9614e32ac41c30b407244cfe1f444e.svn-base', 'site-content/.svn/pristine/06/0610c7cf999e028d85dba8bdc7097be6b825574f.svn-base', 'site-content/.svn/pristine/06/061feea0b6eb9c38a4f3469c3e6f657513afba3a.svn-base', 'site-content/.svn/pristine/06/0629d9f90b637f2566b8b9503de8b61a45c0b67d.svn-base', 'site-content/.svn/pristine/06/062b7177791e945e4ad5ddbb095621b511d1f857.svn-base', 'site-content/.svn/pristine/06/062dd86811d0c988d237f713244486a39c052fc6.svn-base', 'site-content/.svn/pristine/06/0633fe64324a8834613d1c0c14d34e265c55b807.svn-base', 'site-content/.svn/pristine/06/06358a3b90502dc209faa90dd957ca1378e2bcc2.svn-base', 'site-content/.svn/pristine/06/0636594bb79b32be785452259e54b3705f719820.svn-base', 'site-content/.svn/pristine/06/063fee886d720a2d0db7a14fc22a4e64549f11e7.svn-base', 'site-content/.svn/pristine/06/0640bc70df1ed91181aa7f85d2220b0021526e77.svn-base', 'site-content/.svn/pristine/06/0643f6deeab7a3c094a49c3434edb0b17aa1034f.svn-base', 'site-content/.svn/pristine/06/064a01d20ae63f3debbffb1c072e4385b34cd1ae.svn-base', 'site-content/.svn/pristine/06/064fc45cd70e3df178f002d2e5600b9b9a7424f1.svn-base', 'site-content/.svn/pristine/06/0656af42a0f5f00dfd64042c281af5e1a7214f2e.svn-base', 'site-content/.svn/pristine/06/0658808804dc67c2e7455faedb08360552bf0515.svn-base', 'site-content/.svn/pristine/06/0662291a0e77852df07a7e4567aa7df5ff7a0f9b.svn-base', 'site-content/.svn/pristine/06/0664c52c85a229ff9a36fd6f148980bbcfd0af01.svn-base', 'site-content/.svn/pristine/06/0666348a5757bdadaa8f0103b8264aa71b5cb1e1.svn-base', 'site-content/.svn/pristine/06/06665c0971da0e004ee7f1ec8f3da67a0002ab0b.svn-base', 'site-content/.svn/pristine/06/06707b9df90192e4ad806424805fe7edc716008b.svn-base', 'site-content/.svn/pristine/06/067d7731cdc6a4d774fd46db4ac5312a4ef3715d.svn-base', 'site-content/.svn/pristine/06/067f889014792326b0f9553a859702da1b47d8f2.svn-base', 'site-content/.svn/pristine/06/068b3c9b63654064982ca951aafa40bae1344f14.svn-base', 'site-content/.svn/pristine/06/068e99c76b762a1356f8aaf6847192b1b468a7eb.svn-base', 'site-content/.svn/pristine/06/069cd4069933daa2040d6a40f7ae2cd63603fa4a.svn-base', 'site-content/.svn/pristine/06/069d2f8632d4655bded57d9d28b76e69531f7189.svn-base', 'site-content/.svn/pristine/06/06af906a88526c622f7568c3f5dab7941471d3a8.svn-base', 'site-content/.svn/pristine/06/06b87e78dc9ea770c4438c21746a67195b34b748.svn-base', 'site-content/.svn/pristine/06/06bc6ec9b583aec39cabb498b9fececd2a688180.svn-base', 'site-content/.svn/pristine/06/06ccdc337a8cac9fc2a43a84a40e34a8d9e5d442.svn-base', 'site-content/.svn/pristine/06/06d6740beff95c0ebd638cbe7888b102cc895bf2.svn-base', 'site-content/.svn/pristine/06/06db0f6b87ad8b34c5f4849947263f73f7fc2d27.svn-base', 'site-content/.svn/pristine/06/06db395ead89b87e00a0f8319c6b739cc00d1479.svn-base', 'site-content/.svn/pristine/06/06ea046882d32e21b2c3260ee941edbd8441baf9.svn-base', 'site-content/.svn/pristine/06/06ee8d596bcbc084138edbf55984f7674c650b6a.svn-base', 'site-content/.svn/pristine/06/06f07c311a3b37f4f7c22973d5ae85dd98a0d6ec.svn-base', 'site-content/.svn/pristine/06/06f09bf1267c3e95ef30232d379e71bcee4aacc0.svn-base', 'site-content/.svn/pristine/07/07060c18a7723d36126bac5d49048c18519ea99b.svn-base', 'site-content/.svn/pristine/07/07135ebd287f2e63325232530cc49c6b53814a30.svn-base', 'site-content/.svn/pristine/07/07139008ba5e01766cf9974714ac0ca62e503713.svn-base', 'site-content/.svn/pristine/07/07147f0768b6089fa0ae12dc4160ceb1a7846ce5.svn-base', 'site-content/.svn/pristine/07/071ff19927bafdbd2c419798c52bef15335854a0.svn-base', 'site-content/.svn/pristine/07/072d1cd68df0cd1baa88b2060345e9cdd1ce765b.svn-base', 'site-content/.svn/pristine/07/07481553ffb6b0c34a1f715e3003f6933a9361b5.svn-base', 'site-content/.svn/pristine/07/074a0eea055d2101d35b04ce1d67da22292e3528.svn-base', 'site-content/.svn/pristine/07/075898baff06200f5f86814814ef7d43699e27ff.svn-base', 'site-content/.svn/pristine/07/0758be49a043d7f035f2e2a4e7919b2d04f98ea5.svn-base', 'site-content/.svn/pristine/07/075a8acf3a9b87fe4b80581e1789ae52929d5030.svn-base', 'site-content/.svn/pristine/07/075ae0a89cec74fe1460bdd7c6af0bb82eaa13f7.svn-base', 'site-content/.svn/pristine/07/075f98e212281c9278e8bbb673358f6f684f2a65.svn-base', 'site-content/.svn/pristine/07/07658fb621577f885ab61328d3fcb27b333dabeb.svn-base']",First commit to commons-complex,
